{"version":3,"sources":["img/roundlogo.png","img/eViralLogo2.png","img/beviral.png","img/defaultProfile.png","img/metamask.png","img/walletconnect.png","components/Alert.js","components/Navbar.js","components/CardItem.js","components/Cards.js","components/OnRamper.js","components/HeroSection.js","components/pages/home.js","components/pages/platform.js","img/defaultLandscape.jpg","img/construction.png","components/CreateProject.js","components/Profile.js","components/UpdateProfile.js","components/AboutMe.js","components/Bookmark.js","components/Rating.js","components/ProjectCard.js","components/MyProjectsCard.js","components/Carousel.js","components/ProjectGridBox.js","components/LoadMyProjects.js","components/SaveProfile.js","components/ProfileCard.js","components/pages/myprofile.js","components/Projects.js","components/pages/projects.js","components/RatingProject.js","components/ReviewCard.js","components/Reviews.js","components/SocialIconBar.js","components/SendMessagePopUp.js","components/EditProject.js","components/ProjectPage.js","components/ProjectData.js","components/ProfileGridBox.js","components/LoadUsers.js","components/pages/profiles.js","components/UserProfile.js","components/AboutUser.js","components/UserProfileData.js","components/ProfileMessageCard.js","components/ChatPage.js","App.js","index.js"],"names":["Alert","props","className","src","Logo","content","onClick","visible","Navbar","useMoralis","authenticate","isAuthenticated","user","logout","Moralis","auth","useState","click","setClick","setButton","dropdown","setDropdown","balance","setBalance","balanceBSC","setBalanceBSC","avatar","profilePic","setProfilePic","username","setUsername","setDisplayConnect","connectMenu","setOpenConnectMenu","closeMobileMenu","authenticateUserMM","a","console","log","alert","renderBalance","attributes","_url","authenticateUserWC","provider","logoutUser","window","location","href","goHome","Web3","getERC20","tokenAddress","eViralBalance","chain","beViralBalance","eBalance","bBalance","toFixed","bvBalance","useEffect","addEventListener","innerWidth","to","class","eViralLogo","alt","beViralLogo","mmLogo","wcLogo","CardItem","path","target","label","text","Cards","pathname","OnRamper","defaultCrypto","id","title","frameborder","allow","HeroSection","classname","autoPlay","loop","muted","width","variant","Home","Platform","height","CreateNewProject","saveFile","useMoralisFile","setTitle","summary","setSummary","description","setDescription","website","setWebsite","twitter","setTwitter","telegram","setTelegram","discord","setDiscord","linkedIn","setLinkedIn","youtube","setYoutube","twitch","setTwitch","isLive","setIsLive","alertVisible","setAlertVisible","alertContents","setAlertContents","photoFile","setPhotoFile","photoFileName","setPhotoFileName","construction","projectPhotoPreview","setProjectPhotoPreview","createNewProject","newProject","Object","extend","project","file","name","date","Date","User","current","currentUser","userObjectId","saveIPFS","fileIpfs","set","toLocaleDateString","undefined","save","relation","add","closeCreateProjectMenu","htmlFor","style","color","type","accept","multiple","required","onChange","e","files","URL","createObjectURL","placeholder","value","event","currentTarget","rows","maxLength","Profile","error","isUploading","moralisFile","landscape","setLandscape","balanceETH","setBalanceETH","changeProfilePicMenu","setOpenChangeProfilePicMenu","onSubmitPhoto","editProfileCheck","openEditProfileMenu","defaultProfile","landscapePic","defaultLandscape","bio","profileCreated","openCreateProjectMenu","onSubmit","UpdateProfile","setUserData","landscapeFile","setLandscapeFile","landscapeFileName","setLandscapeFileName","setLandscapePic","userLocation","setUserLocation","story","setStory","skills","setSkills","setBio","checkProfileCreated","handleSave","onSubmitLandscape","closeEditProfileMenu","AboutMe","linkenIn","Bookmark","bookmark","setBookmark","saveProject","Project","query","Query","equalTo","projectTitle","find","removeProject","exists","remove","checkBookmark","select","queryResults","results","i","length","push","Rating","rating","setRating","reviewCount","setReviewCount","checkRating","params","Cloud","run","projectRating","Array","map","star","ProjectCard","url","useRouteMatch","verified","isVerified","category","creatorProfilePic","createdOn","MyProjectsCard","Carousel","children","show","currentIndex","setCurrentIndex","setLength","isRepeating","setIsRepeating","transitionEnabled","setTransitionEnabled","prevState","transform","transition","onTransitionEnd","output","index","reverse","renderExtraPrev","renderExtraNext","ProjectGridBox","LoadMyProject","projects","setProjects","pageNumber","setPageNumber","LoadProjects","page","Fragment","listItem","projectPhoto","SaveProfile","saved","setSaved","saveProfile","profileName","userProfile","removeProfile","checkSavedProfile","ProfileCard","MyProfile","createProjectMenu","setOpenCreateProjectMenu","editProfileMenu","setOpenEditProfileMenu","savedProjects","setSavedProjects","usersSaved","setUsersSaved","LoadSavedProjects","savedProjectsList","LoadSavedProfiles","savedProfiles","LoadMyProjects","ProjectsList","match","queryName","setQueryName","showSearchResults","setShowSearchResults","searchResults","setSearchResults","noneFound","setNoneFound","skipAmount","projectsList","PagPrev","PagNext","SearchProjects","projectsFound","onKeyPress","key","Projects","RatingProject","review","setReview","stars","setStars","reviewTitle","setReviewTitle","prevTitle","setPrevTitle","hasReview","setHasReview","loadUserRating","projectName","currentProject","projectRelation","reviewText","postProjectRating","userCheck","userReview","newReview","eViral","beViral","ratingValue","ReviewCard","reviewerPic","createdAt","Reviews","reviews","setReviews","seeReviews","setSeeReviews","loadReviews","reviewList","SocialIconBar","SendMessagePopUp","msg","setMessage","SendMessage","msgDate","year","month","day","msgTime","toLocaleTimeString","from","creatorName","time","message","projectPic","EditProject","isOwner","deletePopUp","deleteProject","destroy","then","object","editProject","ProjectDisplay","owner","setOwnerProject","sendMessagePopUpVisible","setSendMessagePopUpVisible","editProjectMenu","setOpenEditProjectMenu","checkOwnership","creator","verificationEmail","ProjectData","data","useParams","projectLoaded","setProjectLoaded","loadProject","objectId","ProfileGridBox","LoadUsers","users","setUsers","queryProfile","setQueryProfile","prevPageNumber","nextPageNumber","pageNum","userList","SavedProfiles","SearchProfiles","usersFound","Profiles","UserProfile","AboutUser","UserProfilePage","profileLoaded","setProfileLoaded","userPage","setUserPage","loadProfile","userUsername","profile","checkUserPage","loadProfileProjects","userLoaded","userVisiter","ProfileMessageCard","updatedAt","ChatPage","inboxUsers","setInboxUsers","requestsUsers","setRequestsUsers","showInbox","setShowInbox","showReply","setShowReply","showRequests","setShowRequests","chatContent","setChatContent","chatDisplay","setChatDisplay","activeChatId","setActiveChatId","processRequest","setProcessRequest","reply","setReply","noUsers","setNoUsers","deleteChat","Conversation","findConversation","conversationFound","conversation","requestAccepted","loadInboxProfiles","hasProfile","CheckInboxClick","CheckRequestsClick","loadRequestsProfiles","profileCards","loadRequestMessage","chatId","permission","requestMessage","loadInboxMessage","activateChatListener","subscribe","on","parent","get","parentId","objProfilePic","objDate","objMessage","objTime","prev","fromProfilePic","acceptRequest","declineRequest","sendReply","toUser","user1","user2","lastAction","forceScroll","App","history","useHistory","exact","component","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.9030768e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roundlogo.befa4d11.png\";","export default __webpack_public_path__ + \"static/media/eViralLogo2.5c4556ad.png\";","export default __webpack_public_path__ + \"static/media/beviral.83bfabd5.png\";","export default __webpack_public_path__ + \"static/media/defaultProfile.c7fa3ad6.png\";","export default __webpack_public_path__ + \"static/media/metamask.2c7ea74a.png\";","export default __webpack_public_path__ + \"static/media/walletconnect.00a434b3.png\";","import React, {useState} from 'react';\r\nimport Logo from '../img/roundlogo.png';\r\nimport './Alert.css';\r\n\r\nfunction Alert(props) {\r\n    const notVisible = (visble) => props.visible(false);\r\n    return (\r\n        <>\r\n            <div className=\"alert-background\">\r\n                <div className=\"alert-container\">\r\n                    <div className=\"alert-wrapper\">\r\n                        <div className=\"alert-title\">\r\n                            <img className=\"alertLogo\" src={Logo} ></img>\r\n                            <h3>MESSAGE</h3>\r\n                        </div>\r\n                        <div className=\"alert-options\">\r\n                            {props.content}\r\n                        </div>\r\n                        <div className=\"alert-footer\">\r\n                            <button  onClick={() => {props.visible(false)}}>CLOSE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { Button } from './Button';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport roundLogo from '../img/roundlogo.png';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport avatar from '../img/defaultProfile.png';\r\nimport mmLogo from '../img/metamask.png';\r\nimport wcLogo from '../img/walletconnect.png';\r\nimport './DropdownMenu.css';\r\nimport './NavbarConnectMenu.css';\r\nimport Alert from './Alert';\r\n\r\nfunction Navbar() {\r\n    const { authenticate, isAuthenticated, user, logout, auth, Moralis} = useMoralis();\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [balance, setBalance] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    const [profilePic, setProfilePic] = useState(avatar);\r\n    const [username, setUsername] = useState(\"Username\");\r\n    const [displayConnect, setDisplayConnect] = useState(true);\r\n    \r\n\r\n    const [ connectMenu, setOpenConnectMenu ] = useState(false);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const authenticateUserMM = async () =>{ \r\n        console.log(1);\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate();\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const authenticateUserWC = async () =>{\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate({ provider: \"walletconnect\" });                \r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const logoutUser = async () => {\r\n        await logout();\r\n        setDisplayConnect(true);\r\n        setProfilePic(avatar);\r\n        const goHome = () => {window.location.href=\"/\"};\r\n        goHome();\r\n    }\r\n    \r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**18);\r\n        const bBalance = beViralBalance.balance/(10**18);\r\n        const balance = (eBalance.toFixed(3) + \" Bil\");\r\n        const bvBalance = (bBalance.toFixed(3) + \" Bil\");\r\n        setBalance(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <=960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n    \r\n    const getVersion = () => {\r\n        console.log(Moralis.CoreManager.get(\"VERSION\"));\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setProfilePic(user.attributes?.profilePic?._url);\r\n            setUsername(user.attributes.username);\r\n            renderBalance();\r\n          }\r\n        }, [user]);\r\n\r\n    window.addEventListener('resize', showButton);\r\n        \r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-nav\">\r\n                    <div className='menu-icon' onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>                        \r\n                <ul className=\"navbar-logo\">\r\n                    <Link to=\"/\" className=\"navbar-logo\">  \r\n                    <div className=\"viralcrypto\">\r\n                        <h1> viralcrypto </h1>\r\n                        </div>                       \r\n                        {/* <img className=\"roundLogo\" src={roundLogo} alt=\"\" />                   */}\r\n                    </Link>                                      \r\n                </ul>\r\n\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-home\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/projects' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-tasks\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/profiles' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-people-arrows\"></i>\r\n                            </Link>\r\n                        </li> \r\n                        \r\n                        {user &&\r\n                        <li className='nav-item' onClick={closeMobileMenu}>\r\n                            <Link to='/chat' className='nav-links' >\r\n                                <i class=\"far fa-comments\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        }\r\n                        {/* <li className='nav-item'>\r\n                            <Link to='/platform' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-toolbox\"></i>\r\n                            </Link>\r\n                        </li> */}\r\n                    </ul>\r\n               \r\n                    \r\n                <div className=\"navbar-user\">\r\n                    <li className='nav-item'>                        \r\n                        <div className=\"avatarPic-wrapper\">\r\n                            <img className=\"avatarPic\" src={profilePic}/>\r\n                        </div>                                                \r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        { isAuthenticated && \r\n                        <div className=\"caret\">\r\n                            <i class=\"fas fa-caret-down\" onClick={() => {setDropdown(!dropdown)}}>\r\n                                {dropdown && \r\n                                <div className=\"dropdown\">\r\n                                    <li className=\"dropdown-item-user\">\r\n                                        <span className=\"dropdown-icon\"></span>\r\n                                        <img className=\"avatarPic\" src={profilePic}/>\r\n                                        <span className=\"dropdown-username\"> {username}</span>\r\n                                        <span className=\"dropdown-right-icon\"></span>\r\n                                    </li>\r\n                                    <li className=\"dropdown-item\">\r\n                                        <div className=\"wallet-balances\">\r\n                                            <div className=\"showBalance\">\r\n                                            {balance}\r\n                                            <img className=\"eViralLogo-Dropdown\" src={eViralLogo} alt=\"\" ></img>\r\n                                            </div>\r\n                                            <div className=\"showBalanceBSC\">\r\n                                            {balanceBSC}\r\n                                            <img className=\"eViralLogo-Dropdown\" src={beViralLogo} alt=\"\" ></img>\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </li>                                \r\n                                    <Link to=\"/myprofile\" className=\"dropdown-item\" >\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"far fa-user\"></i>\r\n                                        </span>\r\n                                        My Profile\r\n                                    </Link>\r\n                                    \r\n                                    <Link to=\"/chat\" className=\"dropdown-item\">\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"fas fa-comments\"></i>\r\n                                        </span>\r\n                                        Messages\r\n                                    </Link>\r\n                                    \r\n                                    <li className=\"dropdown-logout\">\r\n                                        <button className=\"btn1  logout-btn\" onClick={() => {setDropdown(!dropdown)}}>Close</button>                                            \r\n                                            <button className=\"btn2 logout-btn\" onClick={() => logoutUser()}>\r\n                                            Log&nbsp;Out\r\n                                            <i class=\"fas fa-sign-out-alt\"></i>\r\n                                        </button>                                        \r\n                                    </li>\r\n                                </div>                                 \r\n                                }\r\n                            </i>\r\n                        </div>\r\n                        }\r\n                    </li>\r\n                    { !isAuthenticated && <button className='btn1'  onClick={() => setOpenConnectMenu(true)}>\r\n                        Connect\r\n                    </button>  } \r\n                    { connectMenu &&\r\n                    <div className=\"connectMenu-background\">\r\n                        <div className=\"connectMenu-container\">\r\n                            <div className=\"connectMenu-wrapper\">\r\n                                <div className=\"connectMenu-title\">\r\n                                    <h3>Connect with Web3</h3>\r\n                                </div>\r\n                                <div className=\"connectMenu-options\">\r\n                                    <div className=\"connectMenu-metamask\"onClick={() => authenticateUserMM()}>                                        \r\n                                        <button  className=\"connectMenu-btn\"><img className=\"metamask-logo\" src={mmLogo} /></button>\r\n                                    </div>\r\n                                    <div className=\"connectMenu-walletConnect\"  >\r\n                                        <button className=\"connectMenu-btn\" ><img className=\"walletconnect-logo\" src={wcLogo} onClick={() => authenticateUserWC()}/></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"connectMenu-footer\">\r\n                                    <button  onClick={() => setOpenConnectMenu(false)}>CLOSE</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                    }                                     \r\n                </div>                                                 \r\n                </div>\r\n                                          \r\n            </nav>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n    return (\r\n        <>\r\n            <li className='cards__item'>\r\n                <Link className='cards__item__link' to={props.path} target=\"_blank\">\r\n                    <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n                        <img src={props.src} alt='' className='cards__item__img'/>\r\n                    </figure>\r\n                    <div className='class__item__info'>\r\n                        <h5 className='cards__item__text'>{props.text}</h5>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\nimport CardItem from './CardItem';\r\nimport './Cards.css';\r\n\r\nfunction Cards() {\r\n    return (\r\n        <div className='cards'>\r\n            <h1>Evolving eViral Partners</h1>\r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                    <ul className='cards__items'>\r\n                        <CardItem \r\n                        src='images/kyubiworld.png'\r\n                        text='Kyubi World - NFTs: A place for aspiring artists to flourish'\r\n                        label='Kyubi World'\r\n                        path={{ pathname: \"https://www.kyubi.world\"}} \r\n                        />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './OnRamper.css';\r\n\r\n\r\nexport default function OnRamper() {\r\n    return (\r\n        <div>\r\n            <iframe\r\n                className=\"onramper-widget\"\r\n                defaultCrypto=\"ETH\"\r\n                id=\"onramper-widget\"\r\n                title=\"Onramper widget\"\r\n                frameborder=\"no\"\r\n                allow=\"accelerometer; autoplay; camera; gyroscope; payment;\"                \r\n                src=\"https://widget.onramper.com?color=266678&apiKey=pk_test_uJQ9wgwePDgiietYBRP6uhVvx_7RJTULFfPUk04BUq40\">\r\n                </iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nimport './HeroSection.css';\r\nimport { ByMoralis } from 'react-moralis';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport Cards from './Cards';\r\n\r\nimport OnRamper from './OnRamper';\r\nimport TokenPrices from './TokenPrices';\r\nimport FortmaticWallet from './FortmaticWallet';\r\n\r\nfunction HeroSection() {\r\n    return (\r\n        \r\n        <div className=\"background-homepage\">\r\n            <video src=\"/videos/eViral.mp4\" classname=\"background-mp4\" autoPlay loop muted />\r\n                <div className='hero-container'>\r\n                    {/* <TokenPrices /> */}\r\n                    <div className=\"homepage-welcome\">\r\n                        {/* <h1> Viral Crypto </h1> */}\r\n                        <h2 className=\"hero-text\">Connecting Innovators and Influencers in DeFI</h2>\r\n                        <p className=\"hero-text\">Own eViral or BeViral and join the network of independent blockchain creators.</p>\r\n                    </div>\r\n                    <div className=\"homepage-buttons\">\r\n                        <Link to='/projects' className=\"homepage-button btn2\">Discover&nbsp;Projects</Link>\r\n                        <Link to='/profiles' className=\"homepage-button btn2\">Find&nbsp;Profiles</Link>\r\n                    </div>\r\n                    <div className=\"homepage-onRamp\">\r\n                        <div className=\"homepage-onRamp-text\">\r\n                            <h3>\r\n                                New to Crypto?                                \r\n                                <br/>\r\n                                No problem!\r\n                            </h3>\r\n                            <h4>\r\n                                You'll need ETH to buy eViral, or BUSD to buy beViral.\r\n                            </h4>\r\n                            {/* <FortmaticWallet/> */}\r\n                        </div>\r\n                        <OnRamper/>\r\n                    </div>\r\n                    \r\n                <div className=\"tokenIframes\">\r\n                    <div className=\"tokenIframes-wrapper\">\r\n                        <div className=\"eViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={eViralLogo}/>Viral Ethereum</h3>\r\n                            <iframe\r\n                                src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"beViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={beViralLogo}/>Viral Binance</h3>\r\n                            <iframe\r\n                                src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Cards/>\r\n                <div className=\"byMoralis\">\r\n                    <ByMoralis  width={300} variant=\"dark\" />\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeroSection;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport HeroSection from '../HeroSection';\r\n\r\nfunction Home () {\r\n    return (\r\n        <>\r\n            <HeroSection />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Cards from '../Cards';\r\nimport '../../components/Platform.css';\r\n\r\nimport eViralLogo from \"../../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../../img/beviral.png\";\r\n\r\nfunction Platform() {\r\n\r\n    \r\n    return (\r\n        <div className=\"platform-background\">\r\n            <Cards/>\r\n            <div className=\"tokenIframes\">\r\n                <div className=\"tokenIframes-wrapper\">\r\n                <div className=\"eViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={eViralLogo}/>Viral Ethereum on UniswapV2</h3>\r\n                    <iframe\r\n                        src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                <div className=\"beViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={beViralLogo}/>Viral Binance on PancakeSwapV2</h3>\r\n                    <iframe\r\n                        src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Platform;\r\n","export default __webpack_public_path__ + \"static/media/defaultLandscape.61b5b0db.jpg\";","export default __webpack_public_path__ + \"static/media/construction.cfb1328d.png\";","import React, { useState } from 'react';\r\nimport './CreateProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport construction from  \"../img/construction.png\";\r\nimport Alert from './Alert';\r\n\r\nfunction CreateNewProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState();\r\n    const [summary, setSummary] = useState();\r\n    const [description, setDescription] = useState();\r\n\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const [isLive, setIsLive] = useState(false);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(construction);\r\n\r\n    const createNewProject = async () => {\r\n        try {\r\n            const newProject = Moralis.Object.extend(\"Projects\");\r\n            const project = new newProject();\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            const date = new Date();\r\n            const currentUser = await Moralis.User.current();\r\n            const username = currentUser.attributes.username;\r\n            const profilePic = currentUser.attributes.profilePic._url;\r\n            const userObjectId =currentUser.attributes.userObjectId;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('creator', currentUser);\r\n            project.set(\"createdBy\", username);\r\n            project.set(\"creatorProfilePic\", profilePic);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set('date', date.toLocaleDateString());\r\n            project.set(\"creatorId\", userObjectId);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            const relation = currentUser.relation(\"projects\");\r\n            relation.add(project);\r\n            user.save();\r\n            setAlertContents(\"New Project created!\");\r\n            setAlertVisible(true);\r\n            (props.closeCreateProjectMenu(false));\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Create a Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a Cover Photo<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                                 \r\n                                <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Name<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder=\"Create a title\" value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 2000 characters\" maxLength={2000} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <input type=\"button\" className=\"submit-form btn2\" value=\"Create Project\" onClick={createNewProject} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default CreateNewProject\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport defaultProfile from \"../img/defaultProfile.png\";\r\nimport defaultLandscape from \"../img/defaultLandscape.jpg\";\r\nimport Alert from './Alert';\r\nimport CreateNewProject from './CreateProject';\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    const { user, Moralis } = useMoralis();   \r\n    const { error, isUploading, moralisFile, saveFile, } = useMoralisFile();\r\n\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [landscape, setLandscape] = useState(\"\");\r\n    \r\n    const [balanceETH, setBalanceETH] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    \r\n    const [changeProfilePicMenu, setOpenChangeProfilePicMenu] = useState(false);\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    const init = 0;\r\n    \r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n    };\r\n\r\n    \r\n    const onSubmitPhoto = async (e) => {\r\n        const file = photoFile;\r\n        const name = photoFileName;\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        user.set(\"profilePic\", fileIpfs);\r\n        await user.save();\r\n        setProfilePic(user.attributes.profilePic._url);\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n\r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**18);\r\n        const bBalance = beViralBalance.balance/(10**18);\r\n        const balance = (eBalance.toFixed(3));\r\n        const bvBalance = (bBalance.toFixed(3));\r\n        setBalanceETH(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const editProfileCheck = async() => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents( \r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>);\r\n            setAlertVisible(true);\r\n        } else {\r\n            props.openEditProfileMenu(true);\r\n        }\r\n    }\r\n\r\n    const createProjectCheck = () => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n        }  else \r\n        if (!user.attributes?.profileCreated) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.                \r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n        } else {\r\n            props.openCreateProjectMenu(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            if(typeof user.attributes?.profilePic?._url === 'undefined') {\r\n                setProfilePic(defaultProfile);\r\n            } else {\r\n                setProfilePic(user.attributes?.profilePic?._url);\r\n            }\r\n            if(typeof user.attributes?.landscapePic?._url === 'undefined') {\r\n                setLandscape(defaultLandscape);\r\n            } else {\r\n                setLandscape(user.attributes?.landscapePic?._url);\r\n            }          \r\n          \r\n          renderBalance();\r\n        }\r\n      }, [init]);\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"profile-container-wrapper\">\r\n                <div className=\"profile-wrapper\">\r\n                    <div className=\"profile-background\">\r\n                        <img className='landscape-pic' src={landscape} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"profile-header\">\r\n                        <div className=\"profile-pic-container\"onClick={() => setOpenChangeProfilePicMenu(true)}>\r\n                            <img className=\"profile-pic\" src={profilePic} alt=\"\" id=\"profilePic\" />\r\n                            <div className=\"middle-of-profilePic\">                                \r\n                                    <i class=\"fas fa-camera-retro\"></i>                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-summary\">\r\n                            <h2 className=\"profile-page-username\"> {user?.attributes?.username} </h2>\r\n                            <p className=\"profile-page-bio\">{user?.attributes?.bio}</p>\r\n                \r\n                        </div>\r\n                \r\n                    </div>\r\n                 <div className=\"edit-profile-wrapper\">\r\n                    <div className=\"profile-page-balances\">\r\n                        <div className=\"profile-balances-wrapper\">\r\n                            <div className=\"showProfileBalance\">\r\n                                <p>{balanceETH}&nbsp;Bil</p>\r\n                                <img className=\"logo-balance-display\" src={eViralLogo} alt=\"\" ></img>\r\n                            </div>\r\n                            <div className=\"showProfileBalanceBSC\">\r\n                                <p>{balanceBSC}&nbsp;Bil</p>\r\n                                <img className=\"logo-balance-display\" src={beViralLogo} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-header-btns\">\r\n                        <button className=\"create-project-button btn1\" onClick={createProjectCheck}>\r\n                        <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Create&nbsp;Project</span>\r\n                        </button>\r\n                        <button className=\"edit-profile-button btn2\" onClick={editProfileCheck}>\r\n                        <i class=\"fas fa-pen\"></i>\r\n                            <span>Edit&nbsp;Profile</span>\r\n                        </button>\r\n                    </div>                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n            {changeProfilePicMenu &&\r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-profilepic-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\">Choose a Profile Picture</h3>\r\n                        <span className=\"exitMenu\" onClick={() => {setOpenChangeProfilePicMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={profilePic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">\r\n                            <form onSubmit={onSubmitPhoto}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"profilePhoto\" className=\"form-label\">Select Image File</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"profilePhoto\" onChange={onChangePhoto} />\r\n                                </div>\r\n                                <div className=\"change-profile-pic-footer\">\r\n                                    <button className=\"btn1\" onClick={()=>{setOpenChangeProfilePicMenu(false)}}>Close</button>\r\n                                    <input type=\"button\" value=\"Upload\" className=\"upload-profilePic-button btn2\" onClick={onSubmitPhoto} />\r\n                                </div>\r\n                            </form>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            }\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport './User.css';\r\nimport './UpdateProfile.css';\r\nimport Alert from './Alert';\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const { user, setUserData, Moralis } = useMoralis();\r\n    const { error, isUploading, moralisFile, saveFile, } = useMoralisFile();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();    \r\n    \r\n    const [landscapeFile, setLandscapeFile] = useState();    \r\n    const [landscapeFileName, setLandscapeFileName] = useState();  \r\n    const [landscapePic, setLandscapePic] = useState();\r\n\r\n    const [username, setUsername] = useState();\r\n    const [userLocation, setUserLocation] = useState();\r\n    const [story, setStory] = useState();\r\n    const [skills, setSkills] = useState();\r\n    const [bio, setBio] = useState();\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const init = 0;\r\n\r\n    const checkProfileCreated = () => {\r\n        const profileCreated = (user.attributes?.profileCreated);\r\n        if(profileCreated){\r\n            setUsername(user.attributes?.username);\r\n            setLandscapePic(user.attributes?.landscapePic?._url);\r\n            setUserLocation(user.attributes?.userLocation);\r\n            setStory(user.attributes?.story);\r\n            setSkills(user.attributes?.skills);\r\n            setBio(user.attributes?.bio);\r\n            setWebsite(user.attributes?.website);\r\n            setTwitter(user.attributes?.twitter);\r\n            setTelegram(user.attributes?.telegram);\r\n            setLinkedIn(user.attributes?.linkedIn);\r\n            setDiscord(user.attributes?.discord);\r\n            setYoutube(user.attributes?.youtube);\r\n            setTwitch(user.attributes?.twitch);\r\n\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            checkProfileCreated();\r\n        }\r\n      }, [init]);\r\n\r\n\r\n    const handleSave = async() => {\r\n        if( (username === \"\") ) { \r\n            return;\r\n        }\r\n        await setUserData({\r\n            username: username === \"\" ? undefined : username,            \r\n            userLocation: userLocation === \"\" ? undefined : userLocation, \r\n            story: story === \"\" ? undefined : story ,\r\n            skills: skills === \"\" ? undefined : skills ,\r\n            bio: bio === \"\" ? undefined : bio,     \r\n            website: website === \"\" ? undefined : website,     \r\n            twitter: twitter === \"\" ? undefined : twitter,     \r\n            telegram: telegram === \"\" ? undefined : telegram,     \r\n            discord: discord === \"\" ? undefined : discord,     \r\n            linkedIn: linkedIn === \"\" ? undefined : linkedIn,     \r\n            youtube: youtube === \"\" ? undefined : youtube,     \r\n            twitch: twitch === \"\" ? undefined : twitch,  \r\n            profileCreated: true   \r\n        });\r\n        setAlertContents(\"Profile Updated!\");\r\n        setAlertVisible(true);        \r\n    };\r\n\r\n    const onChangeLandscape = e => {        \r\n        setLandscapeFile(e.target.files[0]);\r\n        setLandscapeFileName(e.target.files[0].name);\r\n    };\r\n\r\n      const onSubmitLandscape = async () => {\r\n        try{\r\n        const file = landscapeFile;\r\n        const name = landscapeFileName;\r\n        console.log(1);\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        console.log(2);\r\n        user.set(\"landscapePic\", fileIpfs);\r\n        await user.save();\r\n        setLandscapePic(user.attributes.landscapePic._url);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      };\r\n\r\n    return (\r\n        <> \r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\"> Update Profile </h3>\r\n                        <span className=\"exitMenu\" onClick={() => {props.closeEditProfileMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"change-landscape-pic-container\">\r\n                        <img className=\"change-landscape-pic\" src={landscapePic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">                            \r\n                            <form onSubmit={onSubmitLandscape}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"landscapePic\" className=\"form-label\">Choose a Landscape (recommended 1500px X 500px)</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"landscapePic\" onChange={onChangeLandscape} />\r\n                                </div>\r\n                                <input type=\"button\" value=\"Upload\" className=\"updateProfile-btn2-upload\" onClick={onSubmitLandscape} />\r\n                            </form>\r\n                            <label className=\"form-label\">Username</label>\r\n                            <input className=\"form-input\" placeholder=\"Choose a name\" value={username} required onChange={(event) =>setUsername(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Location</label>\r\n                            <input className=\"form-input\" placeholder=\"City, Country\" value={userLocation} onChange={(event) =>setUserLocation(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Website</label>\r\n                            <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Skills</label>\r\n                            <input className=\"form-input\" placeholder=\"List skills as keywords (ie Artist, Programmer, Model)\" maxLength={50} value={skills} onChange={(event) =>setSkills(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Bio</label>\r\n                            <textarea rows={3} className=\"form-control\" required placeholder=\"Brief bio (<150 characters)\" maxLength={150} value={bio} onChange={(event) =>setBio(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Story</label>\r\n                            <textarea rows={5} className=\"form-control\" placeholder=\"What should others know about you? (<2000 characters)\" maxLength={2000} value={story} onChange={(event) =>setStory(event.currentTarget.value)}/>\r\n\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"submit\">\r\n                            <button className=\"btn1\" onClick={() => {props.closeEditProfileMenu(false)}}>Close Menu</button>                            \r\n                            <input className=\"updateProfile-btn2 btn2\" onClick={handleSave} type=\"button\" value=\"Save Changes\"/>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction AboutMe() {\r\n\r\n    const { user } = useMoralis(); \r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{user?.attributes?.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (user?.attributes?.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{user?.attributes?.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.skills}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Social Media</h5>\r\n                    <div className='profile-social-icon-wrapper'>\r\n                        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(user.attributes?.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(user.attributes?.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(user.attributes?.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n                        <i className=\"fab fa-discord\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(user.attributes?.linkenIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(user.attributes?.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n                        <i className=\"fab fa-youtube\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(user.attributes?.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n                        <i className=\"fab fa-twitch\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Bookmark(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [bookmark, setBookmark] = useState(false);\r\n    const init = null;\r\n\r\n    const saveProject = async() => {\r\n        setBookmark(true);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.add(project);\r\n        await user.save();\r\n        alert(\"Project Bookmarked!\");\r\n    }\r\n\r\n    const removeProject = async() => {\r\n        setBookmark(false);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.exists(\"title\");\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.remove(project);\r\n        await user.save();\r\n        alert(\"Project Removed!\");\r\n    }  \r\n\r\n    const checkBookmark = async() => {\r\n        const user = Moralis.User.current();\r\n        const relation = user.relation(\"bookmarkedProjects\");     \r\n        const query = relation.query();\r\n        query.equalTo(\"title\", (props.projectTitle));\r\n        query.select(\"attributes.title\")\r\n        const queryResults = await query.find();\r\n        const results = [];\r\n        for (let i = 0; i < queryResults.length; ++i) {\r\n              results.push({\r\n              \"title\": queryResults[i].attributes.title,    \r\n              });\r\n            };\r\n        if(results[0]) {\r\n            setBookmark(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        checkBookmark();\r\n        }\r\n        },\r\n        [init],\r\n      );\r\n\r\n    return (\r\n        <div className=\"bookmark\" >\r\n            {bookmark ? <i class=\"fas fa-bookmark\" onClick={() => removeProject()}></i>  : <i class=\"far fa-bookmark\" onClick={() => saveProject()}></i>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bookmark;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Rating(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const title = (props.title);\r\n\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewCount, setReviewCount] = useState( 0 );\r\n\r\n    const checkRating = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const projectRating = await Moralis.Cloud.run(\"loadProjectRating\", params);\r\n        if (typeof projectRating !== 'undefined') {\r\n            setReviewCount(projectRating[0]);\r\n            setRating(projectRating[1]);    \r\n        }\r\n     }\r\n\r\n    useEffect(() => {\r\n        checkRating();\r\n        },\r\n        [null],\r\n      );\r\n      \r\n    return (\r\n        <div className=\"rating\">\r\n            {[...Array(1)].map( star => {\r\n                return <i class=\"fas fa-star\"></i>\r\n            })}\r\n            <span className=\"rating\">{rating}</span>\r\n            <span className=\"review-count\">{\" \"}({reviewCount})</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProjectCard(props) {\r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"project-card-title\">                            \r\n                            <h4>{props.title}</h4>\r\n                            { verified && \r\n                                <div>\r\n                                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"project-creator\">\r\n                           <img  src={props.creatorProfilePic}  className=\"creator-profile-pic\"/>{\" \"}{props.username}{\"   -   \"}{props.createdOn}\r\n                        </div>\r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating\r\n                         title = {props.title}          \r\n                        />\r\n                        <Bookmark \r\n                        projectTitle = {props.projectTitle}  \r\n                        />\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectCard;","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction MyProjectsCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/projects/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div>\r\n                            <h4>{props.title}</h4>\r\n                        </div>          \r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating          \r\n                        />\r\n                        <div className=\"my-projects-date\">\r\n                        {props.createdOn}\r\n                        </div>\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyProjectsCard;","import React, {useState, useEffect} from 'react';\r\nimport './Carousel.css';\r\n\r\nconst Carousel = (props) => {\r\n    const {children, show, loop} = props\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [length, setLength] = useState(children.length);\r\n\r\n    const [isRepeating, setIsRepeating] = useState(loop && children.length > show)\r\n    const [transitionEnabled, setTransitionEnabled] = useState(true)\r\n\r\n    const next = () => {\r\n        if (isRepeating || currentIndex < (length - show)) {\r\n            setCurrentIndex(prevState => prevState + 1)\r\n        }\r\n    }\r\n\r\n    const prev = () => {\r\n        if (isRepeating || currentIndex > 0) {\r\n            setCurrentIndex(prevState => prevState - 1)\r\n        }\r\n    }\r\n\r\n    const handleTransitionEnd = () => {\r\n        if (isRepeating) {\r\n            if (currentIndex === 0) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(length)\r\n            } else if (currentIndex === length + show) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(show)\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderExtraPrev = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[length - 1 - index])\r\n        }\r\n        output.reverse()\r\n        return output\r\n    }\r\n\r\n    const renderExtraNext = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[index])\r\n        }\r\n        return output\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLength(children.length)\r\n        setIsRepeating( loop && children.length > show)\r\n    }, [children, loop, show])\r\n\r\n    useEffect(() =>{\r\n        if (isRepeating){\r\n            if (currentIndex === show || currentIndex === length) {\r\n                setTransitionEnabled(true)\r\n            }\r\n        }\r\n    }, [currentIndex, isRepeating, show, length])\r\n\r\n    return (\r\n        <div className=\"carousel-container\">\r\n            <div className=\"carousel-wrapper\">\r\n            <button className=\"left-arrow\" onClick={prev}>\r\n            <i class=\"fas fa-arrow-alt-circle-left\"></i>\r\n            </button>\r\n                <div className=\"carousel-content-wrapper\">\r\n                    <div className={`carousel-content show-${show}`} style={{ transform: `translateX(-${currentIndex * (100/ show)}%)`, \r\n                        transition: !transitionEnabled ? 'none' : undefined, }}\r\n                        onTransitionEnd={() => handleTransitionEnd()}\r\n                        >\r\n                        {(length > show && isRepeating) && \r\n                        renderExtraPrev()\r\n                        }\r\n                        {children}\r\n                        {(length > show && isRepeating) &&\r\n                            renderExtraNext()\r\n                        }                    \r\n                    </div>\r\n                </div>               \r\n                    <button onClick={next} className=\"right-arrow\">\r\n                    <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n\r\nfunction ProjectGridBox(props) {\r\n\r\n    \r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n    const isLive = (props.isLive);\r\n\r\n    return (\r\n                  \r\n        <div className=\"project-grid-box-wrapper\">\r\n            <div className=\"project-card-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`/projects/${props.path}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.src}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"project-card-body\">\r\n                <div className=\"project-card-title\">\r\n                    <h4>{props.title}</h4>\r\n                    <div className=\"project-card-badges\">\r\n                        {isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-chart-line\">Live</i>\r\n                            </div>\r\n                        }\r\n                        {!isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-wrench\">InDev</i>\r\n                            </div>\r\n                        }\r\n                        {verified &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"project-card-creator\">\r\n                    <img  src={props.creatorProfilePic}  className=\"project-card-profilepic\"/>{\" \"}{props.username}\r\n                </div>\r\n                <div className=\"project-card-summary\">\r\n                    {props.summary}\r\n                </div>\r\n            </div>\r\n            <div className=\"project-card-footer\">\r\n                <Rating\r\n                    title = {props.title}\r\n                />\r\n                <div className=\"project-card-date\">\r\n                    {props.createdOn}\r\n                </div>\r\n                <Bookmark\r\n                projectTitle = {props.title}\r\n                />\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProjectGridBox;\r\n","\r\nimport React, {useState, useEffect} from 'react';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport MyProjectsCard from './MyProjectsCard';\r\nimport Carousel from './Carousel';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\n\r\nfunction LoadMyProject() {\r\n\r\n  const { user, Moralis } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { page : pageNumber};\r\n    const results = await Moralis.Cloud.run(\"renderMyProjects\", params);\r\n    setProjects(results);\r\n    console.log(pageNumber);\r\n    console.log(results);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  useEffect(() => {\r\n    LoadProjects();\r\n    },\r\n    [pageNumber]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <React.Fragment>\r\n          \r\n          <div className=\"project-grid-container\">\r\n            <div className=\"my-project-grid-wrapper\">\r\n                {projects.map(listItem => (\r\n                    <div key={listItem.title} className=\"project-grid-box\">\r\n                      <ProjectGridBox\r\n                      title={listItem.title}\r\n                      summary={listItem.summary}\r\n                      src={listItem.projectPhoto}\r\n                      username={listItem.username}\r\n                      creatorProfilePic={listItem.profilePic}\r\n                      createdOn = {listItem.createdOn}\r\n                      label={listItem.username}\r\n                      path={listItem.title}\r\n                      isVerified = {listItem.isVerified}\r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadMyProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction SaveProfile(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [saved, setSaved] = useState(false);\r\n    \r\n\r\n    const saveProfile = async() => {\r\n        setSaved(true);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.add(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile saved.`);\r\n    }\r\n\r\n    const removeProfile = async() => {\r\n        setSaved(false);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.remove(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile removed.`);\r\n    }  \r\n\r\n    const checkSavedProfile = async() => {\r\n        const params = {profileName: props.profileName}\r\n        const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n        \r\n        if(results[0]) {\r\n            setSaved(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        checkSavedProfile();\r\n        }\r\n        },\r\n        [null],\r\n      );\r\n\r\n    return (        \r\n        <div className=\"bookmark\" >\r\n            {saved ? <i class=\"fas fa-heart\" onClick={() => removeProfile()}></i>  : <i class=\"far fa-heart\" onClick={() => saveProfile()}></i>}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default SaveProfile;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport './ProfileCard.css';\r\nimport SaveProfile from './SaveProfile';\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProfileCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    const [bookmark, setBookmark] = useState(true);\r\n\r\n    const saveProject = () => {\r\n        setBookmark(!bookmark);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-card-container\">                \r\n                    <div className=\"profile-card-wrapper\">\r\n                        <Link className=\"profile-cards-link\" to={`/profiles/${props.username}`}>\r\n                            <figure className='profile-card-pic-wrap' category={props.label}>\r\n                                <img className=\"profile-card-img\" src={props.src}></img>\r\n                            </figure>\r\n                        </Link>\r\n                        <div className=\"profile-card-body\">\r\n                            <div className=\"profile-card-title\">\r\n                                <h4>{props.username}</h4>\r\n                            </div>\r\n                            <div className=\"profile-summary\">\r\n                                <p>{props.bio}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"hl\"></div>\r\n                        <div className=\"profile-card-footer\">\r\n                            <div className=\"saveProfile\" onClick={saveProject}>\r\n                                <SaveProfile\r\n                                profileName = {props.username}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileCard;","import React, {useState, useEffect} from 'react';\r\nimport '../../App.css';\r\nimport Profile from '../Profile';\r\nimport { useMoralis } from 'react-moralis';\r\nimport UpdateProfile from '../UpdateProfile.js';\r\nimport CreateProject from '../CreateProject.js';\r\nimport AboutMe from '../AboutMe';\r\nimport '../../components/User.css';\r\nimport LoadMyProjects from '../LoadMyProjects';\r\nimport Alert from '../Alert';\r\nimport ProjectCard from '../ProjectCard';\r\nimport ProfileCard from '../ProfileCard';\r\n\r\n\r\n\r\nfunction MyProfile() {\r\n\r\n    const { Moralis } = useMoralis();\r\n    \r\n    const [createProjectMenu, setOpenCreateProjectMenu] = useState(false);\r\n    const [editProfileMenu, setOpenEditProfileMenu] = useState(false);    \r\n    const [ savedProjects, setSavedProjects ] = useState([\"\"]);    \r\n    const [ usersSaved, setUsersSaved ] = useState([\"\"]);\r\n    let initLoad = 0;\r\n\r\n    const LoadSavedProjects = async() => {\r\n        const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n            setSavedProjects(savedProjectsList);\r\n    };\r\n\r\n    const LoadSavedProfiles = async () => {\r\n        const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n        setUsersSaved(savedProfiles);\r\n    };\r\n\r\n    useEffect(() => {\r\n    LoadSavedProjects();\r\n    LoadSavedProfiles();\r\n    },\r\n    [initLoad],\r\n    );  \r\n\r\n    return (\r\n        <div>\r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                    \r\n                    <Profile openCreateProjectMenu={setOpenCreateProjectMenu} openEditProfileMenu={setOpenEditProfileMenu}/> \r\n                </div>                \r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                            <div className=\"aboutme-wrapper\">\r\n                                <AboutMe />\r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>MY PROJECTS</h3>               \r\n                                </div>\r\n                                <LoadMyProjects />\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROJECTS</h3>               \r\n                                </div>\r\n                                <div className='cards__container'>\r\n                                    <div className='cards__wrapper'>\r\n                                        <div className='cards__items'>                    \r\n                                            {savedProjects.map(project => (                          \r\n                                                <div key={project.title} className=\"cards__item\">                            \r\n                                                    <ProjectCard\r\n                                                    title={project.title}\r\n                                                    summary={project.summary}\r\n                                                    src={project.projectPhoto}\r\n                                                    username={project.username}\r\n                                                    creatorProfilePic={project.profilePic}\r\n                                                    createdOn = {project.createdOn}\r\n                                                    label={project.username}\r\n                                                    path={project.title}\r\n                                                    projectTitle = {project.title}  \r\n                                                    />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>                \r\n                                </div>\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROFILES</h3>               \r\n                                </div>\r\n                                <div className='cards__container'>             \r\n                                    <div className='project-cards__wrapper'>\r\n                                        <div className='cards__items'>      \r\n                                            {usersSaved.map(userProfile => (\r\n                                                <div key={userProfile.username} className=\"cards__item\">\r\n                                                <ProfileCard\r\n                                                bio={userProfile.bio}\r\n                                                src={userProfile.profilePic}\r\n                                                username={userProfile.username}         \r\n                                                />\r\n                                            </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n            <div className=\"projects\">\r\n                {createProjectMenu && <CreateProject closeCreateProjectMenu={setOpenCreateProjectMenu}/>}\r\n                {editProfileMenu && \r\n                <UpdateProfile \r\n                closeEditProfileMenu={setOpenEditProfileMenu}\r\n                />}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useRouteMatch  } from 'react-router-dom';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport Carousel from './Carousel';\r\nimport './SearchBar.css';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\nimport './Pagination.css';\r\n\r\nfunction ProjectsList({match}) {\r\n\r\n  const { user, Moralis } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [ savedProjects, setSavedProjects ] = useState([\"\"]);\r\n  const [ queryName, setQueryName] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  let initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { skipAmount: pageNumber};\r\n    const projectsList = await Moralis.Cloud.run(\"renderProjects\", params);\r\n    setProjects(projectsList);  \r\n    console.log(projectsList);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n\r\n  const LoadSavedProjects = async() => {\r\n    const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n    setSavedProjects(savedProjectsList);\r\n  };\r\n\r\n  const SearchProjects = async() => {\r\n    setNoneFound(false);\r\n    const params = { title: queryName};\r\n    const projectsFound = await Moralis.Cloud.run(\"searchProjectsByName\", params);\r\n    if(projectsFound != ''){\r\n      setSearchResults(projectsFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    LoadProjects();\r\n    },\r\n    [pageNumber],\r\n  );  \r\n  useEffect(() => {\r\n    if(user){\r\n      LoadSavedProjects();\r\n    }\r\n    },\r\n    [initLoad],\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n        <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">          \r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search projects by name\" \r\n                value={queryName} \r\n                onChange={(event) =>setQueryName(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProjects()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProjects} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"foreground\">\r\n        {noneFound &&\r\n          <div className=\"cards-background\">\r\n          <h3>Search Results</h3> \r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n              </div> \r\n              <button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button>\r\n            </div> \r\n          </div> \r\n          }\r\n          {showSearchResults &&\r\n          <div className=\"cards-background\">\r\n            <div className=\"project-section-title\">\r\n              <h3>Search Results</h3> \r\n            </div>\r\n            <button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button>\r\n              <div className='cards__container'>\r\n                  <div className='cards__wrapper'>                 \r\n                    <div className='cards__items'>\r\n                    <Carousel\r\n                        show={3}\r\n                        loop={true}\r\n                        >\r\n                        {searchResults.map(project => (                          \r\n                          <div key={project.title} className=\"cards__item\">                                                   \r\n                              <ProjectCard\r\n                              title={project.title}\r\n                              summary={project.summary}\r\n                              src={project.projectPhoto}\r\n                              username={project.username}\r\n                              creatorProfilePic={project.profilePic}\r\n                              createdOn = {project.createdOn}\r\n                              label={project.username}\r\n                              path={project.title}\r\n                              projectTitle = {project.title}\r\n                              isVerified = {project.isVerified}\r\n                              isLive={project.isLive}   \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </Carousel>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          }\r\n\r\n\r\n\r\n              <div className=\"cards-background\">\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROJECTS</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                <div className=\"project-grid-container\">\r\n                  <div className=\"project-grid-wrapper\">\r\n                    { (projects).map(project => (\r\n                      <div key={project.title} className=\"project-grid-box\">\r\n                          <ProjectGridBox\r\n                          title={project.title}\r\n                          summary={project.summary}\r\n                          src={project.projectPhoto}\r\n                          username={project.username}\r\n                          creatorProfilePic={project.profilePic}\r\n                          createdOn = {project.createdOn}\r\n                          path={project.title}\r\n                          isVerified = {project.isVerified}\r\n                          isLive={project.isLive}\r\n                          \r\n                          />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                </div>              \r\n              </div>                   \r\n              \r\n      </div>\r\n      </div>\r\n      </>\r\n    )\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport ProjectsList from '../Projects.js';\r\nimport '../../App.css';\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <ProjectsList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './RatingProject.css'\r\n\r\nfunction RatingProject(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [review, setReview] = useState();\r\n    const [stars, setStars] = useState(0);\r\n    const [reviewTitle, setReviewTitle] = useState();\r\n    const [ prevTitle, setPrevTitle] = useState(\"Review Title\");\r\n    \r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    const init=0;\r\n\r\n    const [hasReview, setHasReview] = useState(false);\r\n\r\n    const loadUserRating = async() => {\r\n        const params = { projectTitle: (props.projectName) }; \r\n        const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        const projectRelation = currentProject.relation(\"reviews\")\r\n        const query = projectRelation.query();\r\n        query.equalTo('username', user.attributes?.username)\r\n        const queryResults = await query.find();\r\n        console.log(queryResults[0]);\r\n        if(queryResults.length > 0) {\r\n            console.log(queryResults[0].attributes.review);\r\n            console.log(queryResults[0].id);\r\n            const stars = queryResults[0].attributes.stars;\r\n            const reviewText = queryResults[0].attributes.review;\r\n            const title = queryResults[0].attributes.reviewTitle;\r\n            setReview(reviewText);\r\n            setStars(stars);\r\n            setPrevTitle(title);\r\n            setHasReview(true);\r\n            console.log(hasReview);\r\n        } else {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                No review found.\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n        }\r\n    }\r\n    \r\n    const postProjectRating = async() => {    \r\n        const canPost = await userCheck();\r\n        if (canPost) {\r\n            if(stars < 1) {\r\n                throw alert('Please choose a star.');\r\n            }\r\n            if (typeof review === 'undefined') {\r\n                throw alert('Please leave a review.');\r\n            }\r\n            if(hasReview){\r\n                const params = { projectTitle: (props.projectName) }; \r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                const query = projectRelation.query();\r\n                query.equalTo('username', user.attributes?.username)\r\n                const queryResults = await query.find();\r\n                const userReview = queryResults[0];\r\n                userReview.set(\"stars\", stars);\r\n                userReview.set('review', review);\r\n                userReview.set('reviewTitle', reviewTitle)\r\n                await userReview.save();\r\n                alert(\"Review updated!\")\r\n            }  else {\r\n                const userReview = Moralis.Object.extend(\"Reviews\");\r\n                const newReview = new userReview();\r\n                const currentUser = await Moralis.User.current();\r\n                const username = currentUser.attributes.username;\r\n                const profilePic = currentUser.attributes.profilePic._url;\r\n                const params = { projectTitle: (props.projectName) };\r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                newReview.set(\"stars\", stars);\r\n                newReview.set(\"review\", review);\r\n                newReview.set('reviewer', currentUser);\r\n                newReview.set(\"username\", username);\r\n                newReview.set('reviewerPic', profilePic);\r\n                newReview.set('project', currentProject);            \r\n                await newReview.save();\r\n                const relation = currentUser.relation(\"reviews\");\r\n                relation.add(newReview);\r\n                user.save();\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                projectRelation.add(newReview);\r\n                currentProject.save();\r\n                alert(\"Thank you for your review!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        console.log(user);\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n          setAlertContents(\r\n              <>\r\n              <div className=\"alert-popup-contents\">\r\n              You'll need to own either eViral or beViral to access this feature.\r\n              <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n              </div>\r\n              </>\r\n              );\r\n          setAlertVisible(true);\r\n          return false;\r\n        }  else if (!user.attributes?.profileCreated) {\r\n          setAlertContents(\r\n              <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to set up a Profile to access this feature.                \r\n          </div>\r\n          </>\r\n          ) \r\n          setAlertVisible(true);\r\n          return false;\r\n        } else {\r\n            return true;\r\n        }\r\n      }\r\n\r\n    useEffect(() => {  \r\n    })\r\n\r\n    return (\r\n        <>\r\n        <div className=\"rating-project-container\">\r\n            <div className=\"rating-project-wrapper\">\r\n                <h4>Your Review</h4>\r\n                \r\n                <div className=\"rating-project-stars-container\">\r\n                    {[...Array(5)].map( (star, i) => {\r\n                        const ratingValue = i + 1;\r\n                        return (\r\n                            <label>\r\n                                <input type=\"radio\" name=\"rating-radio\" value={ratingValue} onClick={() => setStars(ratingValue)}/>\r\n                                {ratingValue  <= stars ? <i class=\"fas fa-star gold\"></i> : <i class=\"fas fa-star grey\"></i>}\r\n                            </label>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <input className=\"rating-review-title\" type=\"text\" placeholder={prevTitle} value={reviewTitle} required \r\n                    onChange={(event) =>setReviewTitle(event.currentTarget.value)}/>\r\n                <div className=\"rating-project-review-text\">\r\n                <textarea rows={3} \r\n                    className=\"form-control\" \r\n                    placeholder=\"Please leave a review in less than 150 characters.\" \r\n                    maxLength={150} \r\n                    value={review} \r\n                    required \r\n                    onChange={(event) =>setReview(event.currentTarget.value)}/>\r\n                </div>\r\n                <div className=\"rating-project-submit\">\r\n                <button className=\"rating-project-submit-button btn1\" onClick={() => {loadUserRating()}}>Load My Review</button>\r\n                    <button className=\"rating-project-submit-button btn2\" onClick={postProjectRating}>Post Review</button>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default RatingProject;\r\n","import React from 'react'\r\nimport './ReviewCard.css';\r\n\r\nfunction ReviewCard(props) {\r\n    return (\r\n        \r\n            <div className=\"review-container\"> \r\n                    <div className=\"review-profile\">\r\n                        <img className=\"creator-profile-pic\" src={props.reviewerPic} />\r\n                        {props.username}\r\n                    </div>\r\n                    <div className=\"review-title\">\r\n                        {[...Array(props.stars)].map( star => {\r\n                            return <i class=\"fas fa-star\"></i>\r\n                        })}\r\n                        {props.reviewTitle}\r\n                    </div>\r\n                    <div className=\"review-date\">Reviewed on {props.createdAt}</div>\r\n                    <div className=\"review-review\">{props.review}</div>       \r\n            </div>            \r\n        \r\n    )\r\n}\r\n\r\nexport default ReviewCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport ReviewCard from './ReviewCard';\r\n\r\nfunction Reviews(props) {\r\n    const { Moralis } = useMoralis();\r\n    const title = (props.title);\r\n\r\n    const [reviews, setReviews] = useState();\r\n    const [seeReviews, setSeeReviews] = useState(false);\r\n\r\n    const loadReviews = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const reviewList = await Moralis.Cloud.run(\"loadReviews\", params);\r\n        console.log(reviewList);\r\n        setReviews(reviewList);\r\n        console.log(reviews);\r\n        setSeeReviews(!seeReviews)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn1\" onClick={() => loadReviews()}>Show&nbsp;Reviews</button>\r\n            {seeReviews &&\r\n                <div className=\"project-page-review-container\">\r\n                <h3>Reviews</h3>\r\n                <div className=\"project-page-reviewList\">\r\n                    {reviews.map(review => (            \r\n                        <div key={review.title} className=\"project-page-review\">                            \r\n                            <ReviewCard\r\n                            username={review.username}\r\n                            stars={review.stars}\r\n                            review={review.review}\r\n                            reviewerPic={review.reviewerPic}  \r\n                            createdAt={review.createdAt} \r\n                            reviewTitle= {review.reviewTitle}                         \r\n                            />                \r\n                        </div>\r\n                    ))}      \r\n                </div>\r\n            </div>\r\n              }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SocialIconBar(props) {\r\n    return (\r\n        <div className='profile-social-icon-wrapper'>\r\n        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(props.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n        <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(props.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n        <i className=\"fab fa-telegram\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(props.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n        <i className=\"fab fa-discord\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(props.linkedIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n        <i className=\"fab fa-linkedin\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(props.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n        <i className=\"fab fa-youtube\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(props.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n        <i className=\"fab fa-twitch\"></i>\r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SocialIconBar;\r\n","import React, { useState } from 'react';\r\nimport './SendMessagePopUp.css';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nfunction SendMessagePopUp(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [ msg, setMessage ] = useState();\r\n\r\n    \r\n  const SendMessage = async() => {\r\n    const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n    const msgTime = new Date().toLocaleTimeString('en-US');\r\n    // const conversationId = await getConversationId();\r\n    const params = { from: user.attributes?.username, to: (props.creatorName), date: msgDate, time: msgTime, project: (props.projectName), message: msg};\r\n    try {\r\n        const message = await Moralis.Cloud.run(\"sendMessage\", params);        \r\n        alert(\"Message Sent!\");\r\n        (props.visible(false));\r\n    } catch (error) {\r\n        alert(error)\r\n    }    \r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"send-msg-background\">\r\n            <div className=\"send-msg-container\">\r\n                <div className=\"send-msg-wrapper\">\r\n                    <div className=\"send-msg-title\">                        \r\n                        <h3>Send a Message</h3>\r\n                        <div className=\"send-msg-close\">\r\n                        <i class=\"fas fa-times\"  onClick={() => {props.visible(false)}}></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-body\">\r\n                        <div className=\"creator-prj-info\">\r\n                            <div className=\"send-msg-creator\">\r\n                                <img className=\"send-msg-profilePic\" src={props.creatorProfilePic} />\r\n                                {props.creatorName}\r\n                            </div>\r\n                            <div className=\"send-msg-project\">\r\n                                <img className=\"send-msg-projectPic\" src={props.projectPic} />\r\n                                {props.projectName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"send-msg-text\">\r\n                            <textarea placeholder=\"Enter message. Max length: 500 characters\" value={msg} maxLength=\"500\" onChange={(event) =>setMessage(event.currentTarget.value)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-footer\">\r\n                        <button  onClick={SendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>           \r\n    </>\r\n    )\r\n}\r\n\r\nexport default SendMessagePopUp;\r\n","import React, { useState } from 'react';\r\nimport './EditProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport Alert from './Alert';\r\n\r\nfunction EditProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState((props.title));\r\n    const [summary, setSummary] = useState(props.summary);\r\n    const [description, setDescription] = useState(props.description);\r\n\r\n    const [website, setWebsite] = useState(props.website);\r\n    const [twitter, setTwitter] = useState(props.twitter);\r\n    const [telegram, setTelegram] = useState(props.telegram);\r\n    const [discord, setDiscord] = useState(props.discord);\r\n    const [linkedIn, setLinkedIn] = useState(props.linkedIn);\r\n    const [youtube, setYoutube] = useState(props.youtube);\r\n    const [twitch, setTwitch] = useState(props.twitch);\r\n    const [isOwner, setIsOwner] = useState(props.isOwner);\r\n    const [isLive, setIsLive] = useState(props.isLive);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(props.projectPhoto);\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                Are you sure you want to delete this project?\r\n                <button className=\"submit-form btn3\" onClick={deleteProject}>Delete Project</button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteProject = async() => {\r\n        const params = { projectTitle: (props.title) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n\r\n    const editProject = async () => {\r\n        try {            \r\n            console.log(props.title);\r\n            const params = { projectTitle: (props.title) }; \r\n            console.log(params);\r\n            const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n            console.log(project);\r\n            console.log(project);\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            setAlertContents(\"Updates Sumbitted!\");\r\n            setAlertVisible(true);\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Edit Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a Cover Photo<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                            <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Title<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder={title} value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 550 characters\" maxLength={550} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"submit-form btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <button className=\"submit-form btn2\" onClick={editProject}>Sumbit Changes</button>\r\n                            {isOwner && <button className=\"submit-form btn3\" onClick={deletePopUp}>Delete Project</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default EditProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport './ProjectPage.css';\r\nimport ProfileCard from './ProfileCard';\r\nimport Rating from './Rating';\r\nimport Bookmark from './Bookmark';\r\nimport RatingProject from './RatingProject';\r\nimport Reviews from './Reviews';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SendMessagePopUp from './SendMessagePopUp';\r\nimport Alert from './Alert';\r\nimport EditProject from './EditProject';\r\n\r\n\r\nfunction ProjectDisplay(props) {\r\n  const { user, Moralis } = useMoralis();  \r\n\r\n  const [ owner, setOwnerProject] = useState(false);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);\r\n  const [editProjectMenu, setOpenEditProjectMenu] = useState(false);\r\n  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  \r\n  const init = 0;\r\n\r\n  const verified = (props.isVerified);\r\n  const isLive = (props.isLive);\r\n  \r\n\r\n  const checkOwnership = async() => {\r\n    if(user) {\r\n    const username = user.attributes?.username;\r\n    if( username == props.creator) {\r\n      setOwnerProject(true);\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  const verificationEmail = async() => {\r\n    const params = { projectName: props.title};\r\n    console.log(params);\r\n    try{\r\n    await Moralis.Cloud.run(\"sendVerifyEmail\", params);\r\n    console.log(\"emailSent\")\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    console.log(user);\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkOwnership(); \r\n  }, [init])\r\n\r\n    return (           \r\n      <>\r\n        <div className=\"project-page\">\r\n          <div className=\"project-page-container\">              \r\n            <div className=\"project-page-body\">\r\n              <div className=\"project-page-project-container\">\r\n                <div className=\"project-page-title\">\r\n                { verified &&\r\n                  <div>\r\n                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                  </div>\r\n                  }\r\n                   {isLive &&\r\n                      <i class=\"fas fa-chart-line\">Live</i>                        \r\n                    }\r\n                    {!isLive &&\r\n                      <i class=\"fas fa-wrench\">InDev</i>                    \r\n                    }\r\n                  <h2>{props.title}</h2>\r\n                  <Rating\r\n                    title = {props.title}\r\n                  />\r\n                  <Bookmark\r\n                  projectTitle = {props.projectTitle}\r\n                  />\r\n                </div>\r\n                <div className=\"project-page-summary\">\r\n                  {props.summary}\r\n                </div>\r\n                <div className=\"project-page-photo\">\r\n                  <img  className=\"project-page-photo-img\" src={props.src} />\r\n                </div>\r\n          \r\n                <div className=\"project-page-description\">\r\n                  <h3>About</h3>\r\n                  \r\n                  <div className=\"project-page-links\">\r\n                  <Link className=\"website-link\" to={{ pathname: `https://${props.website}` }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n                    <SocialIconBar\r\n                      twitter={props.twitter}\r\n                      telegram={props.telegram}\r\n                      discord={props.discord}\r\n                      linkedIn={props.linkedIn}\r\n                      youtube={props.youtube}\r\n                      twitch={props.twitch}\r\n                    />\r\n                  </div>\r\n          \r\n                  <h5><img className=\"profileThumb\"src={props.creatorProfilePic} />{\" \"} {props.creator}{\" \"} {props.createdOn}</h5>\r\n                  <p>{props.description}</p>\r\n                </div>\r\n                <div className=\"ratingReviews\">\r\n                  <Reviews \r\n                  title = {props.title}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"project-page-creator-container\">\r\n                <div className=\"project-page-creator-wrapper\">\r\n                  <div className=\"project-page-creator-profile-wrapper\">\r\n                    <h4>Project Creator</h4>\r\n                    { !owner &&\r\n                    <button className=\"send-msg-button btn2\" onClick={() => userCheck()}> Send Message</button>\r\n                    }\r\n                    <ProfileCard\r\n                      username={props.creator}\r\n                      src={props.creatorProfilePic}\r\n                      bio={props.bio}\r\n                    />\r\n                    {owner &&                \r\n                        <div className=\"edit-project-btn-wrapper\">\r\n                          <button className= \"edit-project-btn btn1\" onClick={()=> setOpenEditProjectMenu(true)}>\r\n                            <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Edit&nbsp;Project</span>\r\n                          </button>                      \r\n                        </div>                \r\n                    }\r\n              \r\n                    { (owner && !verified) &&\r\n                      <button className=\"verify-request-button btn2\" onClick={verificationEmail}> Get Verified</button>\r\n                    }\r\n                  </div>\r\n                \r\n                {!owner &&\r\n                  <RatingProject \r\n                  projectName={props.title}\r\n                  />\r\n                }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"project-page-footer-container\">\r\n              <div className=\"project-page-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          { (!owner && sendMessagePopUpVisible) &&\r\n            <SendMessagePopUp\r\n            visible={setSendMessagePopUpVisible}\r\n            creatorProfilePic={props.creatorProfilePic}\r\n            creatorName={props.creator}\r\n            projectPic={props.src}\r\n            projectName={props.title}\r\n            />\r\n          }\r\n          {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        {editProjectMenu && \r\n        <EditProject \r\n        closeCreateProjectMenu={setOpenEditProjectMenu}\r\n        title={props.title}\r\n        summary={props.summary}\r\n        description={props.description}\r\n        website={props.website}\r\n        projectPhoto={props.src}\r\n        twitter={props.twitter}\r\n        telegram={props.telegram}\r\n        discord={props.discord}\r\n        linkedIn={props.linkedIn}\r\n        youtube={props.youtube}\r\n        twitch={props.twitch}\r\n        isOwner={owner}\r\n        \r\n        />}\r\n          \r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport ProjectDisplay from \"./ProjectPage\";\r\n\r\nconst ProjectData = ({ data }) => {\r\n    \r\n  const { Moralis } = useMoralis();  \r\n  const { title } = useParams();\r\n\r\n  const [ projectLoaded, setProjectLoaded ] = useState([\"\"]);\r\n  let init = 0;\r\n\r\n  const loadProject = async() => {\r\n    const params = { projectTitle: title };\r\n    const project = await Moralis.Cloud.run(\"projectData\", params);\r\n    setProjectLoaded(project);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProject();\r\n    },\r\n    [init],\r\n  );\r\n\r\n  const log = () => {\r\n    console.log(projectLoaded);\r\n  }\r\n\r\n    \r\n  return (\r\n      <>\r\n          {projectLoaded.map(project => (            \r\n            <div key={project.title} className=\"background\">                            \r\n                <ProjectDisplay\r\n                  title={project.title}\r\n                  summary={project.summary}\r\n                  src={project.projectPhoto}\r\n                  creator={project.username}\r\n                  creatorProfilePic={project.profilePic}\r\n                  bio={project.bio}\r\n                  createdOn = {project.createdOn}\r\n                  label={project.username}\r\n                  description={project.description}  \r\n                  projectTitle = {project.title}\r\n                  website={project.website}                \r\n                  twitter={project.twitter}\r\n                  telegram={project.telegram}\r\n                  discord={project.discord}\r\n                  linkedIn={project.linkedIn}\r\n                  youtube={project.youtube}\r\n                  twitch={project.twitch}\r\n                  objectId = {project.objectId}  \r\n                  isVerified = {project.isVerified}\r\n                  isLive = {project.isLive}              \r\n                />                \r\n            </div>\r\n          ))}        \r\n      </>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProjectData;","import React, {useState} from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport SaveProfile from './SaveProfile';\r\n\r\nfunction ProfileGridBox(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (    \r\n        <div className=\"project-grid-box-wrapper\">\r\n            <div className=\"profile-box-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`${url}/${props.username}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.landscapePic}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"profile-box-body\">\r\n                <div className=\"profile-box-profilepic\">\r\n                    <img  src={props.profilePic}  className=\"profile-box-profile-img\"/>\r\n                    <div className=\"profile-box-creator\">\r\n                        {props.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-box-summary\">\r\n                    {props.bio}\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-box-footer\">\r\n                <div className=\"saveProfile\">\r\n                    <SaveProfile \r\n                    profileName = {props.username}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProfileGridBox;\r\n","import React, {useState, useEffect} from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport './SearchBar.css';\r\nimport './ProjectGrid.css';\r\nimport ProfileGridBox from './ProfileGridBox';\r\n\r\nfunction LoadUsers() {\r\n\r\n  const { user, Moralis } = useMoralis();\r\n  const [ users, setUsers ] = useState([\"\"]);\r\n  const [ usersSaved, setUsersSaved ] = useState([\"\"]);  \r\n  const [ queryProfile, setQueryProfile] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  \r\n  const PagPrev = async() => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    await setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = async() => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    await setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  const LoadUsers = async() => {\r\n    console.log(pageNumber);\r\n    const params = { pageNum: pageNumber};\r\n    const userList = await Moralis.Cloud.run(\"loadUsers\", params);\r\n    setUsers(userList);\r\n  };\r\n\r\n  const SavedProfiles = async () => {\r\n    const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n    setUsersSaved(savedProfiles);\r\n  }\r\n\r\n  const SearchProfiles = async() => {\r\n    setNoneFound(false);\r\n    const params = { username: queryProfile};\r\n    const usersFound = await Moralis.Cloud.run(\"searchUsersByName\", params);\r\n    if(usersFound != ''){\r\n      setSearchResults(usersFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    LoadUsers();\r\n    },\r\n    [pageNumber]\r\n  );  \r\n\r\n  useEffect(() => {\r\n    if(user){\r\n    SavedProfiles();\r\n    }\r\n    },\r\n    [initLoad]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n          <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search projects by name\" \r\n                value={queryProfile} \r\n                onChange={(event) =>setQueryProfile(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProfiles()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProfiles} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n                </div>\r\n        </div>\r\n      {noneFound &&\r\n        <div className=\"cards-background\">\r\n        <h3>Search Results...<button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button></h3> \r\n          <div className='cards__container'>\r\n              <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n            </div> \r\n          </div> \r\n        </div> \r\n        }\r\n        {showSearchResults &&\r\n          <div className=\"cards-background\"> \r\n            <div className='cards__container'>\r\n            <h3 className=\"my-projects-title\">Search Results...<button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button></h3>\r\n              <div className='project-cards__wrapper'>\r\n                <div className='cards__items'>      \r\n                  {searchResults.map(userProfile => (                          \r\n                    <div key={userProfile.username} className=\"cards__item\">                                                   \r\n                      <ProfileCard\r\n                      bio={userProfile.bio}\r\n                      src={userProfile.profilePic}\r\n                      username={userProfile.username}          \r\n                      />                         \r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <React.Fragment>\r\n          <div className=\"cards\">\r\n            <div className=\"cards-background\"> \r\n\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROFILES</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n              <div className=\"project-grid-container\">\r\n                <div className=\"project-grid-wrapper\">\r\n                  {users.map(userProfile => (\r\n                    <div key={userProfile.username} className=\"project-grid-box\">\r\n                      <ProfileGridBox\r\n                        landscapePic={userProfile.landscapePic}\r\n                        bio={userProfile.bio}\r\n                        profilePic={userProfile.profilePic}\r\n                        username={userProfile.username}           \r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              </div>              \r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n                \r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadUsers;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport LoadUsers from '../LoadUsers';\r\n\r\nfunction Profiles () {\r\n    return (\r\n        <>\r\n            <LoadUsers />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Profiles;","import React, {useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SaveProfile from './SaveProfile';\r\n\r\nfunction UserProfile(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-wrapper\">\r\n                <div className=\"profile-background\">\r\n                    <img className='landscape-pic' src={props.landscapePic} alt=\"\"/>   \r\n                </div>\r\n                <div className=\"profile-header\">                        \r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={props.profilePic} alt=\"\"/>                        \r\n                    </div>                        \r\n                    <div className=\"profile-summary\">\r\n                        <h2 className=\"profile-page-username\">{props.username} </h2>\r\n                        <p className=\"profile-page-bio\">{props.bio}</p>\r\n                                          \r\n                    </div>\r\n                    <div className=\"edit-profile-wrapper\">\r\n                    <SaveProfile\r\n                        profileName = {props.username}\r\n                    />\r\n                    </div>                     \r\n                </div>                \r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserProfile\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport './User.css';\r\n\r\nfunction AboutUser(props) {\r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{props.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (props.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{props.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{props.skills}</p>\r\n                </div>                \r\n            </div>            \r\n            <SocialIconBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport UserProfile from \"./UserProfile\";\r\nimport AboutUser from \"./AboutUser\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport Carousel from \"./Carousel\";\r\nimport SendMessagePopUp from \"./SendMessagePopUp\";\r\nimport Alert from \"./Alert\";\r\nimport ProjectGridBox from \"./ProjectGridBox\";\r\n\r\n\r\nconst UserProfilePage = ({ data }) => {\r\n    \r\n  const { user, Moralis } = useMoralis();  \r\n  const { username } = useParams();\r\n  \r\n  const [ profileLoaded, setProfileLoaded ] = useState([\"\"]);\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);  \r\n  const [ userPage, setUserPage] = useState(false);\r\n  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  \r\n  let init = 0;\r\n  \r\n  const loadProfile = async() => {\r\n    const params = { userUsername: username };\r\n    const profile = await Moralis.Cloud.run(\"userProfileData\", params);    \r\n    setProfileLoaded(profile);    \r\n    checkUserPage();\r\n  };\r\n\r\n  const loadProfileProjects = async() => {\r\n    const params = { userUsername: username, skipAmount : pageNumber };\r\n    const projectsList = await Moralis.Cloud.run(\"renderUserProjects\", params);\r\n    setProjects(projectsList);\r\n  }\r\n\r\n  \r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n    \r\n  const checkUserPage = () => {\r\n    const userLoaded = profileLoaded[0].username; \r\n    const userVisiter = user.attributes?.username;\r\n    if(userLoaded == userVisiter) {\r\n      setUserPage(true);\r\n    } else {\r\n      setUserPage(false);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadProfile();    \r\n    },\r\n    [init],\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadProfileProjects();\r\n    },\r\n    [pageNumber]\r\n  );  \r\n\r\n\r\n  return (\r\n      <>  \r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                \r\n                    {profileLoaded.map(userProfile => (  \r\n                        <UserProfile\r\n                            username={userProfile.username}\r\n                            profilePic={userProfile.profilePic}\r\n                            userLocation={userProfile.userLocation}\r\n                            skills={userProfile.skills}\r\n                            website={userProfile.website}\r\n                            bio={userProfile.bio}\r\n                            createdOn = {userProfile.createdAt}\r\n                            landscapePic={userProfile.landscapePic}\r\n                            story={userProfile.story}\r\n                            twitter={userProfile.twitter}\r\n                            telegram={userProfile.telegram}\r\n                            discord={userProfile.discord}\r\n                            linkedIn={userProfile.linkedIn}\r\n                            twitch={userProfile.twitch}\r\n                            youtube={userProfile.youtube}\r\n                        />                    \r\n                    ))}   \r\n                </div>\r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                    {!userPage &&                  \r\n                      <button \r\n                        className=\"send-msg-button btn2\" \r\n                        onClick={() => userCheck()}\r\n                      > \r\n                        Send Message\r\n                      </button>\r\n                    }\r\n                          \r\n                            <div className=\"aboutme-wrapper\">\r\n                                {profileLoaded.map(userProfile => (  \r\n                                  <AboutUser \r\n                                  website={userProfile.website}\r\n                                  story={userProfile.story}\r\n                                  userLocation={userProfile.userLocation}\r\n                                  skills={userProfile.skills}\r\n                                  website={userProfile.website}                             \r\n                                  />\r\n                                ))}  \r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                            <div className=\"project-section-title\">\r\n                                    <h3>{username}'s Projects</h3>               \r\n                                </div>\r\n                            <div className=\"project-grid-container\">\r\n                              <div className=\"my-project-grid-wrapper\">\r\n                                  {projects.map(listItem => (\r\n                                      <div key={listItem.title} className=\"project-grid-box\">\r\n                                        <ProjectGridBox\r\n                                        title={listItem.title}\r\n                                        summary={listItem.summary}\r\n                                        src={listItem.projectPhoto}\r\n                                        username={listItem.username}\r\n                                        creatorProfilePic={listItem.profilePic}\r\n                                        createdOn = {listItem.createdOn}\r\n                                        label={listItem.username}\r\n                                        path={listItem.title}\r\n                                        isVerified = {listItem.isVerified}\r\n                                        />\r\n                                    </div>\r\n                                    ))}\r\n                                  </div>\r\n                                <div className=\"pagination\">\r\n                                  <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                                  <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                                </div>\r\n                              </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n        { sendMessagePopUpVisible &&\r\n          <SendMessagePopUp\r\n          visible={setSendMessagePopUpVisible}\r\n          creatorProfilePic={profileLoaded[0].profilePic}\r\n          creatorName={profileLoaded[0].username}\r\n          />  \r\n        }\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        }\r\n        </div>     \r\n      </>\r\n  );\r\n};\r\nexport default UserProfilePage;","import React from 'react';\r\nimport './ChatPage.css';\r\n\r\nfunction ProfileMessageCard(props) {\r\n    return (\r\n        <div className=\"pmc-container\">\r\n            <div className=\"pmc-profilePic\">\r\n                <img src={props.profilePic} />\r\n            </div>\r\n            <div className=\"pmc-body\">\r\n                <h5>{props.username}</h5>\r\n                <p>RE:{props.projectName}</p>\r\n                <div className=\"pmc-updatedAt\">\r\n                    <h5>{props.updatedAt}</h5>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileMessageCard;\r\n","import React, { useState, useEffect} from 'react';\r\nimport { useMoralis } from 'react-moralis';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './ChatPage.css';\r\nimport ProfileMessageCard from './ProfileMessageCard';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\n\r\n\r\nfunction ChatPage() {\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const [inboxUsers, setInboxUsers] = useState();\r\n    const [requestsUsers, setRequestsUsers] = useState();\r\n    const [ showInbox, setShowInbox] = useState(false);\r\n    const [ showReply, setShowReply] = useState(false);\r\n    const [ showRequests, setShowRequests] = useState(false);\r\n    const [chatContent, setChatContent] = useState();\r\n    const [ chatDisplay, setChatDisplay] = useState(false);\r\n    const [ activeChatId, setActiveChatId] = useState();\r\n    const [ processRequest, setProcessRequest] = useState(false);\r\n    const [ reply, setReply] = useState(\"\");\r\n    const [noUsers, setNoUsers] = useState(false);\r\n    \r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                Are you sure you want to delete this chat history?\r\n                <button className=\"submit-form btn3\" onClick={deleteChat}>Yes. Delete </button>\r\n                <button className=\"submit-form btn2\" onClick={setAlertVisible(false)}>Close </button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteChat = async() => {\r\n        // try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            if(conversation.attributes.requestAccepted == false) {\r\n                conversation.destroy().then((object) => {\r\n                    alert(\"Chat deleted.\");\r\n                }, (error) => {\r\n                    alert(error)\r\n                });                \r\n            } else {\r\n            conversation.set('requestAccepted', false);\r\n            await conversation.save();\r\n            alert('Message removed.');\r\n            await loadInboxProfiles();\r\n            } \r\n\r\n\r\n\r\n        const params = { projectTitle: (1) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        const hasProfile = user?.attributes?.profileCreated;\r\n        if( (balanceETH < 100) && (balanceBSC < 100) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n            return false;\r\n        }  else\r\n         if (!hasProfile) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.\r\n                <Link to='/myprofile'><button className=\"btn2\">My Profile</button></Link>\r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n                return false;\r\n        } else {\r\n            return true;\r\n        }       \r\n    }\r\n\r\n    const init = 0;\r\n\r\n    const CheckInboxClick = async() => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showInbox) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowRequests(false);\r\n                loadInboxProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const CheckRequestsClick = async () => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showRequests) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowInbox(false);\r\n                loadRequestsProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadInboxProfiles = async() => {\r\n        setNoUsers(false);\r\n        const profileCards = await Moralis.Cloud.run(\"loadInboxProfiles\");\r\n        if(profileCards !== 'undefined') {\r\n        setInboxUsers(profileCards);\r\n        setShowInbox(true);\r\n        setShowReply(true);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////// profiles that have sent messages to!\r\n    const loadRequestsProfiles = async() => { \r\n        setNoUsers(false); \r\n        setShowInbox(false);      \r\n        const profileCards = await Moralis.Cloud.run(\"loadRequestsProfiles\");\r\n        if(profileCards !== 'undefined') {\r\n        setRequestsUsers(profileCards);\r\n        setShowRequests(true);\r\n        setShowReply(false);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n\r\n    const loadRequestMessage = async(chatId, permission) => {\r\n        setActiveChatId(0);\r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadRequestMessage\", params);\r\n        setChatContent(requestMessage);\r\n        setProcessRequest(permission);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n    }\r\n\r\n    const loadInboxMessage = async(chatId) => {  //rename to load conversation and adjust to show all messages associated with conversation from new to old\r\n        setActiveChatId(0);   \r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadInboxMessage\", params);\r\n        setChatContent(requestMessage);        \r\n        await activateChatListener(chatId);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n        setShowInbox(false); \r\n        setShowReply(true);\r\n    }\r\n\r\n    \r\n    const activateChatListener = async(chatId) => {   \r\n        let query = new Moralis.Query('Messages');\r\n        let subscription = await query.subscribe(); \r\n        subscription.on('create', async(object) => {            \r\n            const parent = object.get('parent');            \r\n            const parentId = parent.id;\r\n            let objProfilePic = object.get('fromProfilePic');   \r\n            const objDate = object.get('date');\r\n            const objMessage = object.get('message');\r\n            const objTime = object.get('time');\r\n            if(parentId == chatId) {\r\n                setChatContent(prev => [...prev, \r\n                    {\r\n                        date: objDate,\r\n                        fromProfilePic: objProfilePic,\r\n                        time: objTime,\r\n                        message: objMessage\r\n                    }]);\r\n                }             \r\n        });\r\n    }\r\n\r\n    const acceptRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', true);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request accpeted! Conversation moved to inbox.\");\r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles();\r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const declineRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', false);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request declined and removed.\"); \r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles(); \r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const sendReply = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];           \r\n            let toUser;\r\n            if (conversation.attributes?.user1.id == user.id) {\r\n                toUser = conversation.attributes?.user2.id;\r\n            } else {\r\n                toUser = conversation.attributes?.user1.id;\r\n            }            \r\n            const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n            const msgTime = new Date().toLocaleTimeString('en-US');\r\n            const params = { from: user.attributes?.username, fromProfilePic: user.attributes?.profilePic?._url, to: toUser, date: msgDate, time: msgTime, message: reply, chatId: conversation.id};        \r\n            const message = await Moralis.Cloud.run(\"sendReply\", params); \r\n            const relation = conversation.relation(\"messages\");\r\n            relation.add(message);\r\n            await conversation.save();   \r\n            setReply(\"\");               \r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [init])\r\n    \r\n\r\n    return (\r\n        <div className=\"chat-background\">\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-sidebar\">\r\n                    <div className=\"chat-messaging-header-left\">                       \r\n                        <button className=\"btn2 header-left-btn-msg\" onClick={() => CheckInboxClick()}><h5>Messages</h5></button>\r\n                        <button className=\"btn2 header-left-btn-req\"onClick={() => CheckRequestsClick()}><h5>Requests</h5></button>\r\n                    </div>\r\n                    <div className=\"chat-messaging-sidebar-content\">\r\n                        { showInbox &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                            {noUsers && <div className=\"chat-messaging-header-left-empty\" onClick={() => setShowInbox(false)}>No Messages</div>}\r\n                            {inboxUsers.map(profile => (                          \r\n                            <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadInboxMessage(profile.chatId)}>                                                   \r\n                                <ProfileMessageCard\r\n                                    username={profile.username}\r\n                                    profilePic={profile.profilePic}\r\n                                    projectName={profile.projectName}\r\n                                    updatedAt={profile.date}\r\n                                    lastAction={profile.projectName}                                \r\n                                />                            \r\n                            </div>\r\n                            ))}\r\n                        </ul>\r\n                        }\r\n                        { showRequests &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                        {noUsers && <div className=\"chat-messaging-header-left-empty \" onClick={() => setShowRequests(false)}>No Requests</div>}\r\n                        {requestsUsers.map(profile => (                          \r\n                          <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadRequestMessage(profile.chatId, profile.permission)}>                                                   \r\n                              <ProfileMessageCard\r\n                                username={profile.username}\r\n                                profilePic={profile.profilePic}\r\n                                projectName={profile.projectName}\r\n                                updatedAt={profile.date}\r\n                                lastAction={profile.projectName}                                \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </ul>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-messaging\">   \r\n                    <div className=\"chat-messaging-header-right\">\r\n                        {/* <div className=\"show-chat-sidebar\">\r\n                            <button className=\"show-chat-sidebar-btn\">SideBar</button>\r\n                        </div> */}\r\n                        <h5>Welcome </h5>\r\n                            <div className=\"chat-messaging-welcome-user\">\r\n                                <img className=\"chat-messaging-welcome-user-profilePic\" src={user.attributes?.profilePic?._url} />\r\n                                <h5>{user.attributes?.username}</h5>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"chat-messaging-content-container\">\r\n                            { chatDisplay && \r\n                                <div className=\"chat-messaging-content-messageList\">                                                               \r\n                                    <div className=\"chat-messaging-content-message-wrapper\">\r\n                                        <ScrollableFeed forceScroll={true}  >                                            \r\n                                            {chatContent.map(message => (\r\n                                                <div key={message.username} className=\"chat-messaging-content-messageLoaded\">\r\n                                                    <div className=\"chat-messaging-content-message\">\r\n                                                        <div className=\"chat-messaging-content-profilePic-wrapper\">\r\n                                                            <img className=\"chat-messaging-content-profilePic\" src={message.fromProfilePic} />\r\n                                                        </div>\r\n                                                        <div className=\"chat-messaging-content-message-text\">\r\n                                                            <p>{message.message}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"chat-messaging-content-message-time\">\r\n                                                        <p>{message.date}, {message.time}</p>\r\n                                                    </div>\r\n                                            </div>\r\n                                            ))}\r\n                                        </ScrollableFeed>\r\n                                    </div>\r\n                                </div>\r\n                            }   \r\n                        \r\n                    </div>\r\n                    <div className=\"chat-messaging-footer\">\r\n                        {showReply &&\r\n                        <>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\" Reply...\" \r\n                                className=\"chat-messaging-reply-text\" \r\n                                value={reply} \r\n                                onChange={(event) =>setReply(event.currentTarget.value)} \r\n                                onKeyPress={(event) => { if(event.key === \"Enter\") {sendReply()}}}>\r\n\r\n                            </input>\r\n                            <div className=\"chat-messaging-reply-button\">\r\n                                <i class=\"fas fa-paper-plane\" onClick={() => sendReply()}></i>\r\n                            </div>\r\n                            <div className=\"chat-messaging-trash-button\">\r\n                                <i class=\"fas fa-trash-alt\" onClick={() => deletePopUp()}></i>\r\n                            </div>\r\n                            \r\n                        </>\r\n                        }\r\n                        { (showRequests && chatDisplay) &&\r\n                        <div className=\"chat-messaging-footer-request-options\">\r\n                            {!processRequest &&\r\n                            <h6>Waiting for user to accept request.</h6>\r\n                            }\r\n                            {processRequest &&\r\n                            <>\r\n                            <button className=\"btn2\" onClick={()=> acceptRequest()}>Accept</button>\r\n                            <button className=\"btn3\" onClick={()=> declineRequest()}>Decline</button>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\n\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/pages/home';\nimport Platform from './components/pages/platform';\nimport MyProfile from './components/pages/myprofile';\nimport Projects from './components/pages/projects';\nimport ProjectData from './components/ProjectData';\nimport Profiles from './components/pages/profiles';\nimport UserProfilePage from './components/UserProfileData';\nimport ChatPage from './components/ChatPage';\n\n\nfunction App() {\n  const history = useHistory();\n  \n  return (\n    <>\n      <Router history= {history}>\n      <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/platform' exact component={Platform} />\n          <Route path='/projects' exact component={Projects} />\n          <Route path='/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/profiles' exact component={Profiles} />\n          <Route path='/profiles/:username'>\n            <UserProfilePage />\n          </Route>\n          <Route path='/myprofile' exact component={MyProfile} />\n          <Route path='/myprofile/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/chat' exact component={ChatPage} />\n        </Switch>      \n      </Router>\n      \n    </>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MoralisProvider } from \"react-moralis\";\n\nconst appId='TTxOqOgA9vSsj2z84WeDRi4i1iDgbo9kruLWqfxd';\nconst serverUrl='https://siixq6taugjh.moralis.io:2053/server';\n\nReactDOM.render(\n  <MoralisProvider appId={appId} serverUrl={serverUrl}>\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}