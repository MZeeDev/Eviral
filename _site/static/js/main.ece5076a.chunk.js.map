{"version":3,"sources":["img/roundlogo.png","img/eViralLogo2.png","img/beviral.png","img/defaultProfile.png","img/metamask.png","img/walletconnect.png","components/Alert.js","img/newlogo2.png","img/newlogoBSC2.png","components/Navbar.js","components/CardItem.js","components/Cards.js","components/OnRamper.js","components/TokenPrices.js","img/howitworks.jpg","img/vclabsmobile.jpg","img/vclabsdesktop.png","components/HeroSection.js","components/pages/home.js","components/pages/platform.js","img/defaultLandscape.jpg","img/construction.png","components/CreateProject.js","components/Profile.js","components/UpdateProfile.js","components/AboutMe.js","components/Bookmark.js","components/Rating.js","components/ProjectCard.js","components/MyProjectsCard.js","components/Carousel.js","components/ProjectGridBox.js","components/LoadMyProjects.js","components/SaveProfile.js","components/ProfileCard.js","components/pages/myprofile.js","components/Projects.js","components/pages/projects.js","img/ethlogo.png","img/bsclogo.png","img/maticlogo.png","img/avaxlogo.png","components/NFTCard.js","components/Wallet.js","components/pages/wallet.js","components/RatingProject.js","components/ReviewCard.js","components/Reviews.js","components/SocialIconBar.js","components/SendMessagePopUp.js","components/EditProject.js","components/ProjectPage.js","components/ProjectData.js","components/ProfileGridBox.js","components/LoadUsers.js","components/pages/profiles.js","components/UserProfile.js","components/AboutUser.js","components/UserProfileData.js","components/ProfileMessageCard.js","components/ChatPage.js","img/newlogoAVAX.png","img/newlogoMATIC.png","components/TokenSwap.js","App.js","index.js"],"names":["Alert","props","className","src","Logo","content","onClick","visible","Navbar","useMoralis","authenticate","isAuthenticated","user","logout","Moralis","auth","useState","click","setClick","setButton","dropdown","setDropdown","balance","setBalance","balanceBSC","setBalanceBSC","profilePic","setProfilePic","username","setUsername","setDisplayConnect","connectMenu","setOpenConnectMenu","closeMobileMenu","authenticateUserMM","a","console","log","alert","renderBalance","attributes","_url","authenticateUserWC","provider","logoutUser","avatar","window","location","href","goHome","Web3","getERC20","tokenAddress","eViralBalance","chain","beViralBalance","eBalance","bBalance","toFixed","bvBalance","useEffect","addEventListener","innerWidth","to","class","alt","LogoBSC","mmLogo","wcLogo","CardItem","path","target","label","text","Cards","pathname","OnRamper","defaultCrypto","id","title","frameborder","allow","TokenPrices","isInitialized","eViralPrice","setEViralPrice","beViralPrice","setBEViralPrice","getPrices","options1","address","exchange","Web3API","token","getTokenPrice","bscPrice","beViral","usdPrice","options2","ethPrice","eViral","HeroSection","classname","autoPlay","loop","muted","HowItWorks","VCLabsM","VCLabsD","width","variant","Home","Platform","eViralLogo","height","beViralLogo","CreateNewProject","saveFile","useMoralisFile","setTitle","summary","setSummary","description","setDescription","website","setWebsite","twitter","setTwitter","telegram","setTelegram","discord","setDiscord","linkedIn","setLinkedIn","youtube","setYoutube","twitch","setTwitch","isLive","setIsLive","alertVisible","setAlertVisible","alertContents","setAlertContents","photoFile","setPhotoFile","photoFileName","setPhotoFileName","construction","projectPhotoPreview","setProjectPhotoPreview","createNewProject","newProject","Object","extend","project","file","name","date","Date","User","current","currentUser","userObjectId","saveIPFS","fileIpfs","set","toLocaleDateString","undefined","save","relation","add","closeCreateProjectMenu","htmlFor","style","color","type","accept","multiple","required","onChange","e","files","URL","createObjectURL","placeholder","value","event","currentTarget","rows","maxLength","Profile","error","isUploading","moralisFile","landscape","setLandscape","balanceETH","setBalanceETH","changeProfilePicMenu","setOpenChangeProfilePicMenu","previewPic","setPreviewPic","onSubmitPhoto","editProfileCheck","openEditProfileMenu","userCheck","profileCreated","defaultProfile","landscapePic","defaultLandscape","bio","openCreateProjectMenu","onSubmit","UpdateProfile","setUserData","landscapeFile","setLandscapeFile","landscapeFileName","setLandscapeFileName","setLandscapePic","userLocation","setUserLocation","story","setStory","skills","setSkills","setBio","startRate","setStartRate","payCurrency","setPayCurrency","checkProfileCreated","handleSave","onSubmitLandscape","closeEditProfileMenu","min","minLength","AboutMe","linkenIn","Bookmark","bookmark","setBookmark","saveProject","Project","query","Query","equalTo","projectTitle","find","removeProject","exists","remove","checkBookmark","select","queryResults","results","i","length","push","Rating","rating","setRating","reviewCount","setReviewCount","checkRating","params","Cloud","run","projectRating","Array","map","star","ProjectCard","url","useRouteMatch","verified","isVerified","category","creatorProfilePic","createdOn","MyProjectsCard","Carousel","children","show","currentIndex","setCurrentIndex","setLength","isRepeating","setIsRepeating","transitionEnabled","setTransitionEnabled","prevState","transform","transition","onTransitionEnd","output","index","reverse","renderExtraPrev","renderExtraNext","ProjectGridBox","LoadMyProject","projects","setProjects","pageNumber","setPageNumber","LoadProjects","page","Fragment","listItem","projectPhoto","SaveProfile","saved","setSaved","isSaved","saveProfile","profileName","userProfile","removeProfile","checkSavedProfile","ProfileCard","MyProfile","createProjectMenu","setOpenCreateProjectMenu","editProfileMenu","setOpenEditProfileMenu","savedProjects","setSavedProjects","usersSaved","setUsersSaved","LoadSavedProjects","savedProjectsList","LoadSavedProfiles","savedProfiles","LoadMyProjects","ProjectsList","match","queryName","setQueryName","showSearchResults","setShowSearchResults","searchResults","setSearchResults","noneFound","setNoneFound","skipAmount","projectsList","PagPrev","PagNext","SearchProjects","projectsFound","onKeyPress","key","Projects","NFTCard","symbol","tokenId","contractType","amount","Wallet","currentChain","setCurrentChain","tokens","setTokens","nfts","setNFTS","transactions","viewTokens","setViewTokens","viewNFTs","setViewNFTs","viewTransactions","setViewTransactions","ETH","chainLogo","setChainLogo","theme","setTheme","getTokens","options","order","account","getTokenBalances","balances","Promise","all","token_address","priceInfo","decimals","price","usdAmount","list","getNFTs","fixURL","startsWith","split","slice","nftList","result","nft","token_uri","fetch","then","response","json","data","image","changeChain","logo","BSC","MATIC","AVAX","token_id","contract_type","transaction","hash","wallet","RatingProject","review","setReview","userReview","setUserReivew","stars","setStars","reviewTitle","setReviewTitle","prevTitle","setPrevTitle","hasReview","setHasReview","setReviewed","loadUserRating","projectName","currentProject","projectRelation","reviewText","boolReview","postProjectRating","newReview","ratingValue","ReviewCard","reviewerPic","createdAt","Reviews","reviews","setReviews","seeReviews","setSeeReviews","loadReviews","reviewList","SocialIconBar","SendMessagePopUp","msg","setMessage","SendMessage","msgDate","year","month","day","msgTime","toLocaleTimeString","from","creatorName","time","message","projectPic","EditProject","isOwner","deletePopUp","deleteProject","destroy","object","editProject","ProjectDisplay","owner","setOwnerProject","sendMessagePopUpVisible","setSendMessagePopUpVisible","editProjectMenu","setOpenEditProjectMenu","openChangePhoto","setOpenChangePhoto","photo1","activePhoto","setActivePhoto","photoNumber","setPhotoNum","currentPhoto","checkOwnership","creator","verificationEmail","openChangePhotoMenu","photoNum","setActivePhotos","photo2","photo3","ProjectData","useParams","projectLoaded","setProjectLoaded","loadProject","projectPhoto1","projectPhoto2","objectId","ProfileGridBox","ratesLive","setRatesLive","LoadUsers","users","setUsers","queryProfile","setQueryProfile","prevPageNumber","nextPageNumber","pageNum","userList","SavedProfiles","SearchProfiles","usersFound","Profiles","UserProfile","AboutUser","UserProfilePage","profileLoaded","setProfileLoaded","userPage","setUserPage","setIsSaved","loadProfile","userUsername","profile","checkUserPage","loadProfileProjects","userLoaded","userVisiter","ProfileMessageCard","updatedAt","ChatPage","inboxUsers","setInboxUsers","requestsUsers","setRequestsUsers","showInbox","setShowInbox","showReply","setShowReply","showRequests","setShowRequests","chatContent","setChatContent","chatDisplay","setChatDisplay","activeChatId","setActiveChatId","processRequest","setProcessRequest","reply","setReply","noUsers","setNoUsers","numRequests","setNumRequests","notifyReq","setNotifyReq","sendingMsg","setSendingMsg","deleteChat","Conversation","findConversation","conversationFound","conversation","requestAccepted","loadInboxProfiles","hasProfile","CheckInboxClick","CheckRequestsClick","loadRequestsProfiles","profileCards","numberOfRequests","loadRequestMessage","chatId","permission","requestMessage","loadInboxMessage","activateChatListener","subscribe","on","parent","get","parentId","objProfilePic","objDate","objMessage","objTime","prev","fromProfilePic","acceptRequest","declineRequest","sendReply","toUser","user1","user2","lastAction","forceScroll","TokenSwap","nativeAmount","setNativeAmount","viralTokenAmount","setViralTokenAmount","nativeBalance","setNativeBalance","viralBalance","setViralBalance","switchNetworkBSC","switchNetworkETH","switchNetworkMATIC","switchNetworkAVAX","getNativeBalance","chainBalance","viralTokenBalance","getQuote","number","Number","Units","Plugins","oneInch","quote","fromTokenAddress","toTokenAddress","toTokenAmount","swap","enable","initPlugins","userAddress","checkAllowance","fromAddress","protocols","slippage","receipt","getSupportedTokens","owner_address","spender_address","getTokenAllowance","allowance","init","plugins","web3","currentProvider","request","method","chainId","code","chainName","rpcUrls","nativeCurrency","blockExplorerUrls","display","selected","LogoETH","LogoAVAX","LogoMATIC","App","history","useHistory","exact","component","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.ece5076a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roundlogo.befa4d11.png\";","export default __webpack_public_path__ + \"static/media/eViralLogo2.5c4556ad.png\";","export default __webpack_public_path__ + \"static/media/beviral.83bfabd5.png\";","export default __webpack_public_path__ + \"static/media/defaultProfile.c7fa3ad6.png\";","export default __webpack_public_path__ + \"static/media/metamask.2c7ea74a.png\";","export default __webpack_public_path__ + \"static/media/walletconnect.00a434b3.png\";","import React, {useState} from 'react';\r\nimport Logo from '../img/roundlogo.png';\r\nimport './Alert.css';\r\n\r\nfunction Alert(props) {\r\n    const notVisible = (visble) => props.visible(false);\r\n    return (\r\n        <>\r\n            <div className=\"alert-background\">\r\n                <div className=\"alert-container\">\r\n                    <div className=\"alert-wrapper\">\r\n                        <div className=\"alert-title\">\r\n                            <img className=\"alertLogo\" src={Logo} ></img>\r\n                            <h3>MESSAGE</h3>\r\n                        </div>\r\n                        <div className=\"alert-options\">\r\n                            {props.content}\r\n                        </div>\r\n                        <div className=\"alert-footer\">\r\n                            <button  onClick={() => {props.visible(false)}}>CLOSE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","export default __webpack_public_path__ + \"static/media/newlogo2.7c5e7fdf.png\";","export default __webpack_public_path__ + \"static/media/newlogoBSC2.6d1651ed.png\";","import React, {useState, useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { Button } from './Button';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport roundLogo from '../img/roundlogo.png';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport avatar from '../img/defaultProfile.png';\r\nimport mmLogo from '../img/metamask.png';\r\nimport wcLogo from '../img/walletconnect.png';\r\nimport './DropdownMenu.css';\r\nimport './NavbarConnectMenu.css';\r\nimport Alert from './Alert';\r\nimport Logo from '../img/newlogo2.png';\r\nimport LogoBSC from '../img/newlogoBSC2.png';\r\n\r\nfunction Navbar() {\r\n    const { authenticate, isAuthenticated, user, logout, auth, Moralis} = useMoralis();\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [balance, setBalance] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    const [profilePic, setProfilePic] = useState();\r\n    const [username, setUsername] = useState(\"Username\");\r\n    const [displayConnect, setDisplayConnect] = useState(true);\r\n    \r\n\r\n    const [ connectMenu, setOpenConnectMenu ] = useState(false);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const authenticateUserMM = async () =>{ \r\n        console.log(1);\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate();\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const authenticateUserWC = async () =>{\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate({ provider: \"walletconnect\" });                \r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const logoutUser = async () => {\r\n        await logout();\r\n        setDisplayConnect(true);\r\n        setProfilePic(avatar);\r\n        const goHome = () => {window.location.href=\"/\"};\r\n        goHome();\r\n    }\r\n    \r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**9);\r\n        const bBalance = beViralBalance.balance/(10**9);\r\n        const balance = (eBalance.toFixed(0));\r\n        const bvBalance = (bBalance.toFixed(0));\r\n        setBalance(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <=960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setProfilePic(user.attributes?.profilePic?._url);\r\n            setUsername(user.attributes.username);\r\n            renderBalance();\r\n          }\r\n        }, [user]);\r\n\r\n    window.addEventListener('resize', showButton);\r\n        \r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-nav\">\r\n                    <div className='menu-icon' onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>                        \r\n                <ul className=\"navbar-logo\">\r\n                    <Link to=\"/\" className=\"navbar-logo\">  \r\n                    <div className=\"viralcrypto\">\r\n                        <h1> viralcrypto </h1>\r\n                        </div>                       \r\n                        {/* <img className=\"roundLogo\" src={roundLogo} alt=\"\" />                   */}\r\n                    </Link>                                      \r\n                </ul>\r\n\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-home\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/projects' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-tasks\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/profiles' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-people-arrows\"></i>\r\n                            </Link>\r\n                        </li> \r\n                        \r\n                        {user &&\r\n                            <>\r\n                                <li className='nav-item' onClick={closeMobileMenu}>\r\n                                    <Link to='/chat' className='nav-links' >\r\n                                        <i class=\"far fa-comments\"></i>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link to='/wallet' className='nav-links' onClick={closeMobileMenu}>\r\n                                        <i class=\"fas fa-wallet\"></i>\r\n                                    </Link>\r\n                                </li>\r\n                                {/* <li className='nav-item'>\r\n                                    <Link to='/swap' className='nav-links' onClick={closeMobileMenu}>\r\n                                    <i class=\"fas fa-sync-alt\"></i>\r\n                                    </Link>\r\n                                </li> */}\r\n                            </>\r\n                        }\r\n                    </ul>\r\n               \r\n                    \r\n                <div className=\"navbar-user\">\r\n                    <li className='nav-item'>                        \r\n                        <div className=\"avatarPic-wrapper\">\r\n                            <img className=\"avatarPic\" src={profilePic}/>\r\n                        </div>                                                \r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        { isAuthenticated && \r\n                        <div className=\"caret\">\r\n                            <i class=\"fas fa-caret-down\" onClick={() => {setDropdown(!dropdown)}}>\r\n                                {dropdown && \r\n                                <div className=\"dropdown\">\r\n                                    <li className=\"dropdown-item-user\">\r\n                                        <span className=\"dropdown-icon\"></span>\r\n                                        <img className=\"avatarPic\" src={profilePic}/>\r\n                                        <span className=\"dropdown-username\"> {username}</span>\r\n                                        <span className=\"dropdown-right-icon\"></span>\r\n                                    </li>\r\n                                    <li className=\"dropdown-item\">\r\n                                        <div className=\"wallet-balances\">\r\n                                            <div className=\"showBalance\">\r\n                                                <img className=\"eViralLogo-Dropdown\" src={Logo} alt=\"\" ></img>\r\n                                                {balance}\r\n                                            </div>\r\n                                            <div className=\"showBalanceBSC\">\r\n                                                <img className=\"eViralLogo-Dropdown\" src={LogoBSC} alt=\"\" ></img>\r\n                                                {balanceBSC}\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </li>                                \r\n                                    <Link to=\"/myprofile\" className=\"dropdown-item\" >\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"far fa-user\"></i>\r\n                                        </span>\r\n                                        My Profile\r\n                                    </Link>\r\n                                    \r\n                                    <Link to=\"/chat\" className=\"dropdown-item\">\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"fas fa-comments\"></i>\r\n                                        </span>\r\n                                        Messages\r\n                                    </Link>\r\n                                    <Link to=\"/wallet\" className=\"dropdown-item\">\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"fas fa-wallet\"></i>\r\n                                        </span>\r\n                                        My Wallet\r\n                                    </Link>\r\n                                    \r\n                                    <li className=\"dropdown-logout\">\r\n                                        <button className=\"btn1  logout-btn\" onClick={() => {setDropdown(!dropdown)}}>Close</button>                                            \r\n                                            <button className=\"btn2 logout-btn\" onClick={() => logoutUser()}>\r\n                                            Log&nbsp;Out\r\n                                            <i class=\"fas fa-sign-out-alt\"></i>\r\n                                        </button>                                        \r\n                                    </li>\r\n                                </div>                                 \r\n                                }\r\n                            </i>\r\n                        </div>\r\n                        }\r\n                    </li>\r\n                    { !isAuthenticated && <button className='btn1'  onClick={() => setOpenConnectMenu(true)}>\r\n                        Wallet&nbsp;Connect\r\n                    </button>  } \r\n                    { connectMenu &&\r\n                    <div className=\"connectMenu-background\">\r\n                        <div className=\"connectMenu-container\">\r\n                            <div className=\"connectMenu-wrapper\">\r\n                                <div className=\"connectMenu-title\">\r\n                                    <h3>Connect with Web3</h3>\r\n                                </div>\r\n                                <div className=\"connectMenu-options\">\r\n                                    <div className=\"connectMenu-metamask\"onClick={() => authenticateUserMM()}>                                        \r\n                                        <button  className=\"connectMenu-btn\"><img className=\"metamask-logo\" src={mmLogo} /></button>\r\n                                    </div>\r\n                                    <div className=\"connectMenu-walletConnect\"  >\r\n                                        <button className=\"connectMenu-btn\" ><img className=\"walletconnect-logo\" src={wcLogo} onClick={() => authenticateUserWC()}/></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"connectMenu-footer\">\r\n                                    <button  onClick={() => setOpenConnectMenu(false)}>CLOSE</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                    }                                     \r\n                </div>                                                 \r\n                </div>\r\n                                          \r\n            </nav>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n    return (\r\n        <>\r\n            <li className='cards__item'>\r\n                <Link className='cards__item__link' to={props.path} target=\"_blank\">\r\n                    <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n                        <img src={props.src} alt='' className='cards__item__img'/>\r\n                    </figure>\r\n                    <div className='class__item__info'>\r\n                        <h5 className='cards__item__text'>{props.text}</h5>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\nimport CardItem from './CardItem';\r\nimport './Cards.css';\r\n\r\nfunction Cards() {\r\n    return (\r\n        <div className='cards'>\r\n            <h1>Evolving eViral Partners</h1>\r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                    <ul className='cards__items'>\r\n                        <CardItem \r\n                        src='images/kyubiworld.png'\r\n                        text='Kyubi World - NFTs: A place for aspiring artists to flourish'\r\n                        label='Kyubi World'\r\n                        path={{ pathname: \"https://www.kyubi.world\"}} \r\n                        />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './OnRamper.css';\r\n\r\n\r\nexport default function OnRamper() {\r\n    return (\r\n        <div>\r\n            <iframe\r\n                className=\"onramper-widget\"\r\n                defaultCrypto=\"ETH\"\r\n                id=\"onramper-widget\"\r\n                title=\"Onramper widget\"\r\n                frameborder=\"no\"\r\n                allow=\"accelerometer; autoplay; camera; gyroscope; payment;\"                \r\n                src=\"https://widget.onramper.com?color=266678&apiKey=pk_test_uJQ9wgwePDgiietYBRP6uhVvx_7RJTULFfPUk04BUq40\">\r\n                </iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './TokenPrices.css';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport { Moralis } from 'moralis';\r\nimport { useMoralis } from 'react-moralis';\r\nimport Logo from '../img/newlogo2.png';\r\nimport LogoBSC from '../img/newlogoBSC2.png';\r\n\r\nfunction TokenPrices() {\r\n    const { isInitialized } = useMoralis();\r\n\r\n\r\n    const [eViralPrice, setEViralPrice] = useState(0);\r\n    const [beViralPrice, setBEViralPrice] = useState(0);\r\n    const init = 0;\r\n\r\n    const getPrices = async() => {\r\n\r\n        const options1 = {\r\n            address: \"0x7cec018ceef82339ee583fd95446334f2685d24f\",\r\n            chain: \"bsc\",\r\n            exchange: \"pancakeswap-v2\"\r\n        };\r\n        const bscPrice = await Moralis.Web3API.token.getTokenPrice(options1);\r\n        const beViral = bscPrice.usdPrice.toFixed(10);\r\n        console.log(`beViral: ${beViral}`)\r\n        setBEViralPrice(beViral);\r\n        const options2 = {\r\n            address: \"0x7cec018ceef82339ee583fd95446334f2685d24f\",\r\n            chain: \"eth\",\r\n            exchange: \"uniswap-v2\"\r\n        };\r\n        const ethPrice = await Moralis.Web3API.token.getTokenPrice(options2);\r\n        const eViral = ethPrice.usdPrice.toFixed(10);\r\n        console.log(`eViral: ${eViral}`)\r\n        setEViralPrice(eViral);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n         getPrices();\r\n        }\r\n      }, [isInitialized])\r\n\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"tokenPrices\">\r\n                <div className=\"tokenPrices-wrapper\">\r\n                    <div className=\"eViral-price\">\r\n                        <img className=\"eViralLogo\" src={Logo}/>${eViralPrice}\r\n                    </div>\r\n                    <div className=\"beViral-price\">\r\n                        <img className=\"eViralLogo\" src={LogoBSC}/>${beViralPrice}\r\n                    </div>\r\n                </div>\r\n            </div>     \r\n        \r\n    )\r\n}\r\n\r\nexport default TokenPrices\r\n","export default __webpack_public_path__ + \"static/media/howitworks.aebd4d8f.jpg\";","export default __webpack_public_path__ + \"static/media/vclabsmobile.4aa440cf.jpg\";","export default __webpack_public_path__ + \"static/media/vclabsdesktop.44e0ccb9.png\";","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nimport './HeroSection.css';\r\nimport { ByMoralis } from 'react-moralis';\r\nimport Cards from './Cards';\r\n\r\nimport OnRamper from './OnRamper';\r\nimport TokenPrices from './TokenPrices';\r\nimport FortmaticWallet from './FortmaticWallet';\r\nimport { Moralis } from 'moralis';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nimport Logo from '../img/newlogo2.png';\r\nimport LogoBSC from '../img/newlogoBSC2.png';\r\nimport HowItWorks from \"../img/howitworks.jpg\";\r\nimport VCLabsM from \"../img/vclabsmobile.jpg\";\r\nimport VCLabsD from \"../img/vclabsdesktop.png\";\r\n\r\nfunction HeroSection() {\r\n    \r\n    const { isInitialized, user } = useMoralis();\r\n    const [ chain, setChain] = useState();\r\n    const [ nativeToken, setNativeToken] = useState();\r\n    const [ amount, setAmount] = useState(0);\r\n    \r\n    const eth = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\r\n    const bnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"background-homepage\">\r\n            <video src=\"/videos/eViral.mp4\" classname=\"background-mp4\" autoPlay loop muted />\r\n                <div className='hero-container'>\r\n                    <TokenPrices />\r\n                    <div className=\"homepage-welcome\">\r\n                        {/* <h1> Viral Crypto </h1> */}\r\n                        <h2 className=\"hero-text\">Connecting Innovators and Influencers in DeFI</h2>\r\n                        <p className=\"hero-text\">Own eViral or BeViral and join the network of independent blockchain creators.</p>\r\n                    </div>\r\n                    <div className=\"homepage-buttons\">\r\n                        <Link to='/projects' className=\"homepage-button btn2\">Discover&nbsp;Projects</Link>\r\n                        <Link to='/profiles' className=\"homepage-button btn2\">Find&nbsp;Profiles</Link>\r\n                        <a href=\"#vclabs\" className=\"homepage-button btn2\">VC&nbsp;Labs</a>\r\n                    </div>\r\n                    <div id=\"how-it-works1\">                    \r\n                        <img src={HowItWorks} />\r\n                    </div>\r\n                    <div id=\"how-it-works2\">\r\n                    <img src={Logo} id=\"how-it-works-logo\"/>\r\n                    <div id=\"how-it-works-title\">\r\n                        <h4>How it Works</h4>\r\n                    </div>\r\n                    <div id=\"how-it-works-content\">\r\n                        <section id=\"how-it-works-section\">\r\n                            <h6>1. Get Viral Tokens</h6>\r\n                            <article>Currently available on both the Ethereum and BSC blockchains, by owning any viral tokens you gain access to the platform.</article>\r\n                        </section>\r\n                        <section id=\"how-it-works-section\">\r\n                            <h6>2. Create Your Space</h6>\r\n                            <article>By owning viral tokens you can connect to the platform, create a profile, and host project pages for new and existing projects.</article>\r\n                        </section>\r\n                        <section id=\"how-it-works-section\">\r\n                            <h6>3. Collaborate</h6>\r\n                            <article>Connect and message other DeFi enthusiasts to work together, learn new skills, share interests, and evaluate new projects.</article>\r\n                        </section>\r\n                    </div>\r\n                    </div>\r\n                    <div id=\"why-viral-crypto\">\r\n                        <h3>Why ViralCrypto?</h3>\r\n                        <p>ViralCrypto is similar to the previous generation of contractor networks where users can make profiles and project pages in addition to searching through the platform in order to collaborate. Although, this is where the similarities end. \r\n                            <br/>\r\n                            <br/>\r\n                            The VC platform allows users to safely work together, learn new skills, share interests, and evaluate new projects. How? Users connect to the platform with their Web3 wallet and create a profile that is uniquely associated with their wallet address. Users can create pages for new projects that are still in development in order to collaborate with freelancers. Users can also create verified project pages for established projects that are administered by the appropriate representative of that project. Users can rate and review projects and message with verified creators. Whether a user is doxxed or not, their projects along with reviews and ratings follow them forever on the site. This way, reputation is built, transparency is assured, and privacy is allowed. In addition, all project pages are visible without a wallet balance, incentivizing newcomers to engage with the platform.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"buy-button\">\r\n                        <a href=\"#tokenIframes\" className=\"homepage-button btn2\">Buy&nbsp;Viral&nbsp;Tokens</a>\r\n                    </div>\r\n                    <div className=\"homepage-onRamp\">\r\n                        <div className=\"homepage-onRamp-text\">\r\n                            <h3>\r\n                                New to Crypto?  No problem.\r\n                            </h3>\r\n                            <h4>\r\n                                You'll need ETH to buy eViral, or BUSD to buy beViral.\r\n                            </h4>\r\n                            {/* <FortmaticWallet/> */}\r\n                        </div>\r\n                        <OnRamper/>\r\n                    </div>\r\n                {/* <div className=\"token-swap\">\r\n                    <button onClick={0}>Swap</button>\r\n                </div> */}\r\n                <div className=\"tokenIframes\" id=\"tokenIframes\">\r\n                    <div className=\"tokenIframes-wrapper\">\r\n                        <div className=\"eViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={Logo}/>Viral Ethereum</h3>\r\n                            <iframe\r\n                                src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"beViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={LogoBSC}/>Viral Binance</h3>\r\n                            <iframe\r\n                                src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            <Cards/>\r\n            <div id=\"vclabs\">\r\n                <img src={VCLabsM} id=\"vclabsm\"/>\r\n                <img src={VCLabsD} id=\"vclabsd\"/>\r\n            </div>\r\n            <div id=\"why-viral-crypto\">\r\n                <h3>Front-end Dev <br/> HACKATHON</h3>\r\n                <p>Winning developers will also be featured in search, here on the homepage and given credit on the team page. \r\n                    <br/>\r\n                </p>\r\n                <p> October 1st through December 1st 2021, VC Labs is running its first HACKATHON and will select:\r\n                    <br/>\r\n                    <br/>\r\n                    4 innovative, community-driven features to add\r\n                    <br/>\r\n                    <br/>\r\n                    and\r\n                    <br/>\r\n                    <br/>\r\n                    1 innovative improvement on search capability\r\n                </p>\r\n            </div>\r\n                <div className=\"byMoralis\">\r\n                    <ByMoralis  width={300} variant=\"dark\" />\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeroSection;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport HeroSection from '../HeroSection';\r\n\r\nfunction Home () {\r\n    return (\r\n        <>\r\n            <HeroSection />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Cards from '../Cards';\r\nimport '../../components/Platform.css';\r\n\r\nimport eViralLogo from \"../../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../../img/beviral.png\";\r\n\r\nfunction Platform() {\r\n\r\n    \r\n    return (\r\n        <div className=\"platform-background\">\r\n            <Cards/>\r\n            <div className=\"tokenIframes\">\r\n                <div className=\"tokenIframes-wrapper\">\r\n                <div className=\"eViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={eViralLogo}/>Viral Ethereum on UniswapV2</h3>\r\n                    <iframe\r\n                        src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                <div className=\"beViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={beViralLogo}/>Viral Binance on PancakeSwapV2</h3>\r\n                    <iframe\r\n                        src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Platform;\r\n","export default __webpack_public_path__ + \"static/media/defaultLandscape.61b5b0db.jpg\";","export default __webpack_public_path__ + \"static/media/construction.cfb1328d.png\";","import React, { useState } from 'react';\r\nimport './CreateProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport construction from  \"../img/construction.png\";\r\nimport Alert from './Alert';\r\n\r\nfunction CreateNewProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState();\r\n    const [summary, setSummary] = useState();\r\n    const [description, setDescription] = useState();\r\n\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const [isLive, setIsLive] = useState(false);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(construction);\r\n\r\n    const createNewProject = async () => {\r\n        try {\r\n            const newProject = Moralis.Object.extend(\"Projects\");\r\n            const project = new newProject();\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            const date = new Date();\r\n            const currentUser = await Moralis.User.current();\r\n            const username = currentUser.attributes.username;\r\n            const profilePic = currentUser.attributes.profilePic._url;\r\n            const userObjectId =currentUser.attributes.userObjectId;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('creator', currentUser);\r\n            project.set(\"createdBy\", username);\r\n            project.set(\"creatorProfilePic\", profilePic);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set('date', date.toLocaleDateString());\r\n            project.set(\"creatorId\", userObjectId);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            const relation = currentUser.relation(\"projects\");\r\n            relation.add(project);\r\n            user.save();\r\n            setAlertContents(\"New Project created!\");\r\n            setAlertVisible(true);\r\n            (props.closeCreateProjectMenu(false));\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Create a Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a Cover Photo<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                                 \r\n                                <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Name<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder=\"Create a title\" value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 2000 characters\" maxLength={2000} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div id=\"update-socials\">\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"submit-form btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <input type=\"button\" className=\"submit-form btn2\" value=\"Create Project\" onClick={createNewProject} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default CreateNewProject\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport Logo from '../img/newlogo2.png';\r\nimport LogoBSC from '../img/newlogoBSC2.png';\r\nimport defaultProfile from \"../img/defaultProfile.png\";\r\nimport defaultLandscape from \"../img/defaultLandscape.jpg\";\r\nimport Alert from './Alert';\r\nimport CreateNewProject from './CreateProject';\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    const { user, Moralis, isInitialized } = useMoralis();   \r\n    const { error, isUploading, moralisFile, saveFile } = useMoralisFile();\r\n\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [landscape, setLandscape] = useState(\"\");\r\n    \r\n    const [balanceETH, setBalanceETH] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    \r\n    const [changeProfilePicMenu, setOpenChangeProfilePicMenu] = useState(false);\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();\r\n    const [previewPic, setPreviewPic] = useState();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    \r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setPreviewPic(URL.createObjectURL(e.target.files[0]));\r\n    };\r\n\r\n    \r\n    const onSubmitPhoto = async (e) => {\r\n        const file = photoFile;\r\n        const name = photoFileName;\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        user.set(\"profilePic\", fileIpfs);\r\n        await user.save();\r\n        setProfilePic(user.attributes.profilePic._url);\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n\r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**9);\r\n        const bBalance = beViralBalance.balance/(10**9);\r\n        const balance = (eBalance.toFixed(0));\r\n        const bvBalance = (bBalance.toFixed(0));\r\n        setBalanceETH(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const editProfileCheck = async() => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents( \r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>);\r\n            setAlertVisible(true);\r\n        } else {\r\n            props.openEditProfileMenu(true);\r\n        }\r\n    }\r\n\r\n    const createProjectCheck = () => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n        }  else \r\n        if (!user.attributes?.profileCreated) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.                \r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n        } else {\r\n            props.openCreateProjectMenu(true);\r\n        }\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        console.log(user);\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n          setAlertContents(\r\n              <>\r\n              <div className=\"alert-popup-contents\">\r\n              You'll need to own either eViral or beViral to access this feature.\r\n              <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n              </div>\r\n              </>\r\n              );\r\n          setAlertVisible(true);\r\n        }  else if (!user.attributes?.profileCreated) {\r\n          setAlertContents(\r\n              <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to set up a Profile to access this feature.                \r\n          </div>\r\n          </>\r\n          ) \r\n          setAlertVisible(true);\r\n        } else {\r\n            setOpenChangeProfilePicMenu(true);\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        if (user) {\r\n            if(typeof user.attributes?.profilePic?._url === 'undefined') {\r\n                setProfilePic(defaultProfile);\r\n            } else {\r\n                setProfilePic(user.attributes?.profilePic?._url);\r\n            }\r\n            if(typeof user.attributes?.landscapePic?._url === 'undefined') {\r\n                setLandscape(defaultLandscape);\r\n            } else {\r\n                setLandscape(user.attributes?.landscapePic?._url);\r\n            }                    \r\n            setPreviewPic(profilePic);\r\n          renderBalance();\r\n        }\r\n    }\r\n      }, [isInitialized]);\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"profile-container-wrapper\">\r\n                <div className=\"profile-wrapper\">\r\n                    <div className=\"profile-background\">\r\n                        <img className='landscape-pic' src={landscape} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"profile-header\">\r\n                        <div className=\"profile-pic-container\"onClick={() => userCheck()}>\r\n                            <img className=\"profile-pic\" src={profilePic} alt=\"\" id=\"profilePic\" />\r\n                            <div className=\"middle-of-profilePic\">                                \r\n                                    <i class=\"fas fa-camera-retro\"></i>                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-summary\">\r\n                            <h2 className=\"profile-page-username\"> {user?.attributes?.username} </h2>\r\n                            <p className=\"profile-page-bio\">{user?.attributes?.bio}</p>\r\n                \r\n                        </div>\r\n                \r\n                    </div>\r\n                 <div className=\"edit-profile-wrapper\">\r\n                    <div className=\"profile-page-balances\">\r\n                        <div className=\"profile-balances-wrapper\">\r\n                            <div className=\"showProfileBalance\">\r\n                                <p>{balanceETH}</p>\r\n                                <img className=\"logo-balance-display\" src={Logo} alt=\"\" ></img>\r\n                            </div>\r\n                            <div className=\"showProfileBalanceBSC\">\r\n                                <p>{balanceBSC}</p>\r\n                                <img className=\"logo-balance-display\" src={LogoBSC} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-header-btns\">\r\n                        <button className=\"create-project-button btn1\" onClick={createProjectCheck}>\r\n                        <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Create&nbsp;Project</span>\r\n                        </button>\r\n                        <button className=\"edit-profile-button btn2\" onClick={editProfileCheck}>\r\n                        <i class=\"fas fa-pen\"></i>\r\n                            <span>Edit&nbsp;Profile</span>\r\n                        </button>\r\n                    </div>                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n            {changeProfilePicMenu &&\r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-profilepic-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\">Choose a Profile Picture</h3>\r\n                        <span className=\"exitMenu\" onClick={() => {setOpenChangeProfilePicMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={previewPic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">\r\n                            <form onSubmit={onSubmitPhoto}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"profilePhoto\" className=\"form-label\">Select Image File</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"profilePhoto\" onChange={onChangePhoto} />\r\n                                </div>\r\n                                <div className=\"change-profile-pic-footer\">\r\n                                    <input type=\"button\" value=\"Upload\" className=\"upload-profilePic-button btn2\" onClick={onSubmitPhoto} />\r\n                                    <button className=\"btn1\" onClick={()=>{setOpenChangeProfilePicMenu(false)}}>Close</button>\r\n                                </div>\r\n                            </form>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            }\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport './User.css';\r\nimport './UpdateProfile.css';\r\nimport Alert from './Alert';\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const { user, setUserData, Moralis } = useMoralis();\r\n    const { error, isUploading, moralisFile, saveFile, } = useMoralisFile();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();    \r\n    \r\n    const [landscapeFile, setLandscapeFile] = useState();    \r\n    const [landscapeFileName, setLandscapeFileName] = useState();  \r\n    const [landscapePic, setLandscapePic] = useState();\r\n\r\n    const [username, setUsername] = useState();\r\n    const [userLocation, setUserLocation] = useState();\r\n    const [story, setStory] = useState();\r\n    const [skills, setSkills] = useState();\r\n    const [bio, setBio] = useState();\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const [startRate, setStartRate]  = useState();\r\n    const [payCurrency, setPayCurrency] = useState();\r\n    const init = 0;\r\n\r\n    const checkProfileCreated = () => {\r\n        const profileCreated = (user.attributes?.profileCreated);\r\n        if(profileCreated){\r\n            setUsername(user.attributes?.username);\r\n            setLandscapePic(user.attributes?.landscapePic?._url);\r\n            setUserLocation(user.attributes?.userLocation);\r\n            setStory(user.attributes?.story);\r\n            setSkills(user.attributes?.skills);\r\n            setBio(user.attributes?.bio);\r\n            setWebsite(user.attributes?.website);\r\n            setTwitter(user.attributes?.twitter);\r\n            setTelegram(user.attributes?.telegram);\r\n            setLinkedIn(user.attributes?.linkedIn);\r\n            setDiscord(user.attributes?.discord);\r\n            setYoutube(user.attributes?.youtube);\r\n            setTwitch(user.attributes?.twitch);\r\n            setStartRate(user.attributes?.startRate);\r\n            setStartRate(user.attributes?.payCurrency);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            checkProfileCreated();\r\n        }\r\n      }, [init]);\r\n\r\n\r\n    const handleSave = async() => {\r\n        if( (username == \"\") ) { \r\n            return;\r\n        }\r\n        await setUserData({\r\n            username: username === \"\" ? undefined : username,            \r\n            userLocation: userLocation === \"\" ? undefined : userLocation, \r\n            story: story === \"\" ? undefined : story ,\r\n            skills: skills === \"\" ? undefined : skills ,\r\n            bio: bio === \"\" ? undefined : bio,     \r\n            website: website === \"\" ? undefined : website,     \r\n            twitter: twitter === \"\" ? undefined : twitter,     \r\n            telegram: telegram === \"\" ? undefined : telegram,     \r\n            discord: discord === \"\" ? undefined : discord,     \r\n            linkedIn: linkedIn === \"\" ? undefined : linkedIn,     \r\n            youtube: youtube === \"\" ? undefined : youtube,     \r\n            twitch: twitch === \"\" ? undefined : twitch,  \r\n            startRate: startRate === \"\" ? undefined : startRate,  \r\n            payCurrency: payCurrency === \"\" ? undefined : payCurrency,  \r\n            profileCreated: true   \r\n        });\r\n        setAlertContents(\"Profile Updated!\");\r\n        setAlertVisible(true);        \r\n    };\r\n\r\n    const onChangeLandscape = e => {        \r\n        setLandscapeFile(e.target.files[0]);\r\n        setLandscapeFileName(e.target.files[0].name);\r\n    };\r\n\r\n      const onSubmitLandscape = async () => {\r\n        try{\r\n        const file = landscapeFile;\r\n        const name = landscapeFileName;\r\n        console.log(1);\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        console.log(2);\r\n        user.set(\"landscapePic\", fileIpfs);\r\n        await user.save();\r\n        setLandscapePic(user.attributes.landscapePic._url);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      };\r\n\r\n    return (\r\n        <> \r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\"> Update Profile </h3>\r\n                        <span className=\"exitMenu\" onClick={() => {props.closeEditProfileMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"change-landscape-pic-container\">\r\n                        <img className=\"change-landscape-pic\" src={landscapePic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">                            \r\n                            <form onSubmit={onSubmitLandscape}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"landscapePic\" className=\"form-label\">Choose a Landscape (recommended 1500px X 500px)</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"landscapePic\" onChange={onChangeLandscape} />\r\n                                </div>\r\n                                <input type=\"button\" value=\"Upload\" className=\"updateProfile-btn2-upload\" onClick={onSubmitLandscape} />\r\n                            </form>\r\n                            <label className=\"form-label\">Username</label>\r\n                            <input className=\"form-input\" placeholder=\"Choose a name\" value={username} required onChange={(event) =>setUsername(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Location</label>\r\n                            <input className=\"form-input\" placeholder=\"City, Country\" value={userLocation} onChange={(event) =>setUserLocation(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Website</label>\r\n                            <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Skills</label>\r\n                            <input className=\"form-input\" placeholder=\"List skills as keywords (ie Artist, Programmer, Model)\" maxLength={50} value={skills} onChange={(event) =>setSkills(event.currentTarget.value)}/>\r\n                            \r\n                            <label className=\"form-label\">Average starting costs for your service?</label>                            \r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <span className=\"social-link-at-box\">$</span>\r\n                                    <input className=\"form-input\" type=\"number\" min=\"0\" placeholder=\"Enter starting amount\" value={startRate} onChange={(event) =>setStartRate(event.currentTarget.value)}/>\r\n                                    <input id=\"payCurrency\" className=\"form-input\" maxLength={5} minLength={3} placeholder=\"Symbol (USD ETH DAI etc) \" value={payCurrency} onChange={(event) =>setPayCurrency(event.currentTarget.value)}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            \r\n                            \r\n                            <label className=\"form-label\">Bio</label>\r\n                            <textarea rows={3} className=\"form-control\" required placeholder=\"Brief bio (<150 characters)\" maxLength={150} value={bio} onChange={(event) =>setBio(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Story</label>\r\n                            <textarea rows={5} className=\"form-control\" placeholder=\"What should others know about you? (<2000 characters)\" maxLength={2000} value={story} onChange={(event) =>setStory(event.currentTarget.value)}/>\r\n\r\n                        <div id=\"update-socials\">\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"submit\">\r\n                            <button className=\"btn1\" onClick={() => {props.closeEditProfileMenu(false)}}>Close Menu</button>                            \r\n                            <input className=\"updateProfile-btn2 btn2\" onClick={handleSave} type=\"button\" value=\"Save Changes\"/>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction AboutMe() {\r\n\r\n    const { user } = useMoralis(); \r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{user?.attributes?.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (user?.attributes?.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{user?.attributes?.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.skills}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Social Media</h5>\r\n                    <div className='profile-social-icon-wrapper'>\r\n                        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(user.attributes?.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(user.attributes?.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(user.attributes?.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n                        <i className=\"fab fa-discord\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(user.attributes?.linkenIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(user.attributes?.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n                        <i className=\"fab fa-youtube\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(user.attributes?.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n                        <i className=\"fab fa-twitch\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Bookmark(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [bookmark, setBookmark] = useState(false);\r\n    const init = null;\r\n\r\n    const saveProject = async() => {\r\n        setBookmark(true);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.add(project);\r\n        await user.save();\r\n        alert(\"Project Bookmarked!\");\r\n    }\r\n\r\n    const removeProject = async() => {\r\n        setBookmark(false);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.exists(\"title\");\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.remove(project);\r\n        await user.save();\r\n        alert(\"Project Removed!\");\r\n    }  \r\n\r\n    const checkBookmark = async() => {\r\n        const user = Moralis.User.current();\r\n        const relation = user.relation(\"bookmarkedProjects\");     \r\n        const query = relation.query();\r\n        query.equalTo(\"title\", (props.projectTitle));\r\n        query.select(\"attributes.title\")\r\n        const queryResults = await query.find();\r\n        const results = [];\r\n        for (let i = 0; i < queryResults.length; ++i) {\r\n              results.push({\r\n              \"title\": queryResults[i].attributes.title,    \r\n              });\r\n            };\r\n        if(results[0]) {\r\n            setBookmark(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        checkBookmark();\r\n        }\r\n        },\r\n        [init],\r\n      );\r\n\r\n    return (\r\n        <div className=\"bookmark\" >\r\n            {bookmark ? <i class=\"fas fa-bookmark\" onClick={() => removeProject()}></i>  : <i class=\"far fa-bookmark\" onClick={() => saveProject()}></i>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bookmark;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Rating(props) {\r\n    const { user, Moralis, isInitialized } = useMoralis();\r\n    const title = (props.title);\r\n\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewCount, setReviewCount] = useState( 0 );\r\n\r\n    const checkRating = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const projectRating = await Moralis.Cloud.run(\"loadProjectRating\", params);\r\n        if (typeof projectRating !== 'undefined') {\r\n            setReviewCount(projectRating[0]);\r\n            setRating(projectRating[1]);    \r\n        }\r\n     }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        checkRating();\r\n        }\r\n        },\r\n        [isInitialized],\r\n      );\r\n      \r\n    return (\r\n        <div className=\"rating\">\r\n            {[...Array(1)].map( star => {\r\n                return <i class=\"fas fa-star\"></i>\r\n            })}\r\n            <span className=\"rating\">{rating}</span>\r\n            <span className=\"review-count\">{\" \"}({reviewCount})</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProjectCard(props) {\r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"project-card-title\">                            \r\n                            <h4>{props.title}</h4>\r\n                            { verified && \r\n                                <div>\r\n                                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"project-creator\">\r\n                           <img  src={props.creatorProfilePic}  className=\"creator-profile-pic\"/>{\" \"}{props.username}{\"   -   \"}{props.createdOn}\r\n                        </div>\r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating\r\n                         title = {props.title}          \r\n                        />\r\n                        <Bookmark \r\n                        projectTitle = {props.projectTitle}  \r\n                        />\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectCard;","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction MyProjectsCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/projects/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div>\r\n                            <h4>{props.title}</h4>\r\n                        </div>          \r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating          \r\n                        />\r\n                        <div className=\"my-projects-date\">\r\n                        {props.createdOn}\r\n                        </div>\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyProjectsCard;","import React, {useState, useEffect} from 'react';\r\nimport './Carousel.css';\r\n\r\nconst Carousel = (props) => {\r\n    const {children, show, loop} = props\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [length, setLength] = useState(children.length);\r\n\r\n    const [isRepeating, setIsRepeating] = useState(loop && children.length > show)\r\n    const [transitionEnabled, setTransitionEnabled] = useState(true)\r\n\r\n    const next = () => {\r\n        if (isRepeating || currentIndex < (length - show)) {\r\n            setCurrentIndex(prevState => prevState + 1)\r\n        }\r\n    }\r\n\r\n    const prev = () => {\r\n        if (isRepeating || currentIndex > 0) {\r\n            setCurrentIndex(prevState => prevState - 1)\r\n        }\r\n    }\r\n\r\n    const handleTransitionEnd = () => {\r\n        if (isRepeating) {\r\n            if (currentIndex === 0) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(length)\r\n            } else if (currentIndex === length + show) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(show)\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderExtraPrev = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[length - 1 - index])\r\n        }\r\n        output.reverse()\r\n        return output\r\n    }\r\n\r\n    const renderExtraNext = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[index])\r\n        }\r\n        return output\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLength(children.length)\r\n        setIsRepeating( loop && children.length > show)\r\n    }, [children, loop, show])\r\n\r\n    useEffect(() =>{\r\n        if (isRepeating){\r\n            if (currentIndex === show || currentIndex === length) {\r\n                setTransitionEnabled(true)\r\n            }\r\n        }\r\n    }, [currentIndex, isRepeating, show, length])\r\n\r\n    return (\r\n        <div className=\"carousel-container\">\r\n            <div className=\"carousel-wrapper\">\r\n            <button className=\"left-arrow\" onClick={prev}>\r\n            <i class=\"fas fa-arrow-alt-circle-left\"></i>\r\n            </button>\r\n                <div className=\"carousel-content-wrapper\">\r\n                    <div className={`carousel-content show-${show}`} style={{ transform: `translateX(-${currentIndex * (100/ show)}%)`, \r\n                        transition: !transitionEnabled ? 'none' : undefined, }}\r\n                        onTransitionEnd={() => handleTransitionEnd()}\r\n                        >\r\n                        {(length > show && isRepeating) && \r\n                        renderExtraPrev()\r\n                        }\r\n                        {children}\r\n                        {(length > show && isRepeating) &&\r\n                            renderExtraNext()\r\n                        }                    \r\n                    </div>\r\n                </div>               \r\n                    <button onClick={next} className=\"right-arrow\">\r\n                    <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n\r\nfunction ProjectGridBox(props) {\r\n\r\n    \r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n    const isLive = (props.isLive);\r\n\r\n    return (\r\n                  \r\n        <div className=\"project-grid-box-wrapper\">\r\n                    <div className=\"project-card-badges\">\r\n                        {isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-chart-line\">Live</i>\r\n                            </div>\r\n                        }\r\n                        {!isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-wrench\">InDev</i>\r\n                            </div>\r\n                        }\r\n                        {verified &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            <div className=\"project-card-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`/projects/${props.path}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.src}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"project-card-body\">\r\n                <div className=\"project-card-title\">\r\n                    <h4>{props.title}</h4>\r\n                </div>\r\n                <div className=\"project-card-creator\">\r\n                    <div className=\"project-card-creator-pic\"><img  src={props.creatorProfilePic}  className=\"project-card-profilepic\"/></div>\r\n                    <div className=\"project-card-creator-name\">{props.username}</div>\r\n                </div>\r\n                <div className=\"project-card-summary\">\r\n                    {props.summary}\r\n                </div>\r\n            </div>\r\n            <div className=\"project-card-footer\">\r\n                <Rating\r\n                    title = {props.title}\r\n                />\r\n                <div className=\"project-card-date\">\r\n                    {props.createdOn}\r\n                </div>\r\n                <Bookmark\r\n                projectTitle = {props.title}\r\n                />\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProjectGridBox;\r\n","\r\nimport React, {useState, useEffect} from 'react';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport MyProjectsCard from './MyProjectsCard';\r\nimport Carousel from './Carousel';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\n\r\nfunction LoadMyProject() {\r\n\r\n  const { user, Moralis } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { page : pageNumber};\r\n    const results = await Moralis.Cloud.run(\"renderMyProjects\", params);\r\n    setProjects(results);\r\n    console.log(pageNumber);\r\n    console.log(results);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  useEffect(() => {\r\n    LoadProjects();\r\n    },\r\n    [pageNumber]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <React.Fragment>\r\n          \r\n          <div className=\"project-grid-container\">\r\n            <div className=\"my-project-grid-wrapper\">\r\n                {projects.map(listItem => (\r\n                    <div key={listItem.title} className=\"project-grid-box\">\r\n                      <ProjectGridBox\r\n                      title={listItem.title}\r\n                      summary={listItem.summary}\r\n                      src={listItem.projectPhoto}\r\n                      username={listItem.username}\r\n                      creatorProfilePic={listItem.profilePic}\r\n                      createdOn = {listItem.createdOn}\r\n                      label={listItem.username}\r\n                      path={listItem.title}\r\n                      isVerified = {listItem.isVerified}\r\n                      isLive={listItem.isLive} \r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadMyProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction SaveProfile(props) {\r\n    const { user, Moralis, isInitialized } = useMoralis();\r\n    const [saved, setSaved] = useState();\r\n    let isSaved = (props.isSaved);\r\n\r\n    const saveProfile = async() => {\r\n        setSaved(true);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.add(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile saved.`);\r\n    }\r\n\r\n    const removeProfile = async() => {\r\n        setSaved(false);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.remove(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile removed.`);\r\n    }  \r\n\r\n    const checkSavedProfile = async() => {\r\n        const params = {profileName: props.profileName}\r\n        const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n        \r\n        if(results[0]) {\r\n            setSaved(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        checkSavedProfile();\r\n        }\r\n        },\r\n        [isInitialized],\r\n      );\r\n\r\n    return (        \r\n        <div className=\"bookmark\" >\r\n            {(saved || isSaved) ? <i class=\"fas fa-heart\" onClick={() => removeProfile()}></i>  : <i class=\"far fa-heart\" onClick={() => saveProfile()}></i>}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default SaveProfile;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport './ProfileCard.css';\r\nimport SaveProfile from './SaveProfile';\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProfileCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    const [bookmark, setBookmark] = useState(true);\r\n\r\n    const saveProject = () => {\r\n        setBookmark(!bookmark);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-card-container\">                \r\n                    <div className=\"profile-card-wrapper\">\r\n                        <Link className=\"profile-cards-link\" to={`/profiles/${props.username}`}>\r\n                            <figure className='profile-card-pic-wrap' category={props.label}>\r\n                                <img className=\"profile-card-img\" src={props.src}></img>\r\n                            </figure>\r\n                        </Link>\r\n                        <div className=\"profile-card-body\">\r\n                            <div className=\"profile-card-title\">\r\n                               {props.username}\r\n                            </div>\r\n                            <div className=\"profile-summary\">\r\n                               {props.bio}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"hl\"></div>\r\n                        <div className=\"profile-card-footer\">\r\n                            <div className=\"saveProfile\" onClick={saveProject}>\r\n                                <SaveProfile\r\n                                profileName = {props.username}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileCard;","import React, {useState, useEffect} from 'react';\r\nimport '../../App.css';\r\nimport Profile from '../Profile';\r\nimport { useMoralis } from 'react-moralis';\r\nimport UpdateProfile from '../UpdateProfile.js';\r\nimport CreateProject from '../CreateProject.js';\r\nimport AboutMe from '../AboutMe';\r\nimport '../../components/User.css';\r\nimport LoadMyProjects from '../LoadMyProjects';\r\nimport Alert from '../Alert';\r\nimport ProjectCard from '../ProjectCard';\r\nimport ProfileCard from '../ProfileCard';\r\nimport ProjectGridBox from '../ProjectGridBox';\r\n\r\n\r\n\r\nfunction MyProfile() {\r\n\r\n    const { isInitialized, Moralis } = useMoralis();\r\n    \r\n    const [createProjectMenu, setOpenCreateProjectMenu] = useState(false);\r\n    const [editProfileMenu, setOpenEditProfileMenu] = useState(false);    \r\n    const [ savedProjects, setSavedProjects ] = useState([\"\"]);    \r\n    const [ usersSaved, setUsersSaved ] = useState([\"\"]);\r\n    let initLoad = 0;\r\n\r\n    const LoadSavedProjects = async() => {\r\n        const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n            setSavedProjects(savedProjectsList);\r\n    };\r\n\r\n    const LoadSavedProfiles = async () => {\r\n        const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n        setUsersSaved(savedProfiles);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n    LoadSavedProjects();\r\n    LoadSavedProfiles();\r\n        }\r\n    },\r\n    [isInitialized],\r\n    );  \r\n\r\n    return (\r\n        <div>\r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                    \r\n                    <Profile openCreateProjectMenu={setOpenCreateProjectMenu} openEditProfileMenu={setOpenEditProfileMenu}/> \r\n                </div>                \r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                            <div className=\"aboutme-wrapper\">\r\n                                <AboutMe />\r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>MY PROJECTS</h3>               \r\n                                </div>\r\n                                <LoadMyProjects />\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROJECTS</h3>               \r\n                                </div>\r\n                                <div className=\"project-grid-container\">\r\n                                    <div className=\"my-project-grid-wrapper\">\r\n                                        {savedProjects.map(listItem => (\r\n                                            <div key={listItem.title} className=\"project-grid-box\">\r\n                                            <ProjectGridBox\r\n                                            title={listItem.title}\r\n                                            summary={listItem.summary}\r\n                                            src={listItem.projectPhoto}\r\n                                            username={listItem.username}\r\n                                            creatorProfilePic={listItem.profilePic}\r\n                                            createdOn = {listItem.createdOn}\r\n                                            label={listItem.username}\r\n                                            path={listItem.title}\r\n                                            isVerified = {listItem.isVerified}\r\n                                            />\r\n                                        </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROFILES</h3>               \r\n                                </div>\r\n\r\n                                <div className='cards__container'>             \r\n                                    <div className='project-cards__wrapper'>\r\n                                        <div className='cards__items'>      \r\n                                            {usersSaved.map(userProfile => (\r\n                                                <div key={userProfile.username} className=\"cards__item\">\r\n                                                <ProfileCard\r\n                                                bio={userProfile.bio}\r\n                                                src={userProfile.profilePic}\r\n                                                username={userProfile.username}         \r\n                                                />\r\n                                            </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n            <div className=\"projects\">\r\n                {createProjectMenu && <CreateProject closeCreateProjectMenu={setOpenCreateProjectMenu}/>}\r\n                {editProfileMenu && \r\n                <UpdateProfile \r\n                closeEditProfileMenu={setOpenEditProfileMenu}\r\n                />}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useRouteMatch  } from 'react-router-dom';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport Carousel from './Carousel';\r\nimport './SearchBar.css';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\nimport './Pagination.css';\r\n\r\nfunction ProjectsList({match}) {\r\n\r\n  const { user, Moralis, isInitialized } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [ savedProjects, setSavedProjects ] = useState([\"\"]);\r\n  const [ queryName, setQueryName] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  let initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { skipAmount: pageNumber};\r\n    const projectsList = await Moralis.Cloud.run(\"renderProjects\", params);\r\n    setProjects(projectsList);  \r\n    console.log(projectsList);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n\r\n  const LoadSavedProjects = async() => {\r\n    const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n    setSavedProjects(savedProjectsList);\r\n  };\r\n\r\n  const SearchProjects = async() => {\r\n    setNoneFound(false);\r\n    const params = { title: queryName};\r\n    const projectsFound = await Moralis.Cloud.run(\"searchProjectsByName\", params);\r\n    if(projectsFound != ''){\r\n      setSearchResults(projectsFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    LoadProjects();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized],\r\n  );  \r\n  useEffect(() => {\r\n    if(user){\r\n      LoadSavedProjects();\r\n    }\r\n    },\r\n    [initLoad],\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n        <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">          \r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search projects by name\" \r\n                value={queryName} \r\n                onChange={(event) =>setQueryName(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProjects()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProjects} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"foreground\">\r\n        {noneFound &&\r\n          <div className=\"cards-background\">\r\n          <h3>Search Results</h3> \r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n              </div> \r\n              <button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button>\r\n            </div> \r\n          </div> \r\n          }\r\n          {showSearchResults &&\r\n          <div className=\"cards-background\">\r\n            <div className=\"project-section-title\">\r\n              <h3>Search Results</h3> \r\n            </div>\r\n            <button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button>\r\n              <div className='cards__container'>\r\n                  <div className='cards__wrapper'>                 \r\n                    <div className='cards__items'>\r\n                    <Carousel\r\n                        show={3}\r\n                        loop={true}\r\n                        >\r\n                        {searchResults.map(project => (                          \r\n                          <div key={project.title} className=\"cards__item\">                                                   \r\n                              <ProjectCard\r\n                              title={project.title}\r\n                              summary={project.summary}\r\n                              src={project.projectPhoto}\r\n                              username={project.username}\r\n                              creatorProfilePic={project.profilePic}\r\n                              createdOn = {project.createdOn}\r\n                              label={project.username}\r\n                              path={project.title}\r\n                              projectTitle = {project.title}\r\n                              isVerified = {project.isVerified}\r\n                              isLive={project.isLive}   \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </Carousel>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          }\r\n\r\n\r\n\r\n              {/* <div className=\"cards-background\"> */}\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROJECTS</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                <div className=\"project-grid-container\">\r\n                  <div className=\"project-grid-wrapper\">\r\n                    { (projects).map(project => (\r\n                      <div key={project.title} className=\"project-grid-box\">\r\n                          <ProjectGridBox\r\n                          title={project.title}\r\n                          summary={project.summary}\r\n                          src={project.projectPhoto}\r\n                          username={project.username}\r\n                          creatorProfilePic={project.profilePic}\r\n                          createdOn = {project.createdOn}\r\n                          path={project.title}\r\n                          isVerified = {project.isVerified}\r\n                          isLive={project.isLive}\r\n                          \r\n                          />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                </div>              \r\n              </div>                   \r\n              \r\n      </div>\r\n      {/* </div> */}\r\n      </>\r\n    )\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport ProjectsList from '../Projects.js';\r\nimport '../../App.css';\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <ProjectsList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/ethlogo.97ee4148.png\";","export default __webpack_public_path__ + \"static/media/bsclogo.582fc765.png\";","export default __webpack_public_path__ + \"static/media/maticlogo.409d5248.png\";","export default __webpack_public_path__ + \"static/media/avaxlogo.30dfa545.png\";","import React from 'react';\r\nimport {useRouteMatch } from 'react-router-dom';\r\nimport './NFTCard.css';\r\n\r\n\r\nfunction NFTCard(props) {\r\n\r\n    \r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n                  \r\n        <div className=\"nft-card-wrapper\">\r\n            <div className=\"nft-card-title\">\r\n                    <h4>{props.name}</h4>\r\n                </div>\r\n            <div className=\"nft-card-header\">\r\n                <div className=\"nft-card-img-wrapper\">                \r\n                <img className=\"nft-card-img\" src={props.src}></img>   \r\n                </div>             \r\n            </div>\r\n            <div className=\"nft-card-body\">\r\n                \r\n                <div className=\"nft-card-creator\">\r\n                    {props.symbol}{\" \"}{props.tokenId}\r\n                </div>\r\n                <div className=\"nft-card-summary\">\r\n                    {props.description}\r\n                </div>\r\n            </div>\r\n            <div className=\"nft-card-footer\">\r\n                <div>{props.contractType}</div>                \r\n                <div>Amount: {props.amount}</div>                \r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default NFTCard;","import React, {useEffect, useState} from 'react';\r\nimport { Moralis } from 'moralis';\r\nimport ETH from '../img/ethlogo.png';\r\nimport BSC from '../img/bsclogo.png';\r\nimport MATIC from '../img/maticlogo.png';\r\nimport AVAX from '../img/avaxlogo.png';\r\nimport './Wallet.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport NFTCard from './NFTCard';\r\n\r\nfunction Wallet() {\r\n\r\n    const { isInitialized } = useMoralis();\r\n\r\n\r\n    const [ currentChain, setCurrentChain] = useState(\"eth\");\r\n    const [ tokens, setTokens] = useState([]);\r\n    const [ nfts, setNFTS] = useState([]);\r\n    const [ transactions, setTransactions] = useState();\r\n    const [ viewTokens, setViewTokens] = useState(true);\r\n    const [ viewNFTs, setViewNFTs] = useState(false);\r\n    const [viewTransactions, setViewTransactions] = useState(false);\r\n    const [ chainLogo, setChainLogo] = useState(ETH);\r\n    const [ theme, setTheme] = useState(\"ETH\");\r\n    let init = 0;\r\n\r\n    const getTokens = async() => {\r\n        setViewNFTs(false);\r\n        setViewTransactions(false);\r\n        // setTokens([]);\r\n        const options = { chain: currentChain, order: \"asc\"}\r\n        const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n        const list = await\r\n        Promise.all(\r\n            balances.map( async (token) => {\r\n            const options = {\r\n                address: token.token_address,\r\n                chain: currentChain\r\n            }\r\n            let price;\r\n            let priceInfo = {};\r\n            let balance = token.balance;\r\n            let decimals = token.decimals;\r\n            try{\r\n                price = await Moralis.Web3API.token.getTokenPrice(options);\r\n                priceInfo.price = price.usdPrice.toFixed(5);    \r\n                 let usdAmount = ((price.usdPrice)*(balance/(10**decimals)))\r\n                 priceInfo.usdAmount = usdAmount.toFixed(2);                \r\n            } catch (error){\r\n                console.log(error);\r\n            }\r\n            token = {...token, ...priceInfo}\r\n            return token;\r\n            })\r\n        );\r\n            \r\n        console.log(list);\r\n        setTokens(list);\r\n        setViewTokens(true);\r\n    }\r\n\r\n    const getNFTs = async() =>{\r\n        setViewTokens(false);\r\n        setViewTransactions(false);\r\n        setNFTS([]);\r\n        const options = { chain: currentChain}\r\n        const nftList = await Moralis.Web3API.account.getNFTs(options);\r\n        let list = await \r\n        Promise.all(\r\n            nftList.result.map( async(nft) => {\r\n                let url = fixURL(nft.token_uri);\r\n                try{\r\n                     await fetch(url)\r\n                    .then(response => response.json())\r\n                    .then(data => {   \r\n                        nft.image = data.image;  \r\n                    });\r\n                } catch {\r\n                }\r\n                return nft;\r\n            })\r\n        );\r\n        \r\n        function fixURL(url) {\r\n            if(url.startsWith(\"ipfs\")) {\r\n                return \"https://ipfs.moralis.io:2053/ipfs/\"+url.split(\"ipfs://ipfs/\").slice(-1)\r\n            }else{\r\n                return url\r\n            } \r\n        }\r\n        setNFTS(list);        \r\n        setViewNFTs(true);\r\n    } \r\n    \r\n    // const getTransactions = async() => {\r\n    //     setViewNFTs(false);\r\n    //     setViewTokens(false);\r\n    //     console.log('pressed transaction button');\r\n    //     setTransactions([]);\r\n    //     const options = { chain: currentChain, order: \"desc\" };\r\n    //     const transactions = await Moralis.Web3API.account.getTransactions(options);\r\n    //     transactions.results.forEach(function(tx) {\r\n\r\n    //     })\r\n    //     setTransactions(transactions.result);\r\n    //     console.log(transactions.result);\r\n    //     setViewTransactions(true);\r\n    // }\r\n\r\n    const changeChain = (chain, logo, theme) => {\r\n        setViewTokens(false);\r\n        setViewTransactions(false);\r\n        setViewNFTs(false);\r\n        setCurrentChain(chain);\r\n        setChainLogo(logo);\r\n        setTheme(theme);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n            \r\n        }  \r\n    }, [ isInitialized])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [tokens, nfts])\r\n\r\n    return (\r\n        <>        \r\n        <div className=\"wallet-background\">\r\n            <div className=\"choose-chain-wallet-wrapper\">\r\n                <div className={`choose-chain-wallet-${theme}`}>                  \r\n                <div className=\"choose-chain-wallet-choose\">                    \r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"eth\", ETH, \"ETH\")}>\r\n                        <img src={ETH} />\r\n                    </div>\r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"bsc\", BSC, \"BSC\")}>\r\n                        <img src={BSC} />\r\n                    </div>\r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"matic\", MATIC, \"MATIC\")}>\r\n                        <img src={MATIC} />\r\n                    </div>\r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"avalanche\", AVAX, \"AVAX\")}>\r\n                        <img src={AVAX} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"choose-display-holding-wrapper\">\r\n                <div className={`choose-display-holding-${theme}`}>\r\n                    <button id={`display-holding-option-${theme}`} onClick={getTokens}>TOKENS</button>\r\n                    <button id={`display-holding-option-${theme}`} onClick={getNFTs}>NFTS</button>\r\n                    {/* <button id=\"display-holding-option\" onClick={getTransactions}>HISTORY</button> */}\r\n                </div>\r\n            </div>            \r\n            {viewTokens &&\r\n            <div className=\"wallet-tokens-wrapper\">\r\n                    <div className={`wallet-token-warning-${theme}`}>\r\n                    Caution: If you didn't buy a token below, it may be a scam!\r\n                    </div>                        \r\n                    <div className={`wallet-token-chart-${theme}`}>                        \r\n                        <span id=\"chart-column-name\">Token</span>\r\n                        <span id=\"chart-column-name\">Balance</span>\r\n                        <span id=\"chart-column-name\">Price</span>\r\n                        <span id=\"chart-column-name\">Holdings</span>\r\n                    </div>\r\n                <div className={`wallet-tokens-${theme}`}>\r\n                    {tokens.map(token => (\r\n                        <div key={token.token_address} className=\"wallet-token\">\r\n                            <span id=\"token-detail-name\">\r\n                                <div id=\"token-logoandname\">\r\n                                    <img src={ !token.logo ? chainLogo : token.logo }/>\r\n                                    <div id=\"token-namesymbol\">\r\n                                        <div id=\"token-name\">{token.name}</div>\r\n                                        <div id=\"token-symbol\">({token.symbol})</div>\r\n                                    </div>\r\n                                </div>\r\n                            </span>\r\n                            <span id=\"token-detail\">{(token.balance/(10**token.decimals)).toFixed(2)}</span>\r\n                            <span id=\"token-detail\">${token.price}</span>\r\n                            <span id=\"token-detail\">${token.usdAmount}</span>\r\n                            {/* ((token.price)*(token.balance/(10**token.decimals))).toFixed(2) */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            }\r\n            {viewNFTs && \r\n                <div className=\"wallet-tokens-wrapper \">\r\n                    <div className={`wallet-nfts-${theme}`}>\r\n                    <div className=\"nft-grid-container\">\r\n                        <div className=\"nft-grid-wrapper\">\r\n                        {nfts.map(nft => (\r\n                            <div key={nft.token_uri} className=\"nft-card\">  \r\n                                <NFTCard\r\n                                src={nft.image}\r\n                                name={nft.name}\r\n                                symbol={nft.symbol}\r\n                                tokenId={nft.token_id}\r\n                                contractType={nft.contract_type}\r\n                                amount={nft.amount}\r\n                                />                              \r\n                                {/* <span id=\"token-detail\"><img src={nft.image} /></span>\r\n                                <span id=\"token-detail\">{nft.name}</span>\r\n                                <span id=\"token-detail\">{nft.symbol}{\" \"}{nft.token_id}</span>\r\n                                <span id=\"token-detail\">Quantity:{\" \"}{nft.amount}</span> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {viewTransactions && \r\n                <div className=\"wallet-tokens-wrapper\">\r\n                    <div className=\"wallet-tokens\">\r\n                        {transactions.map(transaction => (\r\n                            <div key={transaction.hash} className=\"wallet-token\">                                \r\n                                <span id=\"token-detail\"><img src={transaction.logo} /></span>\r\n                                <span id=\"token-detail\">{transaction.name}</span>\r\n                                <span id=\"token-detail\">{transaction.symbol}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wallet;\r\n","import React from 'react';\r\nimport Wallet from '../Wallet';\r\n\r\nfunction wallet() {\r\n    return (\r\n        <div>\r\n            <Wallet />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default wallet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './RatingProject.css'\r\n\r\nfunction RatingProject(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [review, setReview] = useState();\r\n    const [ userReview, setUserReivew] = useState();\r\n    const [stars, setStars] = useState(0);\r\n    const [reviewTitle, setReviewTitle] = useState();\r\n    const [ prevTitle, setPrevTitle] = useState(\"Review Title\");\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    const [hasReview, setHasReview] = useState();\r\n    const [reivewed, setReviewed] = useState();\r\n\r\n    const loadUserRating = async() => {\r\n        if(hasReview){ console.log(\"you do have a hasReivew\")};\r\n        if(userReview){ console.log(\"you do have a userReivew\")};\r\n\r\n        const params = { projectTitle: (props.projectName) }; \r\n        const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        const projectRelation = currentProject.relation(\"reviews\");\r\n        const query = projectRelation.query();\r\n        query.equalTo('username', user.attributes?.username);\r\n        const queryResults = await query.find();\r\n        if(queryResults.length > 0) {\r\n            const stars = queryResults[0].attributes.stars;\r\n            const reviewText = queryResults[0].attributes.review;\r\n            const title = queryResults[0].attributes.reviewTitle;\r\n            const boolReview = queryResults[0].attributes.hasReview;\r\n            setUserReivew(queryResults[0].attributes.hasReview);\r\n;           setReview(reviewText);\r\n            setStars(stars);\r\n            setPrevTitle(title);\r\n            setHasReview(true);    \r\n            setReviewed(boolReview) \r\n        } \r\n    }\r\n    \r\n    const postProjectRating = async() => {    \r\n        const canPost = await userCheck();\r\n        if (canPost) {\r\n            if(stars < 1) {\r\n                throw alert('Please choose a star.');\r\n            }\r\n            if (typeof review === 'undefined') {\r\n                throw alert('Please leave a review.');\r\n            }\r\n            if(hasReview){\r\n                console.log(\"whent down this path of has review\");\r\n                const params = { projectTitle: (props.projectName) }; \r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                const query = projectRelation.query();\r\n                query.equalTo('username', user.attributes?.username)\r\n                const queryResults = await query.find();\r\n                const userReview = queryResults[0];\r\n                userReview.set(\"stars\", stars);\r\n                userReview.set('review', review);\r\n                userReview.set('reviewTitle', reviewTitle);\r\n                await userReview.save();\r\n                setAlertContents(\r\n                    <>\r\n                    <div className=\"alert-popup-contents\">\r\n                    Review Updated!\r\n                    </div>\r\n                    </>\r\n                    );\r\n                setAlertVisible(true);\r\n            }  else {\r\n                const userReview = Moralis.Object.extend(\"Reviews\");\r\n                const newReview = new userReview();\r\n                const currentUser = await Moralis.User.current();\r\n                const username = currentUser.attributes.username;\r\n                const profilePic = currentUser.attributes.profilePic._url;\r\n                const params = { projectTitle: (props.projectName) };\r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                newReview.set(\"stars\", stars);\r\n                newReview.set(\"review\", review);\r\n                newReview.set('reviewer', currentUser);\r\n                newReview.set(\"username\", username);\r\n                newReview.set('reviewerPic', profilePic);\r\n                newReview.set('project', currentProject);     \r\n                newReview.set('reviewTitle', reviewTitle); \r\n                newReview.set('hasReview', true);      \r\n                await newReview.save();\r\n                const relation = currentUser.relation(\"reviews\");\r\n                relation.add(newReview);\r\n                user.save();\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                projectRelation.add(newReview);\r\n                currentProject.save();            \r\n                setAlertContents(\r\n                    <>\r\n                    <div className=\"alert-popup-contents\">\r\n                    Thank you for your review!\r\n                    </div>\r\n                    </>\r\n                    );\r\n                setAlertVisible(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n          setAlertContents(\r\n              <>\r\n              <div className=\"alert-popup-contents\">\r\n              You'll need to own either eViral or beViral to access this feature.\r\n              <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n              </div>\r\n              </>\r\n              );\r\n          setAlertVisible(true);\r\n          return false;\r\n        }  else if (!user.attributes?.profileCreated) {\r\n          setAlertContents(\r\n              <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to set up a Profile to access this feature.                \r\n          </div>\r\n          </>\r\n          ) \r\n          setAlertVisible(true);\r\n          return false;\r\n        } else {\r\n            return true;\r\n        }\r\n      }\r\n\r\n    useEffect(() => {  \r\n        if(user){\r\n        loadUserRating();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setHasReview(userReview);\r\n    }, [userReview])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"rating-project-container\">\r\n            <div className=\"rating-project-wrapper\">\r\n                <h4>Your Review</h4>\r\n                \r\n                <div className=\"rating-project-stars-container\">\r\n                    {[...Array(5)].map( (star, i) => {\r\n                        const ratingValue = i + 1;\r\n                        return (\r\n                            <label>\r\n                                <input type=\"radio\" name=\"rating-radio\" value={ratingValue} onClick={() => setStars(ratingValue)}/>\r\n                                {ratingValue  <= stars ? <i class=\"fas fa-star gold\"></i> : <i class=\"fas fa-star grey\"></i>}\r\n                            </label>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <input className=\"rating-review-title\" type=\"text\" placeholder={prevTitle} value={reviewTitle} required \r\n                    onChange={(event) =>setReviewTitle(event.currentTarget.value)}/>\r\n                <div className=\"rating-project-review-text\">\r\n                <textarea rows={3} \r\n                    className=\"form-control\" \r\n                    placeholder=\"Please leave a review in less than 150 characters.\" \r\n                    maxLength={150} \r\n                    value={review} \r\n                    required \r\n                    onChange={(event) =>setReview(event.currentTarget.value)}/>\r\n                </div>\r\n                <div className=\"rating-project-submit\">\r\n                {/* <button className=\"rating-project-submit-button btn1\" onClick={() => {loadUserRating()}}>Load My Review</button> */}\r\n                   {hasReview && \r\n                   <button className=\"rating-project-submit-button btn2\" onClick={postProjectRating}>Edit Review</button>\r\n                    }\r\n                   {!hasReview && \r\n                   <button className=\"rating-project-submit-button btn2\" onClick={postProjectRating}>Post Review</button>\r\n                    }\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default RatingProject;\r\n","import React from 'react'\r\nimport './ReviewCard.css';\r\n\r\nfunction ReviewCard(props) {\r\n    return (\r\n        \r\n            <div className=\"review-container\"> \r\n                    <div className=\"review-profile\">\r\n                        <img className=\"creator-profile-pic\" src={props.reviewerPic} />\r\n                        {props.username}\r\n                    </div>\r\n                    <div className=\"review-title\">\r\n                        {[...Array(props.stars)].map( star => {\r\n                            return <i class=\"fas fa-star\"></i>\r\n                        })}\r\n                        <span id=\"reviewTitle\">{props.reviewTitle}</span>\r\n                    </div>\r\n                    <div className=\"review-date\">Reviewed on {props.createdAt}</div>\r\n                    <div className=\"review-review\">{props.review}</div>       \r\n            </div>            \r\n        \r\n    )\r\n}\r\n\r\nexport default ReviewCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport ReviewCard from './ReviewCard';\r\n\r\nfunction Reviews(props) {\r\n    const { Moralis } = useMoralis();\r\n    const title = (props.title);\r\n\r\n    const [reviews, setReviews] = useState();\r\n    const [seeReviews, setSeeReviews] = useState(false);\r\n\r\n    const loadReviews = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const reviewList = await Moralis.Cloud.run(\"loadReviews\", params);\r\n        console.log(reviewList);\r\n        setReviews(reviewList);\r\n        console.log(reviews);\r\n        setSeeReviews(!seeReviews)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn1\" onClick={() => loadReviews()}>Show&nbsp;Reviews</button>\r\n            {seeReviews &&\r\n                <div className=\"project-page-review-container\">\r\n                <h3>Reviews</h3>\r\n                <div className=\"project-page-reviewList\">\r\n                    {reviews.map(review => (            \r\n                        <div key={review.title} className=\"project-page-review\">                            \r\n                            <ReviewCard\r\n                            username={review.username}\r\n                            stars={review.stars}\r\n                            review={review.review}\r\n                            reviewerPic={review.reviewerPic}  \r\n                            createdAt={review.createdAt} \r\n                            reviewTitle= {review.reviewTitle}                         \r\n                            />                \r\n                        </div>\r\n                    ))}      \r\n                </div>\r\n            </div>\r\n              }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SocialIconBar(props) {\r\n    return (\r\n        <div className='profile-social-icon-wrapper'>\r\n        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(props.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n        <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(props.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n        <i className=\"fab fa-telegram\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(props.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n        <i className=\"fab fa-discord\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(props.linkedIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n        <i className=\"fab fa-linkedin\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(props.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n        <i className=\"fab fa-youtube\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(props.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n        <i className=\"fab fa-twitch\"></i>\r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SocialIconBar;\r\n","import React, { useState } from 'react';\r\nimport './SendMessagePopUp.css';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nfunction SendMessagePopUp(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [ msg, setMessage ] = useState();\r\n\r\n    \r\n  const SendMessage = async() => {\r\n    const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n    const msgTime = new Date().toLocaleTimeString('en-US');\r\n    // const conversationId = await getConversationId();\r\n    const params = { from: user.attributes?.username, to: (props.creatorName), date: msgDate, time: msgTime, project: (props.projectName), message: msg};\r\n    try {\r\n        const message = await Moralis.Cloud.run(\"sendMessage\", params);        \r\n        alert(\"Message Sent!\");\r\n        (props.visible(false));\r\n    } catch (error) {\r\n        alert(error)\r\n    }    \r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"send-msg-background\">\r\n            <div className=\"send-msg-container\">\r\n                <div className=\"send-msg-wrapper\">\r\n                    <div className=\"send-msg-title\">                        \r\n                        <h3>Send a Message</h3>\r\n                        <div className=\"send-msg-close\">\r\n                        <i class=\"fas fa-times\"  onClick={() => {props.visible(false)}}></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-body\">\r\n                        <div className=\"creator-prj-info\">\r\n                            <div className=\"send-msg-creator\">\r\n                                <img className=\"send-msg-profilePic\" src={props.creatorProfilePic} />\r\n                                {props.creatorName}\r\n                            </div>\r\n                            <div className=\"send-msg-project\">\r\n                                <img className=\"send-msg-projectPic\" src={props.projectPic} />\r\n                                {props.projectName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"send-msg-text\">\r\n                            <textarea placeholder=\"Enter message. Max length: 500 characters\" value={msg} maxLength=\"500\" onChange={(event) =>setMessage(event.currentTarget.value)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-footer\">\r\n                        <button  onClick={SendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>           \r\n    </>\r\n    )\r\n}\r\n\r\nexport default SendMessagePopUp;\r\n","import React, { useState } from 'react';\r\nimport './EditProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport Alert from './Alert';\r\n\r\nfunction EditProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState((props.title));\r\n    const [summary, setSummary] = useState(props.summary);\r\n    const [description, setDescription] = useState(props.description);\r\n\r\n    const [website, setWebsite] = useState(props.website);\r\n    const [twitter, setTwitter] = useState(props.twitter);\r\n    const [telegram, setTelegram] = useState(props.telegram);\r\n    const [discord, setDiscord] = useState(props.discord);\r\n    const [linkedIn, setLinkedIn] = useState(props.linkedIn);\r\n    const [youtube, setYoutube] = useState(props.youtube);\r\n    const [twitch, setTwitch] = useState(props.twitch);\r\n    const [isOwner, setIsOwner] = useState(props.isOwner);\r\n    const [isLive, setIsLive] = useState(props.isLive);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(props.projectPhoto);\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                Are you sure you want to delete this project?\r\n                <button className=\"submit-form btn3\" onClick={deleteProject}>Delete Project</button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteProject = async() => {\r\n        const params = { projectTitle: (props.title) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n\r\n    const editProject = async () => {\r\n        try {            \r\n            console.log(props.title);\r\n            const params = { projectTitle: (props.title) }; \r\n            console.log(params);\r\n            const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n            console.log(project);\r\n            console.log(project);\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            setAlertContents(\"Updates Sumbitted!\");\r\n            setAlertVisible(true);\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Edit Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>                        \r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a main picture<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                            <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Title<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder={title} value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 550 characters\" maxLength={550} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div id=\"update-socials\">\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"submit-form btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <button className=\"submit-form btn2\" onClick={editProject}>Sumbit Changes</button>\r\n                            {isOwner && <button className=\"submit-form btn3\" onClick={deletePopUp}>Delete Project</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default EditProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport construction from  \"../img/construction.png\";\r\n\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport './ProjectPage.css';\r\nimport ProfileCard from './ProfileCard';\r\nimport Rating from './Rating';\r\nimport Bookmark from './Bookmark';\r\nimport RatingProject from './RatingProject';\r\nimport Reviews from './Reviews';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SendMessagePopUp from './SendMessagePopUp';\r\nimport Alert from './Alert';\r\nimport EditProject from './EditProject';\r\n\r\n\r\nfunction ProjectDisplay(props) {\r\n  const { user, Moralis, isInitialized } = useMoralis();  \r\n  const { isUploading, saveFile } = useMoralisFile();\r\n  const [ owner, setOwnerProject] = useState(false);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);\r\n  const [editProjectMenu, setOpenEditProjectMenu] = useState(false);\r\n  const [openChangePhoto, setOpenChangePhoto] = useState(false);  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  const [activePhoto, setActivePhoto] = useState(props.photo1);  \r\n  const [photoFile, setPhotoFile] = useState();    \r\n  const [photoFileName, setPhotoFileName] = useState();\r\n  const [previewPic, setPreviewPic] = useState(construction);\r\n  const [ photoNumber, setPhotoNum] = useState();\r\n\r\n  const verified = (props.isVerified);\r\n  const isLive = (props.isLive);\r\n\r\n  const onChangePhoto = e => {\r\n    setPhotoFile(e.target.files[0]);\r\n    setPhotoFileName(e.target.files[0].name);\r\n    setPreviewPic(URL.createObjectURL(e.target.files[0]));\r\n};\r\n\r\n\r\nconst onSubmitPhoto = async (e) => {\r\n  try {            \r\n    const params = { projectTitle: (props.title) }; \r\n    const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n    const file = photoFile;\r\n    const name = photoFileName;\r\n    let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n    let currentPhoto;\r\n    if(photoNumber == (0)){\r\n      currentPhoto = \"projectPhoto\"\r\n    } else if(photoNumber == (1)){\r\n      currentPhoto = \"projectPhoto1\"\r\n    } else if(photoNumber == (2)){\r\n      currentPhoto = \"projectPhoto2\"\r\n    }\r\n    project.set(currentPhoto, fileIpfs);\r\n    await project.save();\r\n    setAlertContents(\"Photo Updated!\");\r\n    setAlertVisible(true);\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n};\r\n  \r\n\r\n  const checkOwnership = async() => {\r\n    if(user) {\r\n    const username = user.attributes?.username;\r\n    if( username == props.creator) {\r\n      setOwnerProject(true);\r\n    }\r\n    }\r\n  }\r\n\r\n  const verificationEmail = async() => {\r\n    const params = { projectName: props.title};\r\n    console.log(params);\r\n    try{\r\n    await Moralis.Cloud.run(\"sendVerifyEmail\", params);\r\n    console.log(\"emailSent\")\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    console.log(user);\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n  const openChangePhotoMenu = (photoNum) => {\r\n    setPhotoNum(photoNum);\r\n    setOpenChangePhoto(true);\r\n  }\r\n\r\n  const setActivePhotos = (file, photoNum) => {\r\n    setPhotoNum(photoNum);\r\n    setActivePhoto(file);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    checkOwnership(); \r\n    }\r\n  }, [isInitialized])\r\n\r\n    return (           \r\n      <>\r\n        <div className=\"project-page\">\r\n          \r\n          <div className=\"project-page-container\">              \r\n            <div className=\"project-page-body\">\r\n              <div className=\"project-page-project-container\">\r\n                <div className=\"project-page-title\">\r\n                { verified &&\r\n                  <div>\r\n                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                  </div>\r\n                  }\r\n                   {isLive &&\r\n                      <i class=\"fas fa-chart-line\">Live</i>                        \r\n                    }\r\n                    {!isLive &&\r\n                      <i class=\"fas fa-wrench\">InDev</i>                    \r\n                    }\r\n                  <h2>{props.title}</h2>\r\n                  <Rating\r\n                    title = {props.title}\r\n                  />\r\n                  <Bookmark\r\n                  projectTitle = {props.projectTitle}\r\n                  />\r\n                </div>\r\n                <div className=\"project-page-summary\">\r\n                  {props.summary}\r\n                </div>\r\n                <div className={ owner ? \"project-page-photo-owner\" : \"project-page-photo\"} onClick={ owner ? () => openChangePhotoMenu(photoNumber) : \"\"}>\r\n                  <img  className=\"project-page-photo-img\" src={activePhoto} />   \r\n                  <div className=\"middle-of-projectPic\">                                \r\n                      <i class=\"fas fa-camera-retro\"></i>                                \r\n                  </div>         \r\n                </div>\r\n                <div className=\"project-page-photo-thumbnails\">\r\n                  <div className=\"project-page-photo-thumbnail\">\r\n                    <img  className=\"project-page-photo-img\" src={props.photo1}  onClick={(e) => setActivePhotos(e.currentTarget.src, 0)}/>\r\n                  </div>\r\n                  {(props.photo2 || owner) &&\r\n                  <div className=\"project-page-photo-thumbnail\">\r\n                    {!props.photo2 && \r\n                    <div id=\"add-photo-icon\"onClick={() => openChangePhotoMenu(1)}>\r\n                      <i class=\"fas fa-plus\" ></i>\r\n                    </div>\r\n                    }\r\n                    {props.photo2 && <img  className=\"project-page-photo-img\" src={props.photo2}  onClick={(e) => setActivePhotos(e.currentTarget.src, 1)}/>}\r\n                  </div>\r\n                  }\r\n                  {(props.photo3 || owner) &&\r\n                  <div className=\"project-page-photo-thumbnail\">\r\n                    {!props.photo3 && \r\n                      <div id=\"add-photo-icon\"onClick={() => openChangePhotoMenu(2)}>\r\n                        <i class=\"fas fa-plus\" ></i>\r\n                      </div>\r\n                    }\r\n                    {props.photo3 && <img  className=\"project-page-photo-img\" src={props.photo3} onClick={(e) => setActivePhotos(e.currentTarget.src, 2)}/>}\r\n                  </div>\r\n                  }\r\n                </div>                  \r\n                { (owner ) && <p id=\"change-photo-project-text\">Click/Tap a thumbnail to change it</p>}\r\n                <div className=\"project-page-description\">\r\n                  <h3>About</h3>\r\n                  \r\n                  <div className=\"project-page-links\">\r\n                  <Link className=\"website-link\" to={{ pathname: `https://${props.website}` }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n                    <SocialIconBar\r\n                      twitter={props.twitter}\r\n                      telegram={props.telegram}\r\n                      discord={props.discord}\r\n                      linkedIn={props.linkedIn}\r\n                      youtube={props.youtube}\r\n                      twitch={props.twitch}\r\n                    />\r\n                  </div>\r\n          \r\n                  <h5><img className=\"profileThumb\"src={props.creatorProfilePic} />{\" \"} {props.creator}{\" \"} {props.createdOn}</h5>\r\n                  <p>{props.description}</p>\r\n                </div>\r\n                <div className=\"ratingReviews\">\r\n                  <Reviews \r\n                  title = {props.title}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"project-page-creator-container\">\r\n                <div className=\"project-page-creator-wrapper\">\r\n                  <div className=\"project-page-creator-profile-wrapper\">\r\n                    <h4>Project Creator</h4>\r\n                    { !owner &&\r\n                    <button className=\"send-msg-button btn2\" onClick={() => userCheck()}> Send Message</button>\r\n                    }\r\n                    <ProfileCard\r\n                      username={props.creator}\r\n                      src={props.creatorProfilePic}\r\n                      bio={props.bio}\r\n                    />\r\n                    {owner &&                \r\n                        <div className=\"edit-project-btn-wrapper\">\r\n                          <button className= \"edit-project-btn btn1\" onClick={()=> setOpenEditProjectMenu(true)}>\r\n                            <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Edit&nbsp;Project</span>\r\n                          </button>                      \r\n                        </div>                \r\n                    }\r\n              \r\n                    { (owner && !verified) &&\r\n                      <button className=\"verify-request-button btn2\" onClick={() =>verificationEmail()}> Get Verified</button>\r\n                    }\r\n                  </div>\r\n                \r\n                {!owner &&\r\n                  <RatingProject \r\n                  projectName={props.title}\r\n                  />\r\n                }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"project-page-footer-container\">\r\n              <div className=\"project-page-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {openChangePhoto && \r\n          <div className=\"update-profile-background\">\r\n              <div className=\"update-container\">\r\n                  <div className=\"update-profilepic-container-wrapper\">\r\n                  <div className=\"update-profile-header\">\r\n                      <h3 className=\"update-profile-title\">Choose a Picture</h3>\r\n                      <span className=\"exitMenu\" onClick={() => {setOpenChangePhoto(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                  </div>\r\n                  <div className=\"project-page-photo\">\r\n                      <img className=\"project-page-photo-img\" src={previewPic} alt=\"\" />\r\n                  </div>\r\n                      <form className=\"form-input-container\">\r\n                          <form onSubmit={onSubmitPhoto}>\r\n                              <div className=\"mb-3\">\r\n                                  <label htmlFor=\"profilePhoto\" className=\"form-label\">Select Image File</label>\r\n                                  <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"profilePhoto\" onChange={onChangePhoto} />\r\n                              </div>\r\n                              <div className=\"change-profile-pic-footer\">\r\n                                  <input type=\"button\" value=\"Upload\" className=\"upload-profilePic-button btn2\" onClick={() =>onSubmitPhoto()} />\r\n                                  <button className=\"btn1\" onClick={()=>{setOpenChangePhoto(false)}}>Close</button>\r\n                              </div>\r\n                          </form>\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        }\r\n        </div>\r\n          { (!owner && sendMessagePopUpVisible) &&\r\n            <SendMessagePopUp\r\n            visible={setSendMessagePopUpVisible}\r\n            creatorProfilePic={props.creatorProfilePic}\r\n            creatorName={props.creator}\r\n            projectPic={props.src}\r\n            projectName={props.title}\r\n            />\r\n          }\r\n          {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        {editProjectMenu && \r\n        <EditProject \r\n        closeCreateProjectMenu={setOpenEditProjectMenu}\r\n        title={props.title}\r\n        summary={props.summary}\r\n        description={props.description}\r\n        website={props.website}\r\n        projectPhoto={props.photo1}\r\n        twitter={props.twitter}\r\n        telegram={props.telegram}\r\n        discord={props.discord}\r\n        linkedIn={props.linkedIn}\r\n        youtube={props.youtube}\r\n        twitch={props.twitch}\r\n        isOwner={owner}        \r\n        />\r\n        }\r\n          \r\n        \r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport ProjectDisplay from \"./ProjectPage\";\r\n\r\nconst ProjectData = ({ data }) => {\r\n    \r\n  const { Moralis, isInitialized } = useMoralis();  \r\n  const { title } = useParams();\r\n\r\n  const [ projectLoaded, setProjectLoaded ] = useState([\"\"]);\r\n  let init = 0;\r\n\r\n  const loadProject = async() => {\r\n    const params = { projectTitle: title };\r\n    const project = await Moralis.Cloud.run(\"projectData\", params);\r\n    setProjectLoaded(project);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    loadProject();\r\n    }\r\n    },\r\n    [isInitialized],\r\n  );\r\n\r\n    \r\n  return (\r\n      <>\r\n          {projectLoaded.map(project => (            \r\n            <div key={project.title} className=\"background\">                            \r\n                <ProjectDisplay\r\n                  title={project.title}\r\n                  summary={project.summary}\r\n                  photo1={project.projectPhoto}\r\n                  photo2={project.projectPhoto1}\r\n                  photo3={project.projectPhoto2}\r\n                  creator={project.username}\r\n                  creatorProfilePic={project.profilePic}\r\n                  bio={project.bio}\r\n                  createdOn = {project.createdOn}\r\n                  label={project.username}\r\n                  description={project.description}  \r\n                  projectTitle = {project.title}\r\n                  website={project.website}                \r\n                  twitter={project.twitter}\r\n                  telegram={project.telegram}\r\n                  discord={project.discord}\r\n                  linkedIn={project.linkedIn}\r\n                  youtube={project.youtube}\r\n                  twitch={project.twitch}\r\n                  objectId = {project.objectId}  \r\n                  isVerified = {project.isVerified}\r\n                  isLive = {project.isLive}              \r\n                />                \r\n            </div>\r\n          ))}        \r\n      </>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProjectData;","import React, {useState, useEffect} from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport SaveProfile from './SaveProfile';\r\n\r\nfunction ProfileGridBox(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    const [ratesLive, setRatesLive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.startRate) {\r\n            setRatesLive(true);\r\n        }\r\n      }, []);\r\n    \r\n\r\n    return (    \r\n        <div className=\"profile-grid-box-wrapper\">\r\n            <div className=\"profile-box-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`${url}/${props.username}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.landscapePic}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"profile-box-body\">\r\n                <div className=\"profile-box-profilepic\">\r\n                    <div className=\"profile-box-profilepic-pic\">\r\n                        <img  src={props.profilePic}  className=\"profile-box-profile-img\"/>\r\n                    </div>\r\n                    <div className=\"profile-box-creator\">\r\n                        {props.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-box-summary\">\r\n                    {props.bio}\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-box-footer\">\r\n                <div className=\"saveProfile\">\r\n                    <SaveProfile \r\n                    profileName = {props.username}\r\n                    />\r\n                </div>\r\n                {ratesLive &&\r\n                    <div id=\"profileRates\">\r\n                        Starting&nbsp;at&nbsp;{props.startRate}{props.payCurrency}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProfileGridBox;\r\n","import React, {useState, useEffect} from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport './SearchBar.css';\r\nimport './ProjectGrid.css';\r\nimport ProfileGridBox from './ProfileGridBox';\r\n\r\nfunction LoadUsers() {\r\n  const { user, Moralis, isInitialized } = useMoralis();\r\n  const [ users, setUsers ] = useState([\"\"]);\r\n  const [ usersSaved, setUsersSaved ] = useState([\"\"]);  \r\n  const [ queryProfile, setQueryProfile] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  \r\n  const PagPrev = async() => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    await setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = async() => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    await setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  const LoadUsers = async() => {\r\n    console.log(pageNumber);\r\n    const params = { pageNum: pageNumber};\r\n    const userList = await Moralis.Cloud.run(\"loadUsers\", params);\r\n    setUsers(userList);\r\n    console.log(userList);\r\n  };\r\n\r\n  const SavedProfiles = async () => {\r\n    const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n    setUsersSaved(savedProfiles);\r\n  }\r\n\r\n  const SearchProfiles = async() => {\r\n    setNoneFound(false);\r\n    const params = { username: queryProfile};\r\n    const usersFound = await Moralis.Cloud.run(\"searchUsersByName\", params);\r\n    if(usersFound != ''){\r\n      setSearchResults(usersFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    LoadUsers();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized]\r\n  );  \r\n\r\n  useEffect(() => {\r\n    if(user){\r\n    SavedProfiles();\r\n    }\r\n    },\r\n    [initLoad]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n          <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search profiles by name\" \r\n                value={queryProfile} \r\n                onChange={(event) =>setQueryProfile(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProfiles()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProfiles} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n                </div>\r\n        </div>\r\n      {noneFound &&\r\n        <div className=\"cards-background\">\r\n        <h3>Search Results...<button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button></h3> \r\n          <div className='cards__container'>\r\n              <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n            </div> \r\n          </div> \r\n        </div> \r\n        }\r\n        {showSearchResults &&\r\n          <div className=\"cards-background\"> \r\n            <div className='cards__container'>\r\n            <h3 className=\"my-projects-title\">Search Results...<button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button></h3>\r\n              <div className='project-cards__wrapper'>\r\n                <div className='cards__items'>      \r\n                  {searchResults.map(userProfile => (                          \r\n                    <div key={userProfile.username} className=\"cards__item\">                                                   \r\n                      <ProfileCard\r\n                      bio={userProfile.bio}\r\n                      src={userProfile.profilePic}\r\n                      username={userProfile.username}          \r\n                      />                         \r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <React.Fragment>\r\n          <div className=\"cards\">\r\n            <div className=\"cards-background\"> \r\n\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROFILES</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n              <div className=\"project-grid-container\">\r\n                <div className=\"project-grid-wrapper\">\r\n                  {users.map(userProfile => (\r\n                    <div key={userProfile.username} className=\"project-grid-box\">\r\n                      <ProfileGridBox\r\n                        landscapePic={userProfile.landscapePic}\r\n                        bio={userProfile.bio}\r\n                        profilePic={userProfile.profilePic}\r\n                        username={userProfile.username}\r\n                        startRate={userProfile.startRate}    \r\n                        payCurrency={userProfile.payCurrency}       \r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              </div>              \r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n                \r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadUsers;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport LoadUsers from '../LoadUsers';\r\n\r\nfunction Profiles () {\r\n    return (\r\n        <>\r\n            <LoadUsers />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Profiles;","import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SaveProfile from './SaveProfile';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction UserProfile(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [isSaved, setIsSaved] = useState(props.isSaved);\r\n\r\n    const checkSavedProfile = async() => {\r\n        const params = {profileName: props.profileName}\r\n        const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n        \r\n        if(results[0]) {\r\n            setIsSaved(true);\r\n        } \r\n    }\r\n\r\n    \r\n\r\n    // useEffect(() => {\r\n    //     if(user){\r\n    //     checkSavedProfile();\r\n    //     }\r\n    //     },\r\n    //     [init],\r\n    //   );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-wrapper\">\r\n                <div className=\"profile-background\">\r\n                    <img className='landscape-pic' src={props.landscapePic} alt=\"\"/>   \r\n                </div>\r\n                <div className=\"profile-header\">                        \r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={props.profilePic} alt=\"\"/>                        \r\n                    </div>                        \r\n                    <div className=\"profile-summary\">\r\n                        <h2 className=\"profile-page-username\">{props.username} </h2>\r\n                        <p className=\"profile-page-bio\">{props.bio}</p>\r\n                                          \r\n                    </div>\r\n                    <div className=\"save-profile-wrapper\">\r\n                    <SaveProfile\r\n                        profileName = {props.username}\r\n                        isSaved = {props.isSaved}\r\n                    />\r\n                    </div>                     \r\n                </div>                \r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserProfile\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport './User.css';\r\n\r\nfunction AboutUser(props) {\r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{props.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (props.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{props.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{props.skills}</p>\r\n                </div>                \r\n            </div>            \r\n            <SocialIconBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport UserProfile from \"./UserProfile\";\r\nimport AboutUser from \"./AboutUser\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport Carousel from \"./Carousel\";\r\nimport SendMessagePopUp from \"./SendMessagePopUp\";\r\nimport Alert from \"./Alert\";\r\nimport ProjectGridBox from \"./ProjectGridBox\";\r\n\r\n\r\nconst UserProfilePage = ({ data }) => {\r\n    \r\n  const { user, Moralis,isInitialized } = useMoralis();  \r\n  const { username } = useParams();\r\n  \r\n  const [ profileLoaded, setProfileLoaded ] = useState([\"\"]);\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);  \r\n  const [ userPage, setUserPage] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  \r\n  let init = 0;\r\n  \r\n  const loadProfile = async() => {\r\n    const params = { userUsername: username };\r\n    const profile = await Moralis.Cloud.run(\"userProfileData\", params);    \r\n    setProfileLoaded(profile);    \r\n    checkUserPage();\r\n  };\r\n\r\n  const loadProfileProjects = async() => {\r\n    const params = { userUsername: username, skipAmount : pageNumber };\r\n    const projectsList = await Moralis.Cloud.run(\"renderUserProjects\", params);\r\n    setProjects(projectsList);\r\n  }\r\n\r\n  \r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n    \r\n  const checkUserPage = () => {\r\n    const userLoaded = profileLoaded[0].username; \r\n    const userVisiter = user.attributes?.username;\r\n    if(userLoaded == userVisiter) {\r\n      setUserPage(true);\r\n    } else {\r\n      setUserPage(false);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n  const checkSavedProfile = async() => {\r\n    const params = {profileName: username}\r\n    const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n    \r\n    if(results[0]) {\r\n        setIsSaved(true);\r\n    } \r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    checkSavedProfile();\r\n    loadProfile();  \r\n    }  \r\n    },\r\n    [isInitialized],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    loadProfileProjects();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized]\r\n  );  \r\n\r\n\r\n  return (\r\n      <>  \r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                \r\n                    {profileLoaded.map(userProfile => (  \r\n                        <UserProfile\r\n                            username={userProfile.username}\r\n                            profilePic={userProfile.profilePic}\r\n                            userLocation={userProfile.userLocation}\r\n                            skills={userProfile.skills}\r\n                            website={userProfile.website}\r\n                            bio={userProfile.bio}\r\n                            createdOn = {userProfile.createdAt}\r\n                            landscapePic={userProfile.landscapePic}\r\n                            story={userProfile.story}\r\n                            twitter={userProfile.twitter}\r\n                            telegram={userProfile.telegram}\r\n                            discord={userProfile.discord}\r\n                            linkedIn={userProfile.linkedIn}\r\n                            twitch={userProfile.twitch}\r\n                            youtube={userProfile.youtube}\r\n                            isSaved={isSaved}\r\n                        />                    \r\n                    ))}   \r\n                </div>\r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                    {!userPage &&                  \r\n                      <button \r\n                        className=\"send-msg-button btn2\" \r\n                        onClick={() => userCheck()}\r\n                      > \r\n                        Send Message\r\n                      </button>\r\n                    }\r\n                          \r\n                            <div className=\"aboutme-wrapper\">\r\n                                {profileLoaded.map(userProfile => (  \r\n                                  <AboutUser \r\n                                  website={userProfile.website}\r\n                                  story={userProfile.story}\r\n                                  userLocation={userProfile.userLocation}\r\n                                  skills={userProfile.skills}\r\n                                  website={userProfile.website}                             \r\n                                  />\r\n                                ))}  \r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                            <div className=\"project-section-title\">\r\n                                    <h3>{username}'s Projects</h3>               \r\n                                </div>\r\n                            <div className=\"project-grid-container\">\r\n                              <div className=\"my-project-grid-wrapper\">\r\n                                  {projects.map(listItem => (\r\n                                      <div key={listItem.title} className=\"project-grid-box\">\r\n                                        <ProjectGridBox\r\n                                        title={listItem.title}\r\n                                        summary={listItem.summary}\r\n                                        src={listItem.projectPhoto}\r\n                                        username={listItem.username}\r\n                                        creatorProfilePic={listItem.profilePic}\r\n                                        createdOn = {listItem.createdOn}\r\n                                        label={listItem.username}\r\n                                        path={listItem.title}\r\n                                        isVerified = {listItem.isVerified}\r\n                                        isLive = {listItem.isLive}\r\n                                        />\r\n                                    </div>\r\n                                    ))}\r\n                                  </div>\r\n                                <div className=\"pagination\">\r\n                                  <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                                  <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                                </div>\r\n                              </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n        { sendMessagePopUpVisible &&\r\n          <SendMessagePopUp\r\n          visible={setSendMessagePopUpVisible}\r\n          creatorProfilePic={profileLoaded[0].profilePic}\r\n          creatorName={profileLoaded[0].username}\r\n          />  \r\n        }\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        }\r\n        </div>     \r\n      </>\r\n  );\r\n};\r\nexport default UserProfilePage;","import React from 'react';\r\nimport './ChatPage.css';\r\n\r\nfunction ProfileMessageCard(props) {\r\n    return (\r\n        <div className=\"pmc-container\">\r\n            <div className=\"pmc-profilePic\">\r\n                <img src={props.profilePic} />\r\n            </div>\r\n            <div className=\"pmc-body\">\r\n                <h5>{props.username}</h5>\r\n                <div className=\"pmc-updatedAt\">\r\n                    <h5>{props.updatedAt}</h5>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileMessageCard;\r\n","import React, { useState, useEffect} from 'react';\r\nimport { useMoralis } from 'react-moralis';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './ChatPage.css';\r\nimport ProfileMessageCard from './ProfileMessageCard';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\n\r\n\r\nfunction ChatPage() {\r\n\r\n    const { user, Moralis, isInitialized } = useMoralis();\r\n    const [inboxUsers, setInboxUsers] = useState();\r\n    const [requestsUsers, setRequestsUsers] = useState();\r\n    const [ showInbox, setShowInbox] = useState(false);\r\n    const [ showReply, setShowReply] = useState(false);\r\n    const [ showRequests, setShowRequests] = useState(false);\r\n    const [chatContent, setChatContent] = useState();\r\n    const [ chatDisplay, setChatDisplay] = useState(false);\r\n    const [ activeChatId, setActiveChatId] = useState();\r\n    const [ processRequest, setProcessRequest] = useState(false);\r\n    const [ reply, setReply] = useState(\"\");\r\n    const [noUsers, setNoUsers] = useState(false);\r\n    const [numRequests, setNumRequests] = useState(0);\r\n    const [notifyReq, setNotifyReq] = useState(false);\r\n    const [sendingMsg, setSendingMsg] = useState(false);\r\n    \r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                This will delete entire chat history for both parites. Are you sure you want to proceed?\r\n                <button className=\"submit-form btn3\" onClick={deleteChat}>Yes. Delete </button>\r\n                <button className=\"submit-form btn2\" onClick={setAlertVisible(false)}>Close </button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteChat = async() => {\r\n        // try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            if(conversation.attributes.requestAccepted == false) {\r\n                conversation.destroy().then((object) => {\r\n                    alert(\"Chat deleted.\");\r\n                }, (error) => {\r\n                    alert(error)\r\n                });                \r\n            } else {\r\n            conversation.set('requestAccepted', false);\r\n            await conversation.save();\r\n            alert('Message removed.');\r\n            await loadInboxProfiles();\r\n            } \r\n\r\n\r\n\r\n        const params = { projectTitle: (1) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        const hasProfile = user?.attributes?.profileCreated;\r\n        if( (balanceETH < 100) && (balanceBSC < 100) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n            return false;\r\n        }  else\r\n         if (!hasProfile) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.\r\n                <Link to='/myprofile'><button className=\"btn2\">My Profile</button></Link>\r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n                return false;\r\n        } else {\r\n            return true;\r\n        }       \r\n    }\r\n\r\n    const init = 0;\r\n\r\n    const CheckInboxClick = async() => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showInbox) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowRequests(false);\r\n                loadInboxProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const CheckRequestsClick = async () => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showRequests) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowInbox(false);\r\n                loadRequestsProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadInboxProfiles = async() => {\r\n        setNoUsers(false);\r\n        const profileCards = await Moralis.Cloud.run(\"loadInboxProfiles\");\r\n        if(profileCards !== 'undefined') {\r\n        setInboxUsers(profileCards);\r\n        setShowInbox(true);\r\n        setShowReply(true);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////// profiles that have sent messages to!\r\n    const loadRequestsProfiles = async() => { \r\n        setNoUsers(false); \r\n        setShowInbox(false);      \r\n        const profileCards = await Moralis.Cloud.run(\"loadRequestsProfiles\");\r\n        console.log(profileCards.length);\r\n        if(profileCards !== 'undefined') {\r\n        setRequestsUsers(profileCards);\r\n        setShowRequests(true);\r\n        setShowReply(false);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n\r\n    const numberOfRequests = async() => {\r\n        const numRequests = await Moralis.Cloud.run(\"loadNumRequests\");\r\n        console.log(numRequests);\r\n        setNumRequests(numRequests);\r\n        if(numRequests > 0) {\r\n            setNotifyReq(true);\r\n        } else {\r\n            setNotifyReq(false)\r\n        }\r\n    }\r\n\r\n    const loadRequestMessage = async(chatId, permission) => {\r\n        setActiveChatId(0);\r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadRequestMessage\", params);\r\n        setChatContent(requestMessage);\r\n        setProcessRequest(permission);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n    }\r\n\r\n    const loadInboxMessage = async(chatId) => {  //rename to load conversation and adjust to show all messages associated with conversation from new to old\r\n        setActiveChatId(0);   \r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadInboxMessage\", params);\r\n        setChatContent(requestMessage);        \r\n        await activateChatListener(chatId);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n        setShowReply(true);\r\n    }\r\n\r\n    \r\n    const activateChatListener = async(chatId) => {   \r\n        let query = new Moralis.Query('Messages');\r\n        let subscription = await query.subscribe(); \r\n        subscription.on('create', async(object) => {            \r\n            const parent = object.get('parent');            \r\n            const parentId = parent.id;\r\n            let objProfilePic = object.get('fromProfilePic');   \r\n            const objDate = object.get('date');\r\n            const objMessage = object.get('message');\r\n            const objTime = object.get('time');\r\n            if(parentId == chatId) {\r\n                setChatContent(prev => [...prev, \r\n                    {\r\n                        date: objDate,\r\n                        fromProfilePic: objProfilePic,\r\n                        time: objTime,\r\n                        message: objMessage\r\n                    }]);\r\n                }             \r\n        });\r\n    }\r\n\r\n    const acceptRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', true);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request accpeted! Conversation moved to inbox.\");\r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles();\r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const declineRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', false);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request declined and removed.\"); \r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles(); \r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const sendReply = async() => {\r\n        if(sendingMsg){\r\n            return\r\n        }\r\n        if(reply == \"\"){\r\n            return\r\n        }\r\n        try{\r\n            setSendingMsg(true)\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];           \r\n            let toUser;\r\n            if (conversation.attributes?.user1.id == user.id) {\r\n                toUser = conversation.attributes?.user2.id;\r\n            } else {\r\n                toUser = conversation.attributes?.user1.id;\r\n            }            \r\n            const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n            const msgTime = new Date().toLocaleTimeString('en-US');\r\n            const params = { from: user.attributes?.username, fromProfilePic: user.attributes?.profilePic?._url, to: toUser, date: msgDate, time: msgTime, message: reply, chatId: conversation.id};        \r\n            const message = await Moralis.Cloud.run(\"sendReply\", params); \r\n            const relation = conversation.relation(\"messages\");\r\n            relation.add(message);\r\n            await conversation.save();   \r\n            setReply(\"\");  \r\n            setSendingMsg(false);             \r\n        } catch (error) {\r\n            alert(error)\r\n            setSendingMsg(false)\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        \r\n        numberOfRequests();\r\n        }\r\n    }, [isInitialized])\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){        \r\n        numberOfRequests();\r\n        }\r\n    }, [isInitialized])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"chat-background\">\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-sidebar\">\r\n                    <div className=\"chat-messaging-header-left\">                       \r\n                        <button className=\"btn2 header-left-btn-msg\" onClick={() => CheckInboxClick()}><h5>Messages</h5></button>\r\n                        <>\r\n                            <button className=\"btn2 header-left-btn-req\"onClick={() => CheckRequestsClick()}>\r\n                                <span><h5>Requests</h5></span>\r\n                            {notifyReq && <span className=\"numRequests\">{numRequests}</span>}\r\n                            </button>\r\n                        </>\r\n                    </div>\r\n                    <div className=\"chat-messaging-sidebar-content\">\r\n                        { showInbox &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                            {noUsers && <div className=\"chat-messaging-header-left-empty\" onClick={() => setShowInbox(false)}>No Messages</div>}\r\n                            {inboxUsers.map(profile => (                          \r\n                            <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadInboxMessage(profile.chatId)}>                                                   \r\n                                <ProfileMessageCard\r\n                                    username={profile.username}\r\n                                    profilePic={profile.profilePic}\r\n                                    projectName={profile.projectName}\r\n                                    updatedAt={profile.date}\r\n                                    lastAction={profile.projectName}                                \r\n                                />                            \r\n                            </div>\r\n                            ))}\r\n                        </ul>\r\n                        }\r\n                        { showRequests &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                        {noUsers && <div className=\"chat-messaging-header-left-empty \" onClick={() => setShowRequests(false)}>No Requests</div>}\r\n                        {requestsUsers.map(profile => (                          \r\n                          <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadRequestMessage(profile.chatId, profile.permission)}>                                                   \r\n                              <ProfileMessageCard\r\n                                username={profile.username}\r\n                                profilePic={profile.profilePic}\r\n                                projectName={profile.projectName}\r\n                                updatedAt={profile.date}\r\n                                lastAction={profile.projectName}                                \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </ul>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-messaging\">   \r\n                    <div className=\"chat-messaging-header-right\">\r\n                        {/* <div className=\"show-chat-sidebar\">\r\n                            <button className=\"show-chat-sidebar-btn\">SideBar</button>\r\n                        </div> */}\r\n                        <h5>Welcome </h5>\r\n                            <div className=\"chat-messaging-welcome-user\">\r\n                                <img className=\"chat-messaging-welcome-user-profilePic\" src={user.attributes?.profilePic?._url} />\r\n                                <h5>{user.attributes?.username}</h5>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"chat-messaging-content-container\">\r\n                            { chatDisplay && \r\n                                <div className=\"chat-messaging-content-messageList\">                                                               \r\n                                    <div className=\"chat-messaging-content-message-wrapper\">\r\n                                        <ScrollableFeed forceScroll={true}  >                                            \r\n                                            {chatContent.map(message => (\r\n                                                <div key={message.username} className=\"chat-messaging-content-messageLoaded\">\r\n                                                    <div className=\"chat-messaging-content-message\">\r\n                                                        <div className=\"chat-messaging-content-profilePic-wrapper\">\r\n                                                            <img className=\"chat-messaging-content-profilePic\" src={message.fromProfilePic} />\r\n                                                        </div>\r\n                                                        <div className=\"chat-messaging-content-message-text\">\r\n                                                            <p>{message.message}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"chat-messaging-content-message-time\">\r\n                                                        <p>{message.date}, {message.time}</p>\r\n                                                    </div>\r\n                                            </div>\r\n                                            ))}\r\n                                        </ScrollableFeed>\r\n                                    </div>\r\n                                </div>\r\n                            }   \r\n                        \r\n                    </div>\r\n                    <div className=\"chat-messaging-footer\">\r\n                        {showReply &&\r\n                        <>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\" Reply...\" \r\n                                className=\"chat-messaging-reply-text\" \r\n                                id=\"chat-messaging-reply-text\" \r\n                                value={reply} \r\n                                onChange={(event) =>setReply(event.currentTarget.value)} \r\n                                required\r\n                                onKeyPress={(event) => { if(event.key === \"Enter\") {sendReply()}}}>\r\n\r\n                            </input>\r\n                            <div className=\"chat-messaging-reply-button\">\r\n                                <i class=\"fas fa-paper-plane\" onClick={() => sendReply()}></i>\r\n                            </div>\r\n                            <div className=\"chat-messaging-trash-button\">\r\n                                <i class=\"fas fa-trash-alt\" onClick={() => deletePopUp()}></i>\r\n                            </div>\r\n                            \r\n                        </>\r\n                        }\r\n                        { (showRequests && chatDisplay) &&\r\n                        <div className=\"chat-messaging-footer-request-options\">\r\n                            {!processRequest &&\r\n                            <h6>Waiting for user to accept request.</h6>\r\n                            }\r\n                            {processRequest &&\r\n                            <>\r\n                            <button className=\"btn2\" onClick={()=> acceptRequest()}>Accept</button>\r\n                            <button className=\"btn3\" onClick={()=> declineRequest()}>Decline</button>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage;\r\n","export default __webpack_public_path__ + \"static/media/newlogoAVAX.1f71a14f.png\";","export default __webpack_public_path__ + \"static/media/newlogoMATIC.84b1e77e.png\";","import React, {useEffect, useState} from 'react';\r\nimport { Moralis } from 'moralis';\r\nimport ETH from '../img/ethlogo.png';\r\nimport BSC from '../img/bsclogo.png';\r\nimport MATIC from '../img/maticlogo.png';\r\nimport AVAX from '../img/avaxlogo.png';\r\nimport './Wallet.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport './TokenSwap.css';\r\nimport LogoETH from '../img/newlogo2.png';\r\nimport LogoBSC from '../img/newlogoBSC2.png';\r\nimport LogoAVAX from '../img/newlogoAVAX.png';\r\nimport LogoMATIC from '../img/newlogoMATIC.png';\r\n\r\n\r\nfunction TokenSwap() {\r\n\r\n    const { user, isInitialized } = useMoralis();\r\n\r\n    const [ theme, setTheme] = useState(\"ETH\");\r\n    const [ currentChain, setCurrentChain] = useState(\"eth\");    \r\n    const [ chainLogo, setChainLogo] = useState(ETH);\r\n    const [ nativeAmount, setNativeAmount] = useState(0);\r\n    const [ viralTokenAmount, setViralTokenAmount] = useState(0);\r\n    const [ nativeBalance, setNativeBalance ] = useState(0);\r\n    const [ viralBalance, setViralBalance] = useState(0);\r\n    const [tokens, setTokens] = useState([]);\r\n\r\n    const NATIVE_ADDRESS = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\r\n    const VIRAL_ADDRESS = \"0x7CeC018CEEF82339ee583Fd95446334f2685d24f\";\r\n\r\n    const changeChain = (chain, logo, theme) => {\r\n        setNativeAmount(0);\r\n        setViralTokenAmount(0);\r\n        setViralBalance(0);\r\n        if(chain == \"bsc\") {\r\n            switchNetworkBSC();\r\n        } else if(chain == \"eth\") {\r\n            try{\r\n            switchNetworkETH();\r\n            } catch {\r\n                alert(\"You have to switch networks to swap.\")\r\n            }\r\n        }else if(chain == \"matic\") {\r\n            switchNetworkMATIC();\r\n        }else if(chain == \"avalanche\") {\r\n            switchNetworkAVAX();\r\n        }        \r\n        setCurrentChain(chain);\r\n        setChainLogo(logo);\r\n        setTheme(theme);\r\n        renderBalance(chain);\r\n    }\r\n\r\n    // const chainId = async() => {\r\n    //     const web3 = await Moralis.Web3.enable();\r\n    //     const chainIdHex = web3.currentProvider.chainId;\r\n    //     const chainIdDec = await web3.eth.getChainId();\r\n    //     console.log(chainIdHex);\r\n    //     console.log(chainIdDec);\r\n    // }\r\n\r\n    const renderBalance = async (chain) => {\r\n        try{\r\n        const options = { chain: chain}\r\n        const chainBalance = await Moralis.Web3API.account.getNativeBalance(options);\r\n        let viralBalance;\r\n        try{\r\n            viralBalance = await Moralis.Web3.getERC20({chain:currentChain, tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n            console.log(viralBalance);\r\n        } catch (error) {\r\n            viralBalance = 0;\r\n        }\r\n        const nativeBalance = (chainBalance.balance/(10**18)).toFixed(3);\r\n        const viralTokenBalance = (viralBalance.balance/(10**9)).toFixed(0);\r\n        setNativeBalance(nativeBalance);\r\n        setViralBalance(viralTokenBalance);\r\n        } catch {\r\n            setViralBalance(0);\r\n        }\r\n    }\r\n\r\n     const getQuote = async() => {\r\n        const number = Number(Moralis.Units.ETH(nativeAmount));\r\n        const quote = await Moralis.Plugins.oneInch.quote({\r\n          chain: currentChain, // The blockchain you want to use (eth/bsc/polygon)\r\n          fromTokenAddress: NATIVE_ADDRESS, // The token you want to swap\r\n          toTokenAddress: VIRAL_ADDRESS, // The token you want to receive\r\n          amount: number,\r\n        });\r\n        setViralTokenAmount(((quote.toTokenAmount)/(10**9)).toFixed(0));\r\n    }\r\n\r\n     const swap = async() => {\r\n        await Moralis.Web3.enable();\r\n        await Moralis.initPlugins();\r\n        const userAddress = user.get('ethAddress');\r\n        await checkAllowance(userAddress);\r\n        // await approve(userAddress);\r\n        const number = Number(Moralis.Units.ETH(nativeAmount));\r\n        const receipt = await Moralis.Plugins.oneInch.swap({\r\n          chain: currentChain, // The blockchain you want to use (eth/bsc/polygon)\r\n          fromTokenAddress: \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\", // The token you want to swap\r\n          toTokenAddress: \"0x7cec018ceef82339ee583fd95446334f2685d24f\", // The token you want to receive\r\n          amount: number,\r\n          fromAddress: userAddress, // Your wallet address\r\n          protocols: \"uniswapv2\",\r\n          slippage: 33\r\n        });\r\n        console.log(\"below id receipt\");\r\n        console.log(receipt);\r\n      }\r\n\r\n      const getSupportedTokens = async() => {\r\n        const tokens = await Moralis.Plugins.oneInch.getSupportedTokens({\r\n          chain: currentChain, // The blockchain you want to use (eth/bsc/polygon)\r\n        });\r\n        console.log(tokens.tokens);\r\n        setTokens(tokens.tokens);\r\n      }\r\n\r\n       const approve = async(userAddress) => {\r\n        await Moralis.Plugins.oneInch.approve({\r\n          chain: currentChain, // The blockchain you want to use (eth/bsc/polygon)\r\n          tokenAddress: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", // The token you want to swap\r\n          fromAddress: userAddress, // Your wallet address\r\n          infinity: true,\r\n          protocols: \"uniswapv2\"\r\n        });\r\n      }\r\n\r\n    const hasAllowance = async(userAddress) => {\r\n        const number = Number(Moralis.Units.ETH(nativeAmount));\r\n        const allowance = await Moralis.Plugins.oneInch.hasAllowance({\r\n            chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\r\n            tokenAddress: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", // The token you want to swap\r\n            fromAddress: userAddress, // Your wallet address            \r\n            amount: number,\r\n        });\r\n        console.log(allowance);\r\n        console.log(`The user has enough allowance: ${allowance}`);\r\n    }\r\n    const checkAllowance = async(userAddress) => {\r\n        const options = {\r\n            owner_address: userAddress,\r\n            spender_address: \"0x11111112542D85B3EF69AE05771c2dCCff4fAa26\",\r\n            address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n            // chain: currentChain\r\n          };\r\n          let allowance;\r\n          try{\r\n             allowance = await Moralis.Web3API.token.getTokenAllowance(options);\r\n          } catch(error){\r\n              console.log(error)\r\n          }\r\n        console.log(allowance);\r\n        console.log(`The user has enough allowance: ${allowance}`);\r\n    }\r\n\r\n    const init = async() => {        \r\n        const web3 = await Moralis.Web3.enable();\r\n        await Moralis.initPlugins();\r\n        const plugins = Moralis.Plugins;\r\n        console.log(plugins);\r\n    }\r\n\r\n    const switchNetworkETH = async () => {\r\n        const web3 = await Moralis.Web3.enable();\r\n        try {\r\n            await web3.currentProvider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: \"0x1\" }],\r\n            });\r\n        } catch (error) {\r\n            if (error.code === 4902) {\r\n            try {\r\n                await web3.currentProvider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                    {\r\n                    chainId: \"0x1\",\r\n                    chainName: \"Ethereum Mainnet\",\r\n                    rpcUrls: [\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"],\r\n                    nativeCurrency: {\r\n                        name: \"ETH\",\r\n                        symbol: \"ETH\",\r\n                        decimals: 18,\r\n                    },\r\n                    blockExplorerUrls: [\"https://etherscan.io\"],\r\n                    },\r\n                ],\r\n                });\r\n            } catch (error) {\r\n                alert(error.message);\r\n                \r\n            } \r\n            }\r\n            alert(\"You have to switch networks to swap.\")\r\n        }\r\n    }\r\n\r\n    const switchNetworkBSC = async () => {\r\n        const web3 = await Moralis.Web3.enable();\r\n        try {\r\n            await web3.currentProvider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: \"0x38\" }],\r\n            });\r\n        } catch (error) {\r\n            if (error.code === 4902) {\r\n            try {\r\n                await web3.currentProvider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                    {\r\n                    chainId: \"0x38\",\r\n                    chainName: \"Binance Smart Chain\",\r\n                    rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\r\n                    nativeCurrency: {\r\n                        name: \"BNB\",\r\n                        symbol: \"BNB\",\r\n                        decimals: 18,\r\n                    },\r\n                    blockExplorerUrls: [\"https://bscscan.com/\"],\r\n                    },\r\n                ],\r\n                });\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n            }\r\n            alert(\"You have to switch networks to swap.\")\r\n        }\r\n    }\r\n\r\n    const switchNetworkMATIC = async () => {\r\n        const web3 = await Moralis.Web3.enable();\r\n        try {\r\n            await web3.currentProvider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: \"0x89\" }],\r\n            });\r\n        } catch (error) {\r\n            if (error.code === 4902) {\r\n            try {\r\n                await web3.currentProvider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                    {\r\n                    chainId: \"0x89\",\r\n                    chainName: \"Polygon (MATIC) Mainnet\",\r\n                    rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\r\n                    nativeCurrency: {\r\n                        name: \"Matic\",\r\n                        symbol: \"Matic\",\r\n                        decimals: 18,\r\n                    },\r\n                    blockExplorerUrls: [\"https://explorer.matic.network/\"],\r\n                    },\r\n                ],\r\n                });\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n            }\r\n            alert(\"You have to switch networks to swap.\")\r\n        }\r\n    }\r\n\r\n    const switchNetworkAVAX = async () => {\r\n        const web3 = await Moralis.Web3.enable();\r\n        try {\r\n            await web3.currentProvider.request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: \"0xa86a\" }],\r\n            });\r\n        } catch (error) {\r\n            if (error.code === 4902) {\r\n            try {\r\n                await web3.currentProvider.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                    {\r\n                    chainId: \"0xa86a\",\r\n                    chainName: \"Avalance Mainnet\",\r\n                    rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\r\n                    nativeCurrency: {\r\n                        name: \"AVAX\",\r\n                        symbol: \"AVAX\",\r\n                        decimals: 18,\r\n                    },\r\n                    blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\r\n                    },\r\n                ],\r\n                });\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n            }\r\n            alert(\"You have to switch networks to swap.\")\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isInitialized) {\r\n            init();\r\n            renderBalance(currentChain);\r\n            getSupportedTokens(currentChain);\r\n        }\r\n    }, [isInitialized] )\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        if(isInitialized) {\r\n            if(nativeAmount > 0){\r\n            getQuote();\r\n            }\r\n        }\r\n    }, [nativeAmount] )\r\n\r\n    return (\r\n        <div id=\"swap-container\">\r\n            <div id=\"swap-wrapper\">\r\n                <div className=\"choose-chain-wallet-wrapper\">\r\n                    <div className={`choose-chain-wallet-${theme}`}>                  \r\n                        <div className=\"choose-chain-wallet-choose\">                    \r\n                            <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"eth\", ETH, \"ETH\")}>\r\n                                <img src={ETH} />\r\n                            </div>\r\n                            <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"bsc\", BSC, \"BSC\")}>\r\n                                <img src={BSC} />\r\n                            </div>\r\n                            <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"matic\", MATIC, \"MATIC\")}>\r\n                                <img src={MATIC} />\r\n                            </div>\r\n                            <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"avalanche\", AVAX, \"AVAX\")}>\r\n                                <img src={AVAX} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"swap-display-holding-wrapper\">\r\n                    <div className={`swap-display-holding-${theme}`}>\r\n                        <div id=\"swap-inputs\">\r\n                            <label id={`swap-holding-option-${theme}`} >\r\n                            {nativeBalance}&nbsp;\r\n                                <img id=\"swaplogoimg\" src={ETH} style={ chainLogo != ETH ? {display: \"none\"} : {} } />                                     \r\n                                <img id=\"swaplogoimg\" src={BSC} style={ chainLogo != BSC ? {display: \"none\"} : {} } />    \r\n                                <img id=\"swaplogoimg\" src={AVAX} style={ chainLogo != AVAX ? {display: \"none\"} : {} } />    \r\n                                <img id=\"swaplogoimg\" src={MATIC} style={ chainLogo != MATIC ? {display: \"none\"} : {} } />    \r\n                            </label>\r\n                            <input id=\"input-swap-amount\" type=\"number\" value={nativeAmount} placeholder=\"0\" onChange={(event) =>setNativeAmount(event.currentTarget.value)}/>\r\n                        </div>\r\n                        <div id=\"swap-inputs\">\r\n                            <label id={`swap-holding-option-${theme}`} >\r\n                            <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n                                <option selected>Open this select menu</option>\r\n                                {/* {tokens.map( (token, index) => (\r\n                                    <option key={index} value={token.address}>\r\n                                        {token.symbol}<img src={token.logoURI}/>\r\n                                    </option>\r\n                                ))} */}\r\n                            </select>\r\n                                {viralBalance}&nbsp;\r\n                                <img id=\"swaptokenimg\" src={LogoETH} style={ chainLogo != ETH ? {display: \"none\"} : {} } />                                     \r\n                                <img id=\"swaptokenimg\"src={LogoBSC} style={ chainLogo != BSC ? {display: \"none\"} : {} } />    \r\n                                <img id=\"swaptokenimg\"src={LogoAVAX} style={ chainLogo != AVAX ? {display: \"none\"} : {} } />    \r\n                                <img id=\"swaptokenimg\"src={LogoMATIC} style={ chainLogo != MATIC ? {display: \"none\"} : {} } />    \r\n                            </label>\r\n                            <input id=\"input-swap-amount\" type=\"number\" value={viralTokenAmount} placeholder=\"0\" onChange={ (e) => setViralTokenAmount(e.currentTarget.value)}/>\r\n                        </div>\r\n                        <div id=\"swap-inputs\">\r\n                            <button id={`swap-button-${theme}`} onClick={() => swap()}>Approve</button>                        \r\n                            <button id={`swap-button-${theme}`} onClick={() => swap()}>Swap</button>                        \r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TokenSwap\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\n\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/pages/home';\nimport Platform from './components/pages/platform';\nimport MyProfile from './components/pages/myprofile';\nimport Projects from './components/pages/projects';\nimport Wallet from './components/pages/wallet';\nimport ProjectData from './components/ProjectData';\nimport Profiles from './components/pages/profiles';\nimport UserProfilePage from './components/UserProfileData';\nimport ChatPage from './components/ChatPage';\nimport TokenSwap from './components/TokenSwap';\n\n\nfunction App() {\n  const history = useHistory();\n  \n  return (\n    <>\n      <Router history= {history}>\n      <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/platform' exact component={Platform} />\n          <Route path='/projects' exact component={Projects} />\n          <Route path='/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/profiles' exact component={Profiles} />\n          <Route path='/profiles/:username'>\n            <UserProfilePage />\n          </Route>\n          <Route path='/myprofile' exact component={MyProfile} />\n          <Route path='/myprofile/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/chat' exact component={ChatPage} />\n          <Route path='/wallet' exact component={Wallet} />\n          <Route path='/swap' exact component={TokenSwap} />\n        </Switch>      \n      </Router>\n      \n    </>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MoralisProvider } from \"react-moralis\";\n\nconst appId='TTxOqOgA9vSsj2z84WeDRi4i1iDgbo9kruLWqfxd';\nconst serverUrl='https://siixq6taugjh.moralis.io:2053/server';\n\nReactDOM.render(\n  <MoralisProvider appId={appId} serverUrl={serverUrl}>\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}