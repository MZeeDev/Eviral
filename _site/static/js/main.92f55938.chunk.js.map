{"version":3,"sources":["img/roundlogo.png","img/eViralLogo2.png","img/beviral.png","img/defaultProfile.png","img/metamask.png","img/walletconnect.png","components/Alert.js","components/Navbar.js","components/CardItem.js","components/Cards.js","components/OnRamper.js","components/TokenPrices.js","components/HeroSection.js","components/pages/home.js","components/pages/platform.js","img/defaultLandscape.jpg","img/construction.png","components/CreateProject.js","components/Profile.js","components/UpdateProfile.js","components/AboutMe.js","components/Bookmark.js","components/Rating.js","components/ProjectCard.js","components/MyProjectsCard.js","components/Carousel.js","components/ProjectGridBox.js","components/LoadMyProjects.js","components/SaveProfile.js","components/ProfileCard.js","components/pages/myprofile.js","components/Projects.js","components/pages/projects.js","img/ethlogo.png","img/bsclogo.png","img/maticlogo.png","components/NFTCard.js","components/Wallet.js","components/pages/wallet.js","components/RatingProject.js","components/ReviewCard.js","components/Reviews.js","components/SocialIconBar.js","components/SendMessagePopUp.js","components/EditProject.js","components/ProjectPage.js","components/ProjectData.js","components/ProfileGridBox.js","components/LoadUsers.js","components/pages/profiles.js","components/UserProfile.js","components/AboutUser.js","components/UserProfileData.js","components/ProfileMessageCard.js","components/ChatPage.js","App.js","index.js"],"names":["Alert","props","className","src","Logo","content","onClick","visible","Navbar","useMoralis","authenticate","isAuthenticated","user","logout","Moralis","auth","useState","click","setClick","setButton","dropdown","setDropdown","balance","setBalance","balanceBSC","setBalanceBSC","avatar","profilePic","setProfilePic","username","setUsername","setDisplayConnect","connectMenu","setOpenConnectMenu","closeMobileMenu","authenticateUserMM","a","console","log","alert","renderBalance","attributes","_url","authenticateUserWC","provider","logoutUser","window","location","href","goHome","Web3","getERC20","tokenAddress","eViralBalance","chain","beViralBalance","eBalance","bBalance","toFixed","bvBalance","useEffect","addEventListener","innerWidth","to","class","eViralLogo","alt","beViralLogo","mmLogo","wcLogo","CardItem","path","target","label","text","Cards","pathname","OnRamper","defaultCrypto","id","title","frameborder","allow","TokenPrices","isInitialized","eViralPrice","setEViralPrice","beViralPrice","setBEViralPrice","getPrices","options1","address","exchange","Web3API","token","getTokenPrice","bscPrice","beViral","usdPrice","options2","ethPrice","eViral","HeroSection","classname","autoPlay","loop","muted","width","variant","Home","Platform","height","CreateNewProject","saveFile","useMoralisFile","setTitle","summary","setSummary","description","setDescription","website","setWebsite","twitter","setTwitter","telegram","setTelegram","discord","setDiscord","linkedIn","setLinkedIn","youtube","setYoutube","twitch","setTwitch","isLive","setIsLive","alertVisible","setAlertVisible","alertContents","setAlertContents","photoFile","setPhotoFile","photoFileName","setPhotoFileName","construction","projectPhotoPreview","setProjectPhotoPreview","createNewProject","newProject","Object","extend","project","file","name","date","Date","User","current","currentUser","userObjectId","saveIPFS","fileIpfs","set","toLocaleDateString","undefined","save","relation","add","closeCreateProjectMenu","htmlFor","style","color","type","accept","multiple","required","onChange","e","files","URL","createObjectURL","placeholder","value","event","currentTarget","rows","maxLength","Profile","error","isUploading","moralisFile","landscape","setLandscape","balanceETH","setBalanceETH","changeProfilePicMenu","setOpenChangeProfilePicMenu","onSubmitPhoto","editProfileCheck","openEditProfileMenu","defaultProfile","landscapePic","defaultLandscape","bio","profileCreated","openCreateProjectMenu","onSubmit","UpdateProfile","setUserData","landscapeFile","setLandscapeFile","landscapeFileName","setLandscapeFileName","setLandscapePic","userLocation","setUserLocation","story","setStory","skills","setSkills","setBio","checkProfileCreated","handleSave","onSubmitLandscape","closeEditProfileMenu","AboutMe","linkenIn","Bookmark","bookmark","setBookmark","saveProject","Project","query","Query","equalTo","projectTitle","find","removeProject","exists","remove","checkBookmark","select","queryResults","results","i","length","push","Rating","rating","setRating","reviewCount","setReviewCount","checkRating","params","Cloud","run","projectRating","Array","map","star","ProjectCard","url","useRouteMatch","verified","isVerified","category","creatorProfilePic","createdOn","MyProjectsCard","Carousel","children","show","currentIndex","setCurrentIndex","setLength","isRepeating","setIsRepeating","transitionEnabled","setTransitionEnabled","prevState","transform","transition","onTransitionEnd","output","index","reverse","renderExtraPrev","renderExtraNext","ProjectGridBox","LoadMyProject","projects","setProjects","pageNumber","setPageNumber","LoadProjects","page","Fragment","listItem","projectPhoto","SaveProfile","saved","setSaved","isSaved","saveProfile","profileName","userProfile","removeProfile","checkSavedProfile","ProfileCard","MyProfile","createProjectMenu","setOpenCreateProjectMenu","editProfileMenu","setOpenEditProfileMenu","savedProjects","setSavedProjects","usersSaved","setUsersSaved","LoadSavedProjects","savedProjectsList","LoadSavedProfiles","savedProfiles","LoadMyProjects","ProjectsList","match","queryName","setQueryName","showSearchResults","setShowSearchResults","searchResults","setSearchResults","noneFound","setNoneFound","skipAmount","projectsList","PagPrev","PagNext","SearchProjects","projectsFound","onKeyPress","key","Projects","NFTCard","symbol","tokenId","contractType","amount","Wallet","currentChain","setCurrentChain","tokens","setTokens","nfts","setNFTS","transactions","viewTokens","setViewTokens","viewNFTs","setViewNFTs","viewTransactions","setViewTransactions","ETH","chainLogo","setChainLogo","theme","setTheme","getTokens","options","order","account","getTokenBalances","balances","Promise","all","token_address","priceInfo","decimals","price","usdAmount","list","getNFTs","fixURL","startsWith","split","slice","nftList","result","nft","token_uri","fetch","then","response","json","data","image","changeChain","logo","BSC","MATIC","token_id","contract_type","transaction","hash","wallet","RatingProject","review","setReview","userReview","setUserReivew","stars","setStars","reviewTitle","setReviewTitle","prevTitle","setPrevTitle","hasReview","setHasReview","setReviewed","loadUserRating","projectName","currentProject","projectRelation","reviewText","boolReview","postProjectRating","userCheck","newReview","ratingValue","ReviewCard","reviewerPic","createdAt","Reviews","reviews","setReviews","seeReviews","setSeeReviews","loadReviews","reviewList","SocialIconBar","SendMessagePopUp","msg","setMessage","SendMessage","msgDate","year","month","day","msgTime","toLocaleTimeString","from","creatorName","time","message","projectPic","EditProject","isOwner","deletePopUp","deleteProject","destroy","object","editProject","ProjectDisplay","owner","setOwnerProject","sendMessagePopUpVisible","setSendMessagePopUpVisible","editProjectMenu","setOpenEditProjectMenu","checkOwnership","creator","verificationEmail","ProjectData","useParams","projectLoaded","setProjectLoaded","loadProject","objectId","ProfileGridBox","LoadUsers","users","setUsers","queryProfile","setQueryProfile","prevPageNumber","nextPageNumber","pageNum","userList","SavedProfiles","SearchProfiles","usersFound","Profiles","UserProfile","setIsSaved","init","AboutUser","UserProfilePage","profileLoaded","setProfileLoaded","userPage","setUserPage","loadProfile","userUsername","profile","checkUserPage","loadProfileProjects","userLoaded","userVisiter","ProfileMessageCard","updatedAt","ChatPage","inboxUsers","setInboxUsers","requestsUsers","setRequestsUsers","showInbox","setShowInbox","showReply","setShowReply","showRequests","setShowRequests","chatContent","setChatContent","chatDisplay","setChatDisplay","activeChatId","setActiveChatId","processRequest","setProcessRequest","reply","setReply","noUsers","setNoUsers","numRequests","setNumRequests","notifyReq","setNotifyReq","deleteChat","Conversation","findConversation","conversationFound","conversation","requestAccepted","loadInboxProfiles","hasProfile","CheckInboxClick","CheckRequestsClick","loadRequestsProfiles","profileCards","numberOfRequests","loadRequestMessage","chatId","permission","requestMessage","loadInboxMessage","activateChatListener","subscribe","on","parent","get","parentId","objProfilePic","objDate","objMessage","objTime","prev","fromProfilePic","acceptRequest","declineRequest","sendReply","toUser","user1","user2","lastAction","forceScroll","App","history","useHistory","exact","component","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"01BAAe,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,oCCA1B,MAA0B,2CCA1B,MAA0B,qCCA1B,MAA0B,0C,wBC4B1BA,MAxBf,SAAeC,GAEX,OACI,mCACI,qBAAKC,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,YAAYC,IAAKC,IAChC,4CAEJ,qBAAKF,UAAU,gBAAf,SACKD,EAAMI,UAEX,qBAAKH,UAAU,eAAf,SACI,wBAASI,QAAS,WAAOL,EAAMM,SAAQ,IAAvC,+BCgPbC,MApPf,WACI,MAAsEC,cAA9DC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBC,EAAvC,EAAuCA,KAAMC,EAA7C,EAA6CA,OAAcC,GAA3D,EAAqDC,KAArD,EAA2DD,SAE3D,EAA0BE,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAeG,GAAf,WACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA8BL,mBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoCP,mBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAAoCT,mBAASU,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAS,YAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAA4Cd,oBAAS,GAArD,mBAAuBe,GAAvB,WAGA,EAA4Cf,oBAAS,GAArD,mBAAQgB,EAAR,KAAqBC,EAArB,KAGMC,EAAkB,kBAAMhB,GAAS,IAEjCiB,EAAkB,uCAAG,gCAAAC,EAAA,yDACvBC,QAAQC,IAAI,GACR3B,EAFmB,0CAITD,IAJS,uDAMf6B,MAAM,EAAD,IANU,yBASZ5B,IACC6B,KACAZ,EAAa,UAAChB,EAAK6B,kBAAN,iBAAC,EAAiBd,kBAAlB,aAAC,EAA6Be,MAC3CZ,EAAW,UAAClB,EAAK6B,kBAAN,aAAC,EAAiBZ,WAZlB,qBAgBvBI,GAAmB,GAhBI,+DAAH,qDAmBlBU,GAAkB,uCAAG,gCAAAP,EAAA,yDACnBzB,EADmB,0CAGTD,EAAa,CAAEkC,SAAU,kBAHhB,sDAKfL,MAAM,EAAD,IALU,uBAQZ5B,IACC6B,KACAZ,EAAa,UAAChB,EAAK6B,kBAAN,iBAAC,EAAiBd,kBAAlB,aAAC,EAA6Be,MAC3CZ,EAAW,UAAClB,EAAK6B,kBAAN,aAAC,EAAiBZ,WAXlB,oBAevBI,GAAmB,GAfI,8DAAH,qDAkBlBY,GAAU,uCAAG,sBAAAT,EAAA,sEACTvB,IADS,OAEfkB,GAAkB,GAClBH,EAAcF,GACC,WAAOoB,OAAOC,SAASC,KAAK,IAC3CC,GALe,2CAAH,qDAQVT,GAAa,uCAAG,sCAAAJ,EAAA,sEACUtB,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAD/C,cACZC,EADY,gBAEWvC,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAF7D,OAEZG,EAFY,OAGZC,EAAWH,EAAc/B,QAAd,SAAuB,GAAI,IACtCmC,EAAWF,EAAejC,QAAf,SAAwB,GAAI,IACvCA,EAAWkC,EAASE,QAAQ,GAAK,OACjCC,EAAaF,EAASC,QAAQ,GAAK,OACzCnC,EAAWD,GACXG,EAAckC,GARI,4CAAH,qDAoCnB,OAXAC,qBAAU,WACK,IAAD,IAANhD,IACAgB,EAAa,UAAChB,EAAK6B,kBAAN,iBAAC,EAAiBd,kBAAlB,aAAC,EAA6Be,MAC3CZ,EAAYlB,EAAK6B,WAAWZ,UAC5BW,QAED,CAAC5B,IAERkC,OAAOe,iBAAiB,UAtBL,WACZf,OAAOgB,YAAa,IACnB3C,GAAU,GAEVA,GAAU,MAsBd,mCACI,qBAAKjB,UAAU,SAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAYI,QAxFvB,kBAAMY,GAAUD,IAwFpB,SACI,mBAAGf,UAAWe,EAAQ,eAAiB,kBAE/C,oBAAIf,UAAU,cAAd,SACI,cAAC,IAAD,CAAM6D,GAAG,IAAI7D,UAAU,cAAvB,SACA,qBAAKA,UAAU,cAAf,SACI,qDAMJ,qBAAIA,UAAWe,EAAQ,kBAAoB,WAA3C,UACI,oBAAIf,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6D,GAAG,IAAI7D,UAAU,YAAYI,QAAS4B,EAA5C,SACI,mBAAG8B,MAAM,oBAGjB,oBAAI9D,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6D,GAAG,YAAY7D,UAAU,YAAYI,QAAS4B,EAApD,SACI,mBAAG8B,MAAM,qBAGjB,oBAAI9D,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6D,GAAG,YAAY7D,UAAU,YAAYI,QAAS4B,EAApD,SACI,mBAAG8B,MAAM,6BAIhBpD,GACD,oBAAIV,UAAU,WAAWI,QAAS4B,EAAlC,SACI,cAAC,IAAD,CAAM6B,GAAG,QAAQ7D,UAAU,YAA3B,SACI,mBAAG8D,MAAM,wBAIjB,oBAAI9D,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6D,GAAG,UAAU7D,UAAU,YAAYI,QAAS4B,EAAlD,SACI,mBAAG8B,MAAM,yBAMzB,sBAAK9D,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,YAAYC,IAAKwB,QAGxC,oBAAIzB,UAAU,WAAd,SACMS,GACF,qBAAKT,UAAU,QAAf,SACI,mBAAG8D,MAAM,oBAAoB1D,QAAS,WAAOe,GAAaD,IAA1D,SACKA,GACD,sBAAKlB,UAAU,WAAf,UACI,qBAAIA,UAAU,qBAAd,UACI,sBAAMA,UAAU,kBAChB,qBAAKA,UAAU,YAAYC,IAAKwB,IAChC,uBAAMzB,UAAU,oBAAhB,cAAsC2B,KACtC,sBAAM3B,UAAU,2BAEpB,oBAAIA,UAAU,gBAAd,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACCoB,EACD,qBAAKpB,UAAU,sBAAsBC,IAAK8D,EAAYC,IAAI,QAE1D,sBAAKhE,UAAU,iBAAf,UACCsB,EACD,qBAAKtB,UAAU,sBAAsBC,IAAKgE,EAAaD,IAAI,aAInE,eAAC,IAAD,CAAMH,GAAG,aAAa7D,UAAU,gBAAhC,UACI,sBAAMA,UAAU,gBAAhB,SACA,mBAAG8D,MAAM,kBAFb,gBAOA,eAAC,IAAD,CAAMD,GAAG,QAAQ7D,UAAU,gBAA3B,UACI,sBAAMA,UAAU,gBAAhB,SACA,mBAAG8D,MAAM,sBAFb,cAMA,eAAC,IAAD,CAAMD,GAAG,UAAU7D,UAAU,gBAA7B,UACI,sBAAMA,UAAU,gBAAhB,SACA,mBAAG8D,MAAM,oBAFb,eAOA,qBAAI9D,UAAU,kBAAd,UACI,wBAAQA,UAAU,mBAAmBI,QAAS,WAAOe,GAAaD,IAAlE,mBACI,yBAAQlB,UAAU,kBAAkBI,QAAS,kBAAMuC,MAAnD,uBAEA,mBAAGmB,MAAM,wCAS9BrD,GAAmB,wBAAQT,UAAU,OAAQI,QAAS,kBAAM2B,GAAmB,IAA5D,qBAGpBD,GACF,qBAAK9B,UAAU,yBAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qDAEJ,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,uBAAsBI,QAAS,kBAAM6B,KAApD,SACI,wBAASjC,UAAU,kBAAnB,SAAqC,qBAAKA,UAAU,gBAAgBC,IAAKiE,QAE7E,qBAAKlE,UAAU,4BAAf,SACI,wBAAQA,UAAU,kBAAlB,SAAqC,qBAAKA,UAAU,qBAAqBC,IAAKkE,EAAQ/D,QAAS,kBAAMqC,eAG7G,qBAAKzC,UAAU,qBAAf,SACI,wBAASI,QAAS,kBAAM2B,GAAmB,IAA3C,uC,uBC/NrBqC,MAlBf,SAAkBrE,GACd,OACI,mCACI,oBAAIC,UAAU,cAAd,SACI,eAAC,IAAD,CAAMA,UAAU,oBAAoB6D,GAAI9D,EAAMsE,KAAMC,OAAO,SAA3D,UACI,wBAAQtE,UAAU,wBAAwB,gBAAeD,EAAMwE,MAA/D,SACI,qBAAKtE,IAAKF,EAAME,IAAK+D,IAAI,GAAGhE,UAAU,uBAE1C,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,oBAAd,SAAmCD,EAAMyE,iB,QCYlDC,MApBf,WACI,OACI,sBAAKzE,UAAU,QAAf,UACI,0DACA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,eAAd,SACI,cAAC,EAAD,CACAC,IAAI,wBACJuE,KAAK,+DACLD,MAAM,cACNF,KAAM,CAAEK,SAAU,uC,QCX3B,SAASC,IACpB,OACI,8BACI,wBACI3E,UAAU,kBACV4E,cAAc,MACdC,GAAG,kBACHC,MAAM,kBACNC,YAAY,KACZC,MAAM,uDACN/E,IAAI,2G,oBC+CLgF,MAtDf,WACI,IAAQC,EAAkB3E,cAAlB2E,cAGR,EAAsCpE,mBAAS,GAA/C,mBAAOqE,EAAP,KAAoBC,EAApB,KACA,EAAwCtE,mBAAS,GAAjD,mBAAOuE,EAAP,KAAqBC,EAArB,KAGMC,EAAS,uCAAG,sCAAArD,EAAA,6DAERsD,EAAW,CACbC,QAAS,6CACTrC,MAAO,MACPsC,SAAU,kBALA,SAOS9E,UAAQ+E,QAAQC,MAAMC,cAAcL,GAP7C,cAORM,EAPQ,OAQRC,EAAUD,EAASE,SAASxC,QAAQ,IAC1CrB,QAAQC,IAAR,mBAAwB2D,IACxBT,EAAgBS,GACVE,EAAW,CACbR,QAAS,6CACTrC,MAAO,MACPsC,SAAU,cAdA,UAgBS9E,UAAQ+E,QAAQC,MAAMC,cAAcI,GAhB7C,QAgBRC,EAhBQ,OAiBRC,EAASD,EAASF,SAASxC,QAAQ,IACzCrB,QAAQC,IAAR,kBAAuB+D,IACvBf,EAAee,GAnBD,4CAAH,qDA8Bf,OARAzC,qBAAU,WACHwB,GACFK,MAEA,CAACL,IAME,qBAAKlF,UAAU,cAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,aAAaC,IAAK8D,IADrC,IACoDoB,KAEpD,sBAAKnF,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAaC,IAAKgE,IADrC,IACqDoB,W,QC6D1De,MAlGf,WAEI,MAAgC7F,cAChC,GADA,EAAQ2E,cAAR,EAAuBxE,KACII,sBAA3B,mBACA,GADA,UACuCA,sBAAvC,mBACA,GADA,UAC6BA,mBAAS,IAAtC,mBAoCA,OApCA,UAsCI,sBAAKd,UAAU,sBAAf,UACI,uBAAOC,IAAI,qBAAqBoG,UAAU,iBAAiBC,UAAQ,EAACC,MAAI,EAACC,OAAK,IAC1E,sBAAKxG,UAAU,iBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,mBAAf,UAEI,oBAAIA,UAAU,YAAd,2DACA,mBAAGA,UAAU,YAAb,+FAEJ,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAM6D,GAAG,YAAY7D,UAAU,uBAA/B,kCACA,cAAC,IAAD,CAAM6D,GAAG,YAAY7D,UAAU,uBAA/B,iCAEJ,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,6DAGA,2FAKJ,cAAC,EAAD,OAKR,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,eAAd,iBAAiC,qBAAKA,UAAU,aAAaC,IAAK8D,IAAlE,oBACA,wBACI9D,IAAI,uGAGZ,sBAAKD,UAAU,gBAAf,UACI,qBAAIA,UAAU,eAAd,iBAAiC,qBAAKA,UAAU,aAAaC,IAAKgE,IAAlE,mBACA,wBACIhE,IAAI,uGAKxB,cAAC,EAAD,IACI,qBAAKD,UAAU,YAAf,SACI,cAAC,IAAD,CAAYyG,MAAO,IAAKC,QAAQ,kBC7FrCC,MARf,WACI,OACI,mCACI,cAAC,EAAD,O,QC8BGC,MA9Bf,WAGI,OACI,sBAAK5G,UAAU,sBAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,uBAAf,UACA,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,eAAd,iBAAiC,qBAAKA,UAAU,aAAaC,IAAK8D,IAAlE,iCACA,wBACI9D,IAAI,kGACJ4G,OAAO,QACPhC,GAAG,YAGX,sBAAK7E,UAAU,gBAAf,UACI,qBAAIA,UAAU,eAAd,iBAAiC,qBAAKA,UAAU,aAAaC,IAAKgE,IAAlE,oCACA,wBACIhE,IAAI,6FACJ4G,OAAO,QACPhC,GAAG,qBC5BZ,G,OAAA,IAA0B,8CCA1B,G,QAAA,IAA0B,0CC+M1BiC,MAzMf,SAA0B/G,GAEtB,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACNmG,EAAaC,cAAbD,SAER,EAA0BjG,qBAA1B,mBAAOgE,EAAP,KAAcmC,EAAd,KACA,EAA8BnG,qBAA9B,mBAAOoG,EAAP,KAAgBC,EAAhB,KACA,EAAsCrG,qBAAtC,mBAAOsG,EAAP,KAAoBC,EAApB,KAEA,EAA8BvG,qBAA9B,mBAAOwG,EAAP,KAAgBC,EAAhB,KACA,EAA8BzG,qBAA9B,mBAAO0G,EAAP,KAAgBC,EAAhB,KACA,EAAgC3G,qBAAhC,mBAAO4G,EAAP,KAAiBC,EAAjB,KACA,EAA8B7G,qBAA9B,mBAAO8G,EAAP,KAAgBC,EAAhB,KACA,EAAgC/G,qBAAhC,mBAAOgH,EAAP,KAAiBC,EAAjB,KACA,EAA8BjH,qBAA9B,mBAAOkH,EAAP,KAAgBC,EAAhB,KACA,EAA4BnH,qBAA5B,mBAAOoH,EAAP,KAAeC,EAAf,KACA,EAA4BrH,oBAAS,GAArC,oBAAOsH,GAAP,MAAeC,GAAf,MAGA,GAAwCvH,oBAAS,GAAjD,qBAAOwH,GAAP,MAAqBC,GAArB,MACA,GAA0CzH,qBAA1C,qBAAO0H,GAAP,MAAsBC,GAAtB,MAGA,GAAkC3H,qBAAlC,qBAAO4H,GAAP,MAAkBC,GAAlB,MACA,GAA0C7H,qBAA1C,qBAAO8H,GAAP,MAAsBC,GAAtB,MACA,GAAuD/H,mBAASgI,GAAhE,qBAAQC,GAAR,MAA6BC,GAA7B,MAEMC,GAAgB,uCAAG,8CAAA/G,EAAA,sEAEXgH,EAAatI,EAAQuI,OAAOC,OAAO,YACnCC,EAAU,IAAIH,EACdI,EAAOZ,GACPa,EAAOX,GACPY,EAAO,IAAIC,KANA,SAOS7I,EAAQ8I,KAAKC,UAPtB,cAOXC,EAPW,OAQXjI,EAAWiI,EAAYrH,WAAWZ,SAClCF,EAAamI,EAAYrH,WAAWd,WAAWe,KAC/CqH,EAAcD,EAAYrH,WAAWsH,aAV1B,UAWI9C,EAASwC,EAAMD,EAAM,CAAEQ,UAAU,IAXrC,eAWbC,EAXa,OAYjBV,EAAQW,IAAI,eAAgBD,GAC5BV,EAAQW,IAAI,SAAU5B,IACtBiB,EAAQW,IAAI,QAASlF,GACrBuE,EAAQW,IAAI,UAAWJ,GACvBP,EAAQW,IAAI,YAAarI,GACzB0H,EAAQW,IAAI,oBAAqBvI,GACjC4H,EAAQW,IAAI,UAAW9C,GACvBmC,EAAQW,IAAI,cAAe5C,GAC3BiC,EAAQW,IAAI,OAAQR,EAAKS,sBACzBZ,EAAQW,IAAI,YAAaH,GACzBR,EAAQW,IAAI,UAAuB,KAAZ1C,OAAiB4C,EAAY5C,GACpD+B,EAAQW,IAAI,UAAuB,KAAZxC,OAAiB0C,EAAY1C,GACpD6B,EAAQW,IAAI,WAAyB,KAAbtC,OAAkBwC,EAAYxC,GACtD2B,EAAQW,IAAI,UAAuB,KAAZpC,OAAiBsC,EAAYtC,GACpDyB,EAAQW,IAAI,WAAyB,KAAblC,OAAkBoC,EAAYpC,GACtDuB,EAAQW,IAAI,UAAuB,KAAZhC,OAAiBkC,EAAYlC,GACpDqB,EAAQW,IAAI,SAAqB,KAAX9B,OAAgBgC,EAAYhC,GA5BjC,UA6BXmB,EAAQc,OA7BG,QA8BAP,EAAYQ,SAAS,YAC7BC,IAAIhB,GACb3I,EAAKyJ,OACL1B,GAAiB,wBACjBF,IAAgB,GACfxI,EAAMuK,wBAAuB,GAnCb,kDAqCjBjI,MAAM,EAAD,IArCY,0DAAH,qDAkDtB,OACI,qCACI,qBAAKrC,UAAU,2BAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,aAAd,gCACA,sBAAMA,UAAU,WAAWI,QAAS,WAAOL,EAAMuK,wBAAuB,IAAxE,SAAiF,mBAAGxG,MAAM,6BAE9F,qBAAK9D,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAcC,IAAK8I,GAAqB/E,IAAI,OAE/D,qBAAKhE,UAAU,qBAAf,SACI,+BACI,sBAAKA,UAAU,OAAf,UACI,wBAAOuK,QAAQ,eAAevK,UAAU,aAAxC,iCAAyE,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACzE,uBAAOzK,UAAU,eAAe0K,KAAK,OAAOC,OAAO,mCAAmCC,SAAS,QAAQ/F,GAAG,eAAegG,UAAQ,EAACC,SAzB5I,SAAAC,GAClBpC,GAAaoC,EAAEzG,OAAO0G,MAAM,IAC5BnC,GAAiBkC,EAAEzG,OAAO0G,MAAM,GAAGzB,MACnCP,GAAuBiC,IAAIC,gBAAgBH,EAAEzG,OAAO0G,MAAM,KAC1DvC,GAAiB,aACjBF,IAAgB,aA0BA,qBAAKvI,UAAU,oBAAf,SACI,uBAAMA,UAAU,YAAhB,UAEI,sBAAKA,UAAU,sBAAf,6EAEI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,uBAAO0K,KAAK,QAAQ7F,GAAG,gBAAgB0E,KAAK,mBAAmBnJ,QAAS,kBAAMiI,IAAU,MACxF,uBAAOrI,UAAU,aAAjB,+BAIJ,sBAAKA,UAAU,iCAAf,UACI,uBAAO0K,KAAK,QAAQ7F,GAAG,WAAW0E,KAAK,mBAAmBnJ,QAAS,kBAAMiI,IAAU,MACnF,uBAAOrI,UAAU,aAAjB,+BAMZ,sBAAKA,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,yBAA0C,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBAC1C,uBAAOzK,UAAU,aAAamL,YAAY,iBAAiBC,MAAOtG,EAAO+F,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUpE,EAASoE,EAAMC,cAAcF,aAEvI,sBAAKpL,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,oBAAqC,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACrC,0BAAUc,KAAM,EAAGvL,UAAU,eAAemL,YAAY,yDAAyDK,UAAW,IAAKJ,MAAOlE,EAAS2D,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUlE,EAAWkE,EAAMC,cAAcF,aAEjN,sBAAKpL,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,wBAAyC,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACzC,0BAAUc,KAAM,EAAGvL,UAAU,eAAemL,YAAY,qEAAqEK,UAAW,IAAMJ,MAAOhE,EAAayD,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUhE,EAAegE,EAAMC,cAAcF,aAEtO,sBAAKpL,UAAU,sBAAf,UACI,uBAAOA,UAAU,aAAjB,qBACA,uBAAOA,UAAU,aAAamL,YAAY,mBAAmBC,MAAO9D,EAASwD,SAAU,SAACO,GAAD,OAAU9D,EAAW8D,EAAMC,cAAcF,aAEpI,sBAAMZ,MAAO,CAACC,MAAM,OAApB,8BAIR,sBAAKzK,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO5D,EAAS2D,YAAY,aAAaL,SAAU,SAACO,GAAD,OAAU5D,EAAW4D,EAAMC,cAAcF,eAG7I,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO1D,EAAUyD,YAAY,eAAeL,SAAU,SAACO,GAAD,OAAU1D,EAAY0D,EAAMC,cAAcF,eAGjJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAQA,UAAU,wBAAuBoL,MAAOxD,EAASuD,YAAY,oBAAoBL,SAAU,SAACO,GAAD,OAAUxD,EAAWwD,EAAMC,cAAcF,eAGpJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOtD,EAAUqD,YAAY,gCAAgCL,SAAU,SAACO,GAAD,OAAUtD,EAAYsD,EAAMC,cAAcF,eAGlK,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOpD,EAASmD,YAAY,8BAA8BL,SAAU,SAACO,GAAD,OAAUpD,EAAWoD,EAAMC,cAAcF,eAG9J,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,yBACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOlD,EAAQiD,YAAY,0BAA0BL,SAAU,SAACO,GAAD,OAAUlD,EAAUkD,EAAMC,cAAcF,kBAI5J,sBAAKpL,UAAU,sBAAf,UACI,wBAAQA,UAAU,OAAOI,QAAS,WAAKL,EAAMuK,wBAAuB,IAApE,wBACA,uBAAOI,KAAK,SAAS1K,UAAU,mBAAmBoL,MAAM,iBAAiBhL,QAAS6I,eAKjGX,IACD,cAAC,EAAD,CACAjI,QAASkI,GACTpI,QAASqI,SCMNiD,MAhMf,SAAiB1L,GAAQ,IAAD,IAEpB,EAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACd,EAAuDoG,cAAdD,GAAzC,EAAQ2E,MAAR,EAAeC,YAAf,EAA4BC,YAA5B,EAAyC7E,UAEzC,EAAoCjG,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAkCZ,mBAAS,IAA3C,mBAAO+K,EAAP,KAAkBC,EAAlB,KAEA,EAAoChL,mBAAS,GAA7C,mBAAOiL,EAAP,KAAmBC,EAAnB,KACA,EAAoClL,mBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEA,EAA4DT,oBAAS,GAArE,mBAAOmL,EAAP,KAA6BC,EAA7B,KACA,EAAkCpL,qBAAlC,mBAAO4H,EAAP,KAAkBC,EAAlB,KACA,EAA0C7H,qBAA1C,mBAAO8H,EAAP,KAAsBC,EAAtB,KAEA,EAAwC/H,oBAAS,GAAjD,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,qBAA1C,mBAAO0H,GAAP,KAAsBC,GAAtB,KASM0D,GAAa,uCAAG,WAAOpB,GAAP,mBAAA7I,EAAA,6DACZoH,EAAOZ,EACPa,EAAOX,EAFK,SAGG7B,EAASwC,EAAMD,EAAM,CAAEQ,UAAU,IAHpC,cAGdC,EAHc,OAIlBrJ,EAAKsJ,IAAI,aAAcD,GAJL,SAKZrJ,EAAKyJ,OALO,OAMlBzI,EAAchB,EAAK6B,WAAWd,WAAWe,MACzCiG,GAAiB,aACjBF,GAAgB,GARE,4CAAH,sDAWbjG,GAAa,uCAAG,sCAAAJ,EAAA,sEACUtB,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAD/C,cACZC,EADY,gBAEWvC,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAF7D,OAEZG,EAFY,OAGZC,EAAWH,EAAc/B,QAAd,SAAuB,GAAI,IACtCmC,EAAWF,EAAejC,QAAf,SAAwB,GAAI,IACvCA,EAAWkC,EAASE,QAAQ,GAC5BC,EAAaF,EAASC,QAAQ,GACpCwI,EAAc5K,GACdG,EAAckC,GARI,4CAAH,qDAWb2I,GAAgB,uCAAG,sBAAAlK,EAAA,sDACF,GAAd6J,GAAmC,GAAdzK,GACtBmH,GACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAGjBuI,GAAgB,IAEhBxI,EAAMsM,qBAAoB,GAXT,2CAAH,qDA2DtB,OAlBA3I,qBAAU,WACN,GAAIhD,EAAM,CAAC,IAAD,QAGC,IAKA,IAPP,GAAgD,qBAA7C,UAAOA,EAAK6B,kBAAZ,iBAAO,EAAiBd,kBAAxB,aAAO,EAA6Be,MACnCd,EAAc4K,QAEd5K,EAAa,UAAChB,EAAK6B,kBAAN,iBAAC,EAAiBd,kBAAlB,aAAC,EAA6Be,MAE/C,GAAkD,qBAA/C,UAAO9B,EAAK6B,kBAAZ,iBAAO,EAAiBgK,oBAAxB,aAAO,EAA+B/J,MACrCsJ,EAAaU,QAEbV,EAAY,UAACpL,EAAK6B,kBAAN,iBAAC,EAAiBgK,oBAAlB,aAAC,EAA+B/J,MAGlDF,QAED,CAtFQ,IA0FT,qCAEI,qBAAKtC,UAAU,4BAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,gBAAgBC,IAAK4L,EAAW7H,IAAI,OAEvD,sBAAKhE,UAAU,iBAAf,UACI,sBAAKA,UAAU,wBAAuBI,QAAS,kBAAM8L,GAA4B,IAAjF,UACI,qBAAKlM,UAAU,cAAcC,IAAKwB,EAAYuC,IAAI,GAAGa,GAAG,eACxD,qBAAK7E,UAAU,uBAAf,SACQ,mBAAG8D,MAAM,6BAGrB,sBAAK9D,UAAU,uBAAf,UACI,qBAAIA,UAAU,wBAAd,qBAAwCU,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAM6B,kBAA9C,aAAwC,EAAkBZ,SAA1D,OACA,mBAAG3B,UAAU,mBAAb,gBAAiCU,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAM6B,kBAAvC,aAAiC,EAAkBkK,YAK9D,sBAAKzM,UAAU,uBAAf,UACG,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,8BAAI+L,EAAJ,aACA,qBAAK/L,UAAU,uBAAuBC,IAAK8D,EAAYC,IAAI,QAE/D,sBAAKhE,UAAU,wBAAf,UACI,8BAAIsB,EAAJ,aACA,qBAAKtB,UAAU,uBAAuBC,IAAKgE,EAAaD,IAAI,aAIxE,sBAAKhE,UAAU,sBAAf,UACI,yBAAQA,UAAU,6BAA6BI,QAhFxC,WAAO,IAAD,EACV,GAAd2L,GAAmC,GAAdzK,GACtBmH,GACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAIjBuI,GAAgB,KAEhB,UAAC7H,EAAK6B,kBAAN,aAAC,EAAiBmK,gBAUlB3M,EAAM4M,uBAAsB,IATxBlE,GACI,mCACJ,qBAAKzI,UAAU,uBAAf,wEAKAuI,GAAgB,KA4DR,UACA,mBAAGzE,MAAM,wBACL,wDAEJ,yBAAQ9D,UAAU,2BAA2BI,QAASgM,GAAtD,UACA,mBAAGtI,MAAM,eACL,iEAMfmI,GACD,qBAAKjM,UAAU,4BAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,sCAAf,UACA,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,uBAAd,sCACA,sBAAMA,UAAU,WAAWI,QAAS,WAAO8L,GAA4B,IAAvE,SAAgF,mBAAGpI,MAAM,6BAE7F,qBAAK9D,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAcC,IAAKwB,EAAYuC,IAAI,OAElD,sBAAMhE,UAAU,uBAAhB,SACI,uBAAM4M,SAAUT,GAAhB,UACI,sBAAKnM,UAAU,OAAf,UACI,uBAAOuK,QAAQ,eAAevK,UAAU,aAAxC,+BACA,uBAAOA,UAAU,eAAe0K,KAAK,OAAOC,OAAO,UAAUC,SAAS,QAAQ/F,GAAG,eAAeiG,SAtJ1G,SAAAC,GAClBpC,EAAaoC,EAAEzG,OAAO0G,MAAM,IAC5BnC,EAAiBkC,EAAEzG,OAAO0G,MAAM,GAAGzB,YAsJX,sBAAKvJ,UAAU,4BAAf,UACI,wBAAQA,UAAU,OAAOI,QAAS,WAAK8L,GAA4B,IAAnE,mBACA,uBAAOxB,KAAK,SAASU,MAAM,SAASpL,UAAU,gCAAgCI,QAAS+L,oBAS9G7D,GACD,cAAC,EAAD,CACAjI,QAASkI,EACTpI,QAASqI,S,QCDNqE,MA/Lf,SAAuB9M,GAEnB,MAAuCQ,cAA/BG,EAAR,EAAQA,KAAMoM,EAAd,EAAcA,YACd,GADA,EAA2BlM,QAC4BoG,eAAdD,GAAzC,EAAQ2E,MAAR,EAAeC,YAAf,EAA4BC,YAA5B,EAAyC7E,UAEzC,EAAwCjG,oBAAS,GAAjD,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,qBAA1C,mBAAO0H,EAAP,KAAsBC,EAAtB,KAEA,EAA0C3H,qBAA1C,mBAAOiM,EAAP,KAAsBC,EAAtB,KACA,EAAkDlM,qBAAlD,mBAAOmM,EAAP,KAA0BC,EAA1B,KACA,EAAwCpM,qBAAxC,mBAAOyL,EAAP,KAAqBY,EAArB,KAEA,EAAgCrM,qBAAhC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAwCd,qBAAxC,mBAAOsM,EAAP,KAAqBC,EAArB,KACA,EAA0BvM,qBAA1B,mBAAOwM,EAAP,KAAcC,EAAd,KACA,EAA4BzM,qBAA5B,mBAAO0M,EAAP,KAAeC,EAAf,KACA,EAAsB3M,qBAAtB,mBAAO2L,EAAP,KAAYiB,EAAZ,KACA,EAA8B5M,qBAA9B,oBAAOwG,GAAP,MAAgBC,GAAhB,MACA,GAA8BzG,qBAA9B,qBAAO0G,GAAP,MAAgBC,GAAhB,MACA,GAAgC3G,qBAAhC,qBAAO4G,GAAP,MAAiBC,GAAjB,MACA,GAA8B7G,qBAA9B,qBAAO8G,GAAP,MAAgBC,GAAhB,MACA,GAAgC/G,qBAAhC,qBAAOgH,GAAP,MAAiBC,GAAjB,MACA,GAA8BjH,qBAA9B,qBAAOkH,GAAP,MAAgBC,GAAhB,MACA,GAA4BnH,qBAA5B,qBAAOoH,GAAP,MAAeC,GAAf,MAuBAzE,qBAAU,WACFhD,GArBoB,WAAO,IAAD,EAEZ,6BADE,UAAIA,EAAK6B,kBAAT,aAAI,EAAiBmK,kBAErC9K,EAAW,UAAClB,EAAK6B,kBAAN,aAAC,EAAiBZ,UAC7BwL,EAAe,UAACzM,EAAK6B,kBAAN,iBAAC,EAAiBgK,oBAAlB,aAAC,EAA+B/J,MAC/C6K,EAAe,UAAC3M,EAAK6B,kBAAN,aAAC,EAAiB6K,cACjCG,EAAQ,UAAC7M,EAAK6B,kBAAN,aAAC,EAAiB+K,OAC1BG,EAAS,UAAC/M,EAAK6B,kBAAN,aAAC,EAAiBiL,QAC3BE,EAAM,UAAChN,EAAK6B,kBAAN,aAAC,EAAiBkK,KACxBlF,GAAU,UAAC7G,EAAK6B,kBAAN,aAAC,EAAiB+E,SAC5BG,GAAU,UAAC/G,EAAK6B,kBAAN,aAAC,EAAiBiF,SAC5BG,GAAW,UAACjH,EAAK6B,kBAAN,aAAC,EAAiBmF,UAC7BK,GAAW,UAACrH,EAAK6B,kBAAN,aAAC,EAAiBuF,UAC7BD,GAAU,UAACnH,EAAK6B,kBAAN,aAAC,EAAiBqF,SAC5BK,GAAU,UAACvH,EAAK6B,kBAAN,aAAC,EAAiByF,SAC5BG,GAAS,UAACzH,EAAK6B,kBAAN,aAAC,EAAiB2F,SAO3ByF,KAEH,CA1BQ,IA6Bb,IAAMC,GAAU,uCAAG,sBAAA1L,EAAA,yDACG,KAAbP,EADU,iEAITmL,EAAY,CACdnL,SAAuB,KAAbA,OAAkBuI,EAAYvI,EACxCyL,aAA+B,KAAjBA,OAAsBlD,EAAYkD,EAChDE,MAAiB,KAAVA,OAAepD,EAAYoD,EAClCE,OAAmB,KAAXA,OAAgBtD,EAAYsD,EACpCf,IAAa,KAARA,OAAavC,EAAYuC,EAC9BnF,QAAqB,KAAZA,QAAiB4C,EAAY5C,GACtCE,QAAqB,KAAZA,QAAiB0C,EAAY1C,GACtCE,SAAuB,KAAbA,QAAkBwC,EAAYxC,GACxCE,QAAqB,KAAZA,QAAiBsC,EAAYtC,GACtCE,SAAuB,KAAbA,QAAkBoC,EAAYpC,GACxCE,QAAqB,KAAZA,QAAiBkC,EAAYlC,GACtCE,OAAmB,KAAXA,QAAgBgC,EAAYhC,GACpCwE,gBAAgB,IAjBL,OAmBfjE,EAAiB,oBACjBF,GAAgB,GApBD,2CAAH,qDA4BRsF,GAAiB,uCAAG,gCAAA3L,EAAA,sEAElBoH,EAAOyD,EACPxD,EAAO0D,EACb9K,QAAQC,IAAI,GAJY,SAKH2E,EAASwC,EAAMD,EAAM,CAAEQ,UAAU,IAL9B,cAKpBC,EALoB,OAMxB5H,QAAQC,IAAI,GACZ1B,EAAKsJ,IAAI,eAAgBD,GAPD,UAQlBrJ,EAAKyJ,OARa,QASxBgD,EAAgBzM,EAAK6B,WAAWgK,aAAa/J,MATrB,kDAWpBL,QAAQC,IAAR,MAXoB,0DAAH,qDAezB,OACI,qCACI,qBAAKpC,UAAU,4BAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,2BAAf,UACA,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,uBAAd,8BACA,sBAAMA,UAAU,WAAWI,QAAS,WAAOL,EAAM+N,sBAAqB,IAAtE,SAA+E,mBAAGhK,MAAM,6BAE5F,qBAAK9D,UAAU,iCAAf,SACI,qBAAKA,UAAU,uBAAuBC,IAAKsM,EAAcvI,IAAI,OAE7D,uBAAMhE,UAAU,uBAAhB,UACI,uBAAM4M,SAAUiB,GAAhB,UACI,sBAAK7N,UAAU,OAAf,UACI,uBAAOuK,QAAQ,eAAevK,UAAU,aAAxC,6DACA,uBAAOA,UAAU,eAAe0K,KAAK,OAAOC,OAAO,UAAUC,SAAS,QAAQ/F,GAAG,eAAeiG,SApCtG,SAAAC,GACtBiC,EAAiBjC,EAAEzG,OAAO0G,MAAM,IAChCkC,EAAqBnC,EAAEzG,OAAO0G,MAAM,GAAGzB,YAoCf,uBAAOmB,KAAK,SAASU,MAAM,SAASpL,UAAU,4BAA4BI,QAASyN,QAEvF,uBAAO7N,UAAU,aAAjB,sBACA,uBAAOA,UAAU,aAAamL,YAAY,gBAAgBC,MAAOzJ,EAAUkJ,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUzJ,EAAYyJ,EAAMC,cAAcF,UACxI,uBAAOpL,UAAU,aAAjB,sBACA,uBAAOA,UAAU,aAAamL,YAAY,gBAAgBC,MAAOgC,EAActC,SAAU,SAACO,GAAD,OAAUgC,EAAgBhC,EAAMC,cAAcF,UACvI,uBAAOpL,UAAU,aAAjB,qBACA,uBAAOA,UAAU,aAAamL,YAAY,mBAAmBC,MAAO9D,GAASwD,SAAU,SAACO,GAAD,OAAU9D,GAAW8D,EAAMC,cAAcF,UAChI,uBAAOpL,UAAU,aAAjB,oBACA,uBAAOA,UAAU,aAAamL,YAAY,yDAAyDK,UAAW,GAAIJ,MAAOoC,EAAQ1C,SAAU,SAACO,GAAD,OAAUoC,EAAUpC,EAAMC,cAAcF,UACnL,uBAAOpL,UAAU,aAAjB,iBACA,0BAAUuL,KAAM,EAAGvL,UAAU,eAAe6K,UAAQ,EAACM,YAAY,8BAA8BK,UAAW,IAAKJ,MAAOqB,EAAK3B,SAAU,SAACO,GAAD,OAAUqC,EAAOrC,EAAMC,cAAcF,UAC1K,uBAAOpL,UAAU,aAAjB,mBACA,0BAAUuL,KAAM,EAAGvL,UAAU,eAAemL,YAAY,wDAAwDK,UAAW,IAAMJ,MAAOkC,EAAOxC,SAAU,SAACO,GAAD,OAAUkC,EAASlC,EAAMC,cAAcF,UAEpM,sBAAKpL,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO5D,GAAS2D,YAAY,aAAaL,SAAU,SAACO,GAAD,OAAU5D,GAAW4D,EAAMC,cAAcF,eAG7I,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO1D,GAAUyD,YAAY,eAAeL,SAAU,SAACO,GAAD,OAAU1D,GAAY0D,EAAMC,cAAcF,eAGjJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAQA,UAAU,wBAAuBoL,MAAOxD,GAASuD,YAAY,oBAAoBL,SAAU,SAACO,GAAD,OAAUxD,GAAWwD,EAAMC,cAAcF,eAGpJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOtD,GAAUqD,YAAY,gCAAgCL,SAAU,SAACO,GAAD,OAAUtD,GAAYsD,EAAMC,cAAcF,eAGlK,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOpD,GAASmD,YAAY,8BAA8BL,SAAU,SAACO,GAAD,OAAUpD,GAAWoD,EAAMC,cAAcF,eAG9J,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,yBACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOlD,GAAQiD,YAAY,0BAA0BL,SAAU,SAACO,GAAD,OAAUlD,GAAUkD,EAAMC,cAAcF,kBAI5J,sBAAKpL,UAAU,SAAf,UACI,wBAAQA,UAAU,OAAOI,QAAS,WAAOL,EAAM+N,sBAAqB,IAApE,wBACA,uBAAO9N,UAAU,0BAA0BI,QAASwN,GAAYlD,KAAK,SAASU,MAAM,8BAMnG9C,GACD,cAAC,EAAD,CACAjI,QAASkI,EACTpI,QAASqI,QC3INuF,MA9Cf,WAAoB,IAAD,sBAEPrN,EAASH,cAATG,KAER,OACI,qBAAKV,UAAU,4BAAf,SACI,sBAAKA,UAAU,0BAAf,UACA,oBAAGA,UAAU,mBAAb,UAAgC,mBAAG8D,MAAM,0BAAzC,OAAsEpD,QAAtE,IAAsEA,GAAtE,UAAsEA,EAAM6B,kBAA5E,aAAsE,EAAkB6K,aAAxF,OACA,eAAC,IAAD,CAAMpN,UAAU,kBAAkB6D,GAAI,CAAEa,SAAQ,OAAGhE,QAAH,IAAGA,GAAH,UAAGA,EAAM6B,kBAAT,aAAG,EAAkB+E,SAAYhD,OAAO,SAAS,aAAW,UAA5G,UAAsH,mBAAGR,MAAM,gBAA/H,OAAkJpD,QAAlJ,IAAkJA,GAAlJ,UAAkJA,EAAM6B,kBAAxJ,aAAkJ,EAAkB+E,WAEhK,sBAAKtH,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,sBACA,mBAAGA,UAAU,4BAAb,gBAA0CU,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAM6B,kBAAhD,aAA0C,EAAkB+K,WAEhE,sBAAKtN,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,oBACA,mBAAGA,UAAU,4BAAb,gBAA0CU,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAM6B,kBAAhD,aAA0C,EAAkBiL,YAEhE,sBAAKxN,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,0BACA,sBAAKA,UAAU,8BAAf,UACI,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,uBAAD,iBAA2BhE,EAAK6B,kBAAhC,aAA2B,EAAiBiF,UAAelD,OAAO,SAAS,aAAW,UAAlJ,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,+BAA+B6D,GAAI,CAAEa,SAAS,gBAAD,iBAAoBhE,EAAK6B,kBAAzB,aAAoB,EAAiBmF,WAAgBpD,OAAO,SAAS,aAAW,WAA7I,SACA,mBAAGtE,UAAU,sBAEb,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,sBAAD,iBAA0BhE,EAAK6B,kBAA/B,aAA0B,EAAiBqF,UAAetD,OAAO,SAAS,aAAW,UAAjJ,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,+BAA+B6D,GAAI,CAAEa,SAAS,2BAAD,iBAA+BhE,EAAK6B,kBAApC,aAA+B,EAAiByL,WAAgB1J,OAAO,SAAS,aAAW,WAAxJ,SACA,mBAAGtE,UAAU,sBAEb,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,yBAAD,iBAA6BhE,EAAK6B,kBAAlC,aAA6B,EAAiByF,UAAe1D,OAAO,SAAS,aAAW,UAApJ,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,6BAA6B6D,GAAI,CAAEa,SAAS,qBAAD,iBAAyBhE,EAAK6B,kBAA9B,aAAyB,EAAiB2F,SAAc5D,OAAO,SAAS,aAAW,SAA9I,SACA,mBAAGtE,UAAU,gCC0BtBiO,MAjEf,SAAkBlO,GACd,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACd,EAAgCE,oBAAS,GAAzC,mBAAOoN,EAAP,KAAiBC,EAAjB,KAGMC,EAAW,uCAAG,kCAAAlM,EAAA,6DAChBiM,GAAY,GACNE,EAAUzN,EAAQuI,OAAOC,OAAO,aAChCkF,EAAQ,IAAI1N,EAAQ2N,MAAMF,IAC1BG,QAAQ,QAASzO,EAAM0O,cAJb,SAKMH,EAAMI,OALZ,cAKVrF,EALU,gBAMUzI,EAAQ8I,KAAKC,UANvB,cAMVC,EANU,OAOCA,EAAYQ,SAAS,sBAC7BC,IAAIhB,GARG,UASV3I,EAAKyJ,OATK,QAUhB9H,MAAM,uBAVU,4CAAH,qDAaXsM,EAAa,uCAAG,kCAAAzM,EAAA,6DAClBiM,GAAY,GACNE,EAAUzN,EAAQuI,OAAOC,OAAO,aAChCkF,EAAQ,IAAI1N,EAAQ2N,MAAMF,IAC1BO,OAAO,SACbN,EAAME,QAAQ,QAASzO,EAAM0O,cALX,SAMIH,EAAMI,OANV,cAMZrF,EANY,iBAOQzI,EAAQ8I,KAAKC,UAPrB,eAOZC,EAPY,OAQDA,EAAYQ,SAAS,sBAC7ByE,OAAOxF,GATE,UAUZ3I,EAAKyJ,OAVO,QAWlB9H,MAAM,oBAXY,4CAAH,qDAcbyM,EAAa,uCAAG,sCAAA5M,EAAA,6DACZxB,EAAOE,EAAQ8I,KAAKC,UACpBS,EAAW1J,EAAK0J,SAAS,uBACzBkE,EAAQlE,EAASkE,SACjBE,QAAQ,QAAUzO,EAAM0O,cAC9BH,EAAMS,OAAO,oBALK,SAMST,EAAMI,OANf,OAQlB,IAFMM,EANY,OAOZC,EAAU,GACPC,EAAI,EAAGA,EAAIF,EAAaG,SAAUD,EACrCD,EAAQG,KAAK,CACb,MAASJ,EAAaE,GAAG3M,WAAWuC,QAGvCmK,EAAQ,IACPd,GAAY,GAdE,4CAAH,qDA0BnB,OARAzK,qBAAU,WACHhD,GACHoO,MAGA,CApDS,OAwDT,qBAAK9O,UAAU,WAAf,SACKkO,EAAW,mBAAGpK,MAAM,kBAAkB1D,QAAS,kBAAMuO,OAAyB,mBAAG7K,MAAM,kBAAkB1D,QAAS,kBAAMgO,U,QCxBtHiB,MApCf,SAAgBtP,GACZ,MAAyCQ,cAA3BK,GAAd,EAAQF,KAAR,EAAcE,SAASsE,EAAvB,EAAuBA,cACjBJ,EAAS/E,EAAM+E,MAGrB,EAA4BhE,mBAAS,GAArC,mBAAOwO,EAAP,KAAeC,EAAf,KACA,EAAsCzO,mBAAU,GAAhD,mBAAO0O,EAAP,KAAoBC,EAApB,KAEMC,EAAW,uCAAG,WAAM3P,GAAN,iBAAAmC,EAAA,6DACVyN,EAAS,CAAElB,aAAc3J,GADf,SAEYlE,EAAQgP,MAAMC,IAAI,oBAAqBF,GAFnD,OAGa,qBADvBG,EAFU,UAIZL,EAAeK,EAAc,IAC7BP,EAAUO,EAAc,KALZ,2CAAH,sDAiBjB,OARApM,qBAAU,WACHwB,GACHwK,MAGA,CAACxK,IAID,sBAAKlF,UAAU,SAAf,UACK,YAAI+P,MAAM,IAAIC,KAAK,SAAAC,GAChB,OAAO,mBAAGnM,MAAM,mBAEpB,sBAAM9D,UAAU,SAAhB,SAA0BsP,IAC1B,uBAAMtP,UAAU,eAAhB,UAAgC,IAAhC,IAAsCwP,EAAtC,WCoBGU,MA3Cf,SAAqBnQ,GACjB,IAAQoQ,EAAQC,cAARD,IACFE,EAAYtQ,EAAMuQ,WAExB,OACI,mCACI,sBAAKtQ,UAAU,iBAAf,UACQ,cAAC,IAAD,CAAMA,UAAU,aAAa6D,GAAE,UAAKsM,EAAL,YAAYpQ,EAAMsE,MAAjD,SACI,wBAAQrE,UAAU,gBAAgBuQ,SAAUxQ,EAAMwE,MAAlD,SACI,qBAAKvE,UAAU,cAAcC,IAAKF,EAAME,UAGhD,sBAAKD,UAAU,YAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,6BAAKD,EAAM+E,QACTuL,GACE,8BACI,mBAAGvM,MAAM,yBAAT,sBAIZ,sBAAK9D,UAAU,kBAAf,UACG,qBAAMC,IAAKF,EAAMyQ,kBAAoBxQ,UAAU,wBAAwB,IAAKD,EAAM4B,SAAU,UAAW5B,EAAM0Q,aAEhH,qBAAKzQ,UAAU,kBAAf,SACKD,EAAMmH,aAGf,qBAAKlH,UAAU,OACf,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CACC8E,MAAS/E,EAAM+E,QAEhB,cAAC,EAAD,CACA2J,aAAgB1O,EAAM0O,wB,sBCF/BiC,ICmDAC,EA3FE,SAAC5Q,GACd,IAAO6Q,EAAwB7Q,EAAxB6Q,SAAUC,EAAc9Q,EAAd8Q,KAAMtK,EAAQxG,EAARwG,KAEvB,EAAwCzF,mBAAS,GAAjD,mBAAOgQ,EAAP,KAAqBC,EAArB,KACA,EAA4BjQ,mBAAS8P,EAASzB,QAA9C,mBAAOA,EAAP,KAAe6B,EAAf,KAEA,EAAsClQ,mBAASyF,GAAQqK,EAASzB,OAAS0B,GAAzE,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAkDpQ,oBAAS,GAA3D,mBAAOqQ,EAAP,KAA0BC,EAA1B,KAwDA,OAbA1N,qBAAU,WACNsN,EAAUJ,EAASzB,QACnB+B,EAAgB3K,GAAQqK,EAASzB,OAAS0B,KAC3C,CAACD,EAAUrK,EAAMsK,IAEpBnN,qBAAU,WACFuN,IACIH,IAAiBD,GAAQC,IAAiB3B,GAC1CiC,GAAqB,MAG9B,CAACN,EAAcG,EAAaJ,EAAM1B,IAGjC,qBAAKnP,UAAU,qBAAf,SACI,sBAAKA,UAAU,mBAAf,UACA,wBAAQA,UAAU,aAAaI,QAnD1B,YACL6Q,GAAeH,EAAe,IAC9BC,GAAgB,SAAAM,GAAS,OAAIA,EAAY,MAiDzC,SACA,mBAAGvN,MAAM,mCAEL,qBAAK9D,UAAU,2BAAf,SACI,sBAAKA,UAAS,gCAA2B6Q,GAAQrG,MAAO,CAAE8G,UAAU,eAAD,OAAiBR,GAAgB,IAAKD,GAAtC,MAC/DU,WAAaJ,OAA6BjH,EAAT,QACjCsH,gBAAiB,WAlD7BP,IACqB,IAAjBH,GACAM,GAAqB,GACrBL,EAAgB5B,IACT2B,IAAiB3B,EAAS0B,IACjCO,GAAqB,GACrBL,EAAgBF,MA0CZ,UAIM1B,EAAS0B,GAAQI,GAzCf,WAEpB,IADA,IAAIQ,EAAS,GACJC,EAAQ,EAAGA,EAAQb,EAAMa,IAC9BD,EAAOrC,KAAKwB,EAASzB,EAAS,EAAIuC,IAGtC,OADAD,EAAOE,UACAF,EAoCSG,GAEChB,EACCzB,EAAS0B,GAAQI,GApCf,WAEpB,IADA,IAAIQ,EAAS,GACJC,EAAQ,EAAGA,EAAQb,EAAMa,IAC9BD,EAAOrC,KAAKwB,EAASc,IAEzB,OAAOD,EAgCaI,QAIR,wBAAQzR,QA1EX,YACL6Q,GAAeH,EAAgB3B,EAAS0B,IACxCE,GAAgB,SAAAM,GAAS,OAAIA,EAAY,MAwEVrR,UAAU,cAAjC,SACA,mBAAG8D,MAAM,0CCnBdgO,MA9Df,SAAwB/R,GAGJqQ,cAARD,IAAR,IACME,EAAYtQ,EAAMuQ,WAClBlI,EAAUrI,EAAMqI,OAEtB,OAEI,sBAAKpI,UAAU,2BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CACIA,UAAU,mBACV6D,GAAE,oBAAe9D,EAAMsE,MAF3B,SAIQ,qBAAKrE,UAAU,mBAAmBC,IAAKF,EAAME,UAGzD,sBAAKD,UAAU,oBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,6BAAKD,EAAM+E,QACX,sBAAK9E,UAAU,sBAAf,UACKoI,GACG,qBAAKpI,UAAU,qBAAf,SACI,mBAAG8D,MAAM,oBAAT,qBAGNsE,GACE,qBAAKpI,UAAU,qBAAf,SACI,mBAAG8D,MAAM,gBAAT,qBAGPuM,GACG,qBAAKrQ,UAAU,qBAAf,SACI,mBAAG8D,MAAM,yBAAT,yBAKhB,sBAAK9D,UAAU,uBAAf,UACI,qBAAKA,UAAU,2BAAf,SAA0C,qBAAMC,IAAKF,EAAMyQ,kBAAoBxQ,UAAU,8BACzF,qBAAKA,UAAU,4BAAf,SAA4CD,EAAM4B,cAEtD,qBAAK3B,UAAU,uBAAf,SACKD,EAAMmH,aAGf,sBAAKlH,UAAU,sBAAf,UACI,cAAC,EAAD,CACI8E,MAAS/E,EAAM+E,QAEnB,qBAAK9E,UAAU,oBAAf,SACKD,EAAM0Q,YAEX,cAAC,EAAD,CACAhC,aAAgB1O,EAAM+E,e,OCiBvBiN,MAnEf,WAEE,MAA0BxR,cAAZK,GAAd,EAAQF,KAAR,EAAcE,SAEd,EAAkCE,mBAAS,CAAC,KAA5C,mBAAQkR,EAAR,KAAkBC,EAAlB,KACA,EAAoCnR,mBAAS,GAA7C,mBAAOoR,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,uCAAG,8BAAAlQ,EAAA,6DACbyN,EAAS,CAAE0C,KAAOH,GADL,SAEGtR,EAAQgP,MAAMC,IAAI,mBAAoBF,GAFzC,OAEbV,EAFa,OAGnBgD,EAAYhD,GACZ9M,QAAQC,IAAI8P,GACZ/P,QAAQC,IAAI6M,GALO,2CAAH,qDA2BhB,OANFvL,qBAAU,WACR0O,MAEA,CAACF,IAIC,mCACE,cAAC,IAAMI,SAAP,UAEE,sBAAKtS,UAAU,yBAAf,UACE,qBAAKA,UAAU,0BAAf,SACKgS,EAAShC,KAAI,SAAAuC,GAAQ,OAClB,qBAA0BvS,UAAU,mBAApC,SACE,cAAC,EAAD,CACA8E,MAAOyN,EAASzN,MAChBoC,QAASqL,EAASrL,QAClBjH,IAAKsS,EAASC,aACd7Q,SAAU4Q,EAAS5Q,SACnB6O,kBAAmB+B,EAAS9Q,WAC5BgP,UAAa8B,EAAS9B,UACtBlM,MAAOgO,EAAS5Q,SAChB0C,KAAMkO,EAASzN,MACfwL,WAAciC,EAASjC,cAVfiC,EAASzN,YAezB,sBAAK9E,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAkBI,QAAS,WAzCxC,GAAd8R,GAIHC,EADqBD,EAAa,IAsCtB,UAA8D,mBAAGpO,MAAM,6BAAvE,UACA,yBAAQ9D,UAAU,kBAAkBI,QAAS,WAjCzD+R,EADqBD,EAAa,IAkCtB,iBAAkE,mBAAGpO,MAAM,4C,QCV5E2O,MAxDf,SAAqB1S,GACjB,MAAyCQ,cAAjCG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASsE,EAAvB,EAAuBA,cACvB,EAA0BpE,qBAA1B,mBAAO4R,EAAP,KAAcC,EAAd,KACIC,EAAW7S,EAAM6S,QAGfC,EAAW,uCAAG,gCAAA3Q,EAAA,6DAChByQ,GAAS,GACHhD,EAAS,CAAEmD,YAAa/S,EAAM+S,aAFpB,SAGUlS,EAAQgP,MAAMC,IAAI,WAAYF,GAHxC,cAGVoD,EAHU,OAIhB5Q,QAAQC,IAAI2Q,GACZ5Q,QAAQC,IAAIuN,GALI,SAMU/O,EAAQ8I,KAAKC,UANvB,cAMVC,EANU,OAOCA,EAAYQ,SAAS,iBAC7BC,IAAI0I,GARG,UASVrS,EAAKyJ,OATK,QAUhB9H,MAAM,GAAD,OAAItC,EAAM+S,YAAV,sBAVW,4CAAH,qDAaXE,EAAa,uCAAG,gCAAA9Q,EAAA,6DAClByQ,GAAS,GACHhD,EAAS,CAAEmD,YAAa/S,EAAM+S,aAFlB,SAGQlS,EAAQgP,MAAMC,IAAI,WAAYF,GAHtC,cAGZoD,EAHY,OAIlB5Q,QAAQC,IAAI2Q,GACZ5Q,QAAQC,IAAIuN,GALM,SAMQ/O,EAAQ8I,KAAKC,UANrB,cAMZC,EANY,OAODA,EAAYQ,SAAS,iBAC7ByE,OAAOkE,GARE,UASZrS,EAAKyJ,OATO,QAUlB9H,MAAM,GAAD,OAAItC,EAAM+S,YAAV,wBAVa,4CAAH,qDAabG,EAAiB,uCAAG,4BAAA/Q,EAAA,6DAChByN,EAAS,CAACmD,YAAa/S,EAAM+S,aADb,SAEAlS,EAAQgP,MAAMC,IAAI,sBAAuBF,GAFzC,cAIX,IACPgD,GAAS,GALS,2CAAH,qDAiBvB,OARAjP,qBAAU,WACHwB,GACH+N,MAGA,CAAC/N,IAID,qBAAKlF,UAAU,WAAf,SACM0S,GAASE,EAAW,mBAAG9O,MAAM,eAAe1D,QAAS,kBAAM4S,OAAyB,mBAAGlP,MAAM,eAAe1D,QAAS,kBAAMyS,UCD1HK,MA1Cf,SAAqBnT,GACDqQ,cAARD,IAAR,IAEA,EAAgCrP,oBAAS,GAAzC,mBAAOoN,EAAP,KAAiBC,EAAjB,KAMA,OACI,mCACI,qBAAKnO,UAAU,yBAAf,SACQ,sBAAKA,UAAU,uBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,qBAAqB6D,GAAE,oBAAe9D,EAAM4B,UAA5D,SACI,wBAAQ3B,UAAU,wBAAwBuQ,SAAUxQ,EAAMwE,MAA1D,SACI,qBAAKvE,UAAU,mBAAmBC,IAAKF,EAAME,UAGrD,sBAAKD,UAAU,oBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,6BAAKD,EAAM4B,aAEf,qBAAK3B,UAAU,kBAAf,SACI,4BAAID,EAAM0M,WAGlB,qBAAKzM,UAAU,OACf,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcI,QAvBjC,WAChB+N,GAAaD,IAsBO,SACI,cAAC,EAAD,CACA4E,YAAe/S,EAAM4B,uBCiFtCwR,MA1Gf,WAEI,IAAQvS,EAAYL,cAAZK,QAER,EAAsDE,oBAAS,GAA/D,mBAAOsS,EAAP,KAA0BC,EAA1B,KACA,EAAkDvS,oBAAS,GAA3D,mBAAOwS,EAAP,KAAwBC,EAAxB,KACA,EAA4CzS,mBAAS,CAAC,KAAtD,mBAAQ0S,EAAR,KAAuBC,EAAvB,KACA,EAAsC3S,mBAAS,CAAC,KAAhD,mBAAQ4S,EAAR,KAAoBC,EAApB,KAGMC,EAAiB,uCAAG,4BAAA1R,EAAA,sEACUtB,EAAQgP,MAAMC,IAAI,uBAD5B,OAChBgE,EADgB,OAElBJ,EAAiBI,GAFC,2CAAH,qDAKjBC,EAAiB,uCAAG,4BAAA5R,EAAA,sEACMtB,EAAQgP,MAAMC,IAAI,qBADxB,OAChBkE,EADgB,OAEtBJ,EAAcI,GAFQ,2CAAH,qDAYvB,OAPArQ,qBAAU,WACVkQ,IACAE,MAEA,CAhBe,IAoBX,8BACA,sBAAK9T,UAAU,iBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,CAAS2M,sBAAuB0G,EAA0BhH,oBAAqBkH,MAEnF,qBAAKvT,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,QAGR,qBAAKA,UAAU,2BAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,+CAEJ,cAACgU,EAAD,IACA,qBAAKhU,UAAU,wBAAf,SACI,kDAEJ,qBAAKA,UAAU,yBAAf,SACI,qBAAKA,UAAU,0BAAf,SACKwT,EAAcxD,KAAI,SAAAuC,GAAQ,OACvB,qBAA0BvS,UAAU,mBAApC,SACA,cAAC,EAAD,CACA8E,MAAOyN,EAASzN,MAChBoC,QAASqL,EAASrL,QAClBjH,IAAKsS,EAASC,aACd7Q,SAAU4Q,EAAS5Q,SACnB6O,kBAAmB+B,EAAS9Q,WAC5BgP,UAAa8B,EAAS9B,UACtBlM,MAAOgO,EAAS5Q,SAChB0C,KAAMkO,EAASzN,MACfwL,WAAciC,EAASjC,cAVbiC,EAASzN,cAiB/B,qBAAK9E,UAAU,wBAAf,SACI,kDAGJ,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACK0T,EAAW1D,KAAI,SAAA+C,GAAW,OACvB,qBAAgC/S,UAAU,cAA1C,SACA,cAAC,EAAD,CACAyM,IAAKsG,EAAYtG,IACjBxM,IAAK8S,EAAYtR,WACjBE,SAAUoR,EAAYpR,YAJZoR,EAAYpR,gCAgB1D,sBAAK3B,UAAU,WAAf,UACKoT,GAAqB,cAAC,EAAD,CAAe9I,uBAAwB+I,IAC5DC,GACD,cAAC,EAAD,CACAxF,qBAAsByF,a,eCwEvBU,MA9Kf,YAA+B,EAARC,MAAS,IAE9B,EAAyC3T,cAAjCG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASsE,EAAvB,EAAuBA,cAEvB,EAAkCpE,mBAAS,CAAC,KAA5C,mBAAQkR,EAAR,KAAkBC,EAAlB,KACA,EAA4CnR,mBAAS,CAAC,KAAtD,mBAAuB2S,GAAvB,WACA,EAAmC3S,mBAAS,IAA5C,mBAAQqT,EAAR,KAAmBC,EAAnB,KACA,EAAkDtT,oBAAS,GAA3D,mBAAOuT,EAAP,KAA0BC,EAA1B,KACA,EAA2CxT,qBAA3C,mBAAQyT,EAAR,KAAuBC,EAAvB,KACA,EAAmC1T,oBAAS,GAA5C,mBAAQ2T,EAAR,KAAmBC,EAAnB,KACA,EAAoC5T,mBAAS,GAA7C,mBAAOoR,EAAP,KAAmBC,EAAnB,KAGMC,EAAY,uCAAG,8BAAAlQ,EAAA,6DACbyN,EAAS,CAAEgF,WAAYzC,GADV,SAEQtR,EAAQgP,MAAMC,IAAI,iBAAkBF,GAF5C,OAEbiF,EAFa,OAGnB3C,EAAY2C,GACZzS,QAAQC,IAAIwS,GAJO,2CAAH,qDAOZC,EAAU,WACG,GAAd3C,GAIHC,EADqBD,EAAa,IAG9B4C,EAAU,WAEd3C,EADqBD,EAAa,IAK9B0B,EAAiB,uCAAG,4BAAA1R,EAAA,sEACQtB,EAAQgP,MAAMC,IAAI,uBAD1B,OAClBgE,EADkB,OAExBJ,EAAiBI,GAFO,2CAAH,qDAKjBkB,EAAc,uCAAG,8BAAA7S,EAAA,6DACrBwS,GAAa,GACP/E,EAAS,CAAE7K,MAAOqP,GAFH,SAGOvT,EAAQgP,MAAMC,IAAI,uBAAwBF,GAHjD,OAID,KADdqF,EAHe,SAKnBR,EAAiBQ,GACjBV,GAAqB,IAErBI,GAAa,GARM,2CAAH,qDA2BlB,OAfFhR,qBAAU,WACLwB,GACHkN,MAGA,CAACF,EAAYhN,IAEfxB,qBAAU,WACLhD,GACDkT,MAGF,CAnDa,IAuDX,mCACE,sBAAK5T,UAAU,aAAf,UACA,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,oBAAf,UACI,uBACE0K,KAAK,OACL1K,UAAU,iBACVmL,YAAY,0BACZC,MAAO+I,EACPrJ,SAAU,SAACO,GAAD,OAAU+I,EAAa/I,EAAMC,cAAcF,QACrD6J,WAAY,SAAC5J,GAA6B,UAAdA,EAAM6J,KAAkBH,OAEtD,yBAAQ/U,UAAU,iBAAiBI,QAAS2U,EAA5C,UAA6D,mBAAGjR,MAAM,6BAAtE,iBAGN,sBAAK9D,UAAU,aAAf,UACCyU,GACC,sBAAKzU,UAAU,mBAAf,UACA,gDACE,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAf,SACA,iHAEF,wBAAQA,UAAU,OAAOI,QAAS,kBAAIsU,GAAa,IAAnD,yBAIHL,GACD,sBAAKrU,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,kDAEF,wBAAQA,UAAU,OAAOI,QAAS,kBAAIkU,GAAqB,IAA3D,mBACE,qBAAKtU,UAAU,mBAAf,SACI,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,eAAf,SACA,cAAC,EAAD,CACI6Q,KAAM,EACNtK,MAAM,EAFV,SAIKgO,EAAcvE,KAAI,SAAA3G,GAAO,OACxB,qBAAyBrJ,UAAU,cAAnC,SACI,cAAC,EAAD,CACA8E,MAAOuE,EAAQvE,MACfoC,QAASmC,EAAQnC,QACjBjH,IAAKoJ,EAAQmJ,aACb7Q,SAAU0H,EAAQ1H,SAClB6O,kBAAmBnH,EAAQ5H,WAC3BgP,UAAapH,EAAQoH,UACrBlM,MAAO8E,EAAQ1H,SACf0C,KAAMgF,EAAQvE,MACd2J,aAAgBpF,EAAQvE,MACxBwL,WAAcjH,EAAQiH,WACtBlI,OAAQiB,EAAQjB,UAZViB,EAAQvE,qBA0B9B,qBAAK9E,UAAU,wBAAf,SACE,mDAEF,sBAAKA,UAAU,aAAf,UACM,yBAAQA,UAAU,kBAAkBI,QAAS,kBAAMyU,KAAnD,UAA8D,mBAAG/Q,MAAM,6BAAvE,UAEA,yBAAQ9D,UAAU,kBAAkBI,QAAS,kBAAM0U,KAAnD,iBAAkE,mBAAGhR,MAAM,oCAE/E,sBAAK9D,UAAU,yBAAf,UACE,qBAAKA,UAAU,uBAAf,SACKgS,EAAUhC,KAAI,SAAA3G,GAAO,OACtB,qBAAyBrJ,UAAU,mBAAnC,SACI,cAAC,EAAD,CACA8E,MAAOuE,EAAQvE,MACfoC,QAASmC,EAAQnC,QACjBjH,IAAKoJ,EAAQmJ,aACb7Q,SAAU0H,EAAQ1H,SAClB6O,kBAAmBnH,EAAQ5H,WAC3BgP,UAAapH,EAAQoH,UACrBpM,KAAMgF,EAAQvE,MACdwL,WAAcjH,EAAQiH,WACtBlI,OAAQiB,EAAQjB,UAVViB,EAAQvE,YAgBtB,sBAAK9E,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAkBI,QAAS,kBAAMyU,KAAnD,UAA8D,mBAAG/Q,MAAM,6BAAvE,UAEA,yBAAQ9D,UAAU,kBAAkBI,QAAS,kBAAM0U,KAAnD,iBAAkE,mBAAGhR,MAAM,gDCnKhFqR,MARf,WACI,OACI,8BACI,cAACA,EAAD,O,SCPG,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,sC,gBCsC1BC,MAjCf,SAAiBrV,GAKb,OAFgBqQ,cAARD,IAIJ,sBAAKnQ,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAf,SACQ,6BAAKD,EAAMwJ,SAEnB,qBAAKvJ,UAAU,kBAAf,SACI,qBAAKA,UAAU,uBAAf,SACA,qBAAKA,UAAU,eAAeC,IAAKF,EAAME,UAG7C,sBAAKD,UAAU,gBAAf,UAEI,sBAAKA,UAAU,mBAAf,UACKD,EAAMsV,OAAQ,IAAKtV,EAAMuV,WAE9B,qBAAKtV,UAAU,mBAAf,SACKD,EAAMqH,iBAGf,sBAAKpH,UAAU,kBAAf,UACI,8BAAMD,EAAMwV,eACZ,2CAAcxV,EAAMyV,iBC2LrBC,OAlNf,WAEI,IAAQvQ,EAAkB3E,cAAlB2E,cAGR,EAAyCpE,mBAAS,OAAlD,mBAAQ4U,EAAR,KAAsBC,EAAtB,KACA,EAA6B7U,mBAAS,IAAtC,mBAAQ8U,EAAR,KAAgBC,EAAhB,KACA,EAAyB/U,mBAAS,IAAlC,mBAAQgV,EAAR,KAAcC,EAAd,KACA,EAAyCjV,qBAAzC,mBAAQkV,EAAR,KACA,GADA,KACqClV,oBAAS,IAA9C,mBAAQmV,EAAR,KAAoBC,EAApB,KACA,EAAiCpV,oBAAS,GAA1C,mBAAQqV,EAAR,KAAkBC,EAAlB,KACA,EAAgDtV,oBAAS,GAAzD,mBAAOuV,EAAP,KAAyBC,EAAzB,KACA,EAAmCxV,mBAASyV,GAA5C,mBAAQC,EAAR,KAAmBC,EAAnB,KACA,EAA2B3V,mBAAS,OAApC,mBAAQ4V,EAAR,KAAeC,EAAf,KAGMC,EAAS,uCAAG,gCAAA1U,EAAA,6DACdkU,GAAY,GACZE,GAAoB,GAEdO,EAAU,CAAEzT,MAAOsS,EAAcoB,MAAO,OAJhC,SAKSlW,UAAQ+E,QAAQoR,QAAQC,iBAAiBH,GALlD,cAKRI,EALQ,gBAOdC,QAAQC,IACJF,EAASjH,IAAT,uCAAc,WAAOpK,GAAP,yBAAA1D,EAAA,6DACR2U,EAAU,CACZpR,QAASG,EAAMwR,cACfhU,MAAOsS,GAGP2B,EAAY,GACZjW,EAAUwE,EAAMxE,QAChBkW,EAAW1R,EAAM0R,SARP,kBAUI1W,UAAQ+E,QAAQC,MAAMC,cAAcgR,GAVxC,OAUVU,EAVU,OAWVF,EAAUE,MAAQA,EAAMvR,SAASxC,QAAQ,GACpCgU,EAAcD,EAAMvR,UAAW5E,EAAQ,KAAD,IAAE,GAAIkW,IAChDD,EAAUG,UAAYA,EAAUhU,QAAQ,GAb/B,kDAeVrB,QAAQC,IAAR,MAfU,eAiBdwD,EAAK,2BAAOA,GAAUyR,GAjBR,kBAkBPzR,GAlBO,0DAAd,wDARU,OAMR6R,EANQ,OA8BdtV,QAAQC,IAAIqV,GACZ5B,EAAU4B,GACVvB,GAAc,GAhCA,4CAAH,qDAmCTwB,EAAO,uCAAG,uBAsBHC,EAtBG,SAAAzV,EAAA,6DAsBHyV,EAtBG,SAsBIxH,GACZ,OAAGA,EAAIyH,WAAW,QACP,qCAAqCzH,EAAI0H,MAAM,gBAAgBC,OAAO,GAEtE3H,GAzBf+F,GAAc,GACdI,GAAoB,GACpBP,EAAQ,IACFc,EAAU,CAAEzT,MAAOsS,GAJb,SAKU9U,UAAQ+E,QAAQoR,QAAQW,QAAQb,GAL1C,cAKNkB,EALM,iBAOZb,QAAQC,IACJY,EAAQC,OAAOhI,IAAf,uCAAoB,WAAMiI,GAAN,eAAA/V,EAAA,6DACZiO,EAAMwH,EAAOM,EAAIC,WADL,kBAGLC,MAAMhI,GACZiI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFN,EAAIO,MAAQD,EAAKC,SANT,sFAUTP,GAVS,wDAApB,wDARQ,QAMRR,EANQ,OA6BZ1B,EAAQ0B,GACRrB,GAAY,GA9BA,4CAAH,qDAgDPqC,EAAc,SAACrV,EAAOsV,EAAMhC,GAC9BR,GAAc,GACdI,GAAoB,GACpBF,GAAY,GACZT,EAAgBvS,GAChBqT,EAAaiC,GACb/B,EAASD,IAab,OAVAhT,qBAAU,cAIP,CAAEwB,IAELxB,qBAAU,cAEP,CAACkS,EAAQE,IAGR,mCACA,sBAAK9V,UAAU,oBAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,qBAAKA,UAAS,8BAAyB0W,GAAvC,SACA,sBAAK1W,UAAU,6BAAf,UACI,qBAAKA,UAAU,4BAA4BI,QAAS,kBAAMqY,EAAY,MAAOlC,EAAK,QAAlF,SACI,qBAAKtW,IAAKsW,MAEd,qBAAKvW,UAAU,4BAA4BI,QAAS,kBAAMqY,EAAY,MAAOE,EAAK,QAAlF,SACI,qBAAK1Y,IAAK0Y,MAEd,qBAAK3Y,UAAU,4BAA4BI,QAAS,kBAAMqY,EAAY,QAASG,EAAO,UAAtF,SACI,qBAAK3Y,IAAK2Y,aAKtB,qBAAK5Y,UAAU,iCAAf,SACI,sBAAKA,UAAS,iCAA4B0W,GAA1C,UACI,wBAAQ7R,GAAE,iCAA4B6R,GAAStW,QAASwW,EAAxD,oBACA,wBAAQ/R,GAAE,iCAA4B6R,GAAStW,QAASsX,EAAxD,uBAIPzB,GACD,sBAAKjW,UAAU,wBAAf,UACQ,sBAAKA,UAAS,6BAAwB0W,GAAtC,UACI,sBAAM7R,GAAG,oBAAT,kBACA,sBAAMA,GAAG,oBAAT,0BACA,sBAAMA,GAAG,oBAAT,qBACA,sBAAMA,GAAG,oBAAT,mBACA,sBAAMA,GAAG,oBAAT,yBAER,qBAAK7E,UAAS,wBAAmB0W,GAAjC,SACKd,EAAO5F,KAAI,SAAApK,GAAK,OACb,sBAA+B5F,UAAU,eAAzC,UACI,sBAAM6E,GAAG,eAAT,SAAwB,qBAAK5E,IAAO2F,EAAM8S,KAAmB9S,EAAM8S,KAAlBlC,MACjD,uBAAM3R,GAAG,eAAT,UAAyBe,EAAM2D,KAAK,uBAApC,IAA2C3D,EAAMyP,OAAjD,OACA,sBAAMxQ,GAAG,eAAT,UAA0Be,EAAMxE,QAAN,SAAe,GAAIwE,EAAM0R,WAAW9T,QAAQ,KACtE,uBAAMqB,GAAG,eAAT,cAA0Be,EAAM2R,SAChC,uBAAM1S,GAAG,eAAT,cAA0Be,EAAM4R,eAL1B5R,EAAMwR,uBAY3BjB,GACG,qBAAKnW,UAAU,yBAAf,SACI,qBAAKA,UAAS,sBAAiB0W,GAA/B,SACA,qBAAK1W,UAAU,qBAAf,SACI,qBAAKA,UAAU,mBAAf,SACC8V,EAAK9F,KAAI,SAAAiI,GAAG,OACT,qBAAyBjY,UAAU,WAAnC,SACI,cAAC,EAAD,CACAC,IAAKgY,EAAIO,MACTjP,KAAM0O,EAAI1O,KACV8L,OAAQ4C,EAAI5C,OACZC,QAAS2C,EAAIY,SACbtD,aAAc0C,EAAIa,cAClBtD,OAAQyC,EAAIzC,UAPNyC,EAAIC,sBAoB7B7B,GACG,qBAAKrW,UAAU,wBAAf,SACI,qBAAKA,UAAU,gBAAf,SACKgW,EAAahG,KAAI,SAAA+I,GAAW,OACzB,sBAA4B/Y,UAAU,eAAtC,UACI,sBAAM6E,GAAG,eAAT,SAAwB,qBAAK5E,IAAK8Y,EAAYL,SAC9C,sBAAM7T,GAAG,eAAT,SAAyBkU,EAAYxP,OACrC,sBAAM1E,GAAG,eAAT,SAAyBkU,EAAY1D,WAH/B0D,EAAYC,mBClMnCC,OARf,WACI,OACI,8BACI,cAAC,GAAD,O,gBCiMGC,OAjMf,SAAuBnZ,GACnB,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,EAA4BE,qBAA5B,mBAAOqY,EAAP,KAAeC,EAAf,KACA,EAAqCtY,qBAArC,mBAAQuY,EAAR,KAAoBC,EAApB,KACA,EAA0BxY,mBAAS,GAAnC,mBAAOyY,EAAP,KAAcC,EAAd,KACA,EAAsC1Y,qBAAtC,mBAAO2Y,EAAP,KAAoBC,EAApB,KACA,EAAmC5Y,mBAAS,gBAA5C,mBAAQ6Y,EAAR,KAAmBC,EAAnB,KACA,EAAwC9Y,oBAAS,GAAjD,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,qBAA1C,mBAAO0H,EAAP,KAAsBC,EAAtB,KACA,EAAkC3H,qBAAlC,mBAAO+Y,EAAP,KAAkBC,EAAlB,KACA,EAAgChZ,qBAAhC,mBAAiBiZ,GAAjB,WAGMC,EAAc,uCAAG,8CAAA9X,EAAA,6DAChB2X,GAAY1X,QAAQC,IAAI,2BACxBiX,GAAalX,QAAQC,IAAI,4BAEtBuN,EAAS,CAAElB,aAAe1O,EAAMka,aAJnB,SAKUrZ,EAAQgP,MAAMC,IAAI,mBAAoBF,GALhD,cAKbuK,EALa,OAMbC,EAAkBD,EAAe9P,SAAS,YAC1CkE,EAAQ6L,EAAgB7L,SACxBE,QAAQ,WAAd,UAA0B9N,EAAK6B,kBAA/B,aAA0B,EAAiBZ,UARxB,UASQ2M,EAAMI,OATd,SASbM,EATa,QAUHG,OAAS,IACfoK,EAAQvK,EAAa,GAAGzM,WAAWgX,MACnCa,EAAapL,EAAa,GAAGzM,WAAW4W,OACxCrU,EAAQkK,EAAa,GAAGzM,WAAWkX,YACnCY,EAAarL,EAAa,GAAGzM,WAAWsX,UAC9CP,EAActK,EAAa,GAAGzM,WAAWsX,WACzCT,EAAUgB,GACVZ,EAASD,GACTK,EAAa9U,GACbgV,GAAa,GACbC,EAAYM,IApBG,4CAAH,qDAwBdC,EAAiB,uCAAG,sDAAApY,EAAA,sEACAqY,IADA,wCAGfhB,EAAQ,GAHO,sBAIRlX,MAAM,yBAJE,UAMI,qBAAX8W,EANO,sBAOR9W,MAAM,0BAPE,WASfwX,EATe,wBAUd1X,QAAQC,IAAI,sCACNuN,EAAS,CAAElB,aAAe1O,EAAMka,aAXxB,UAYerZ,EAAQgP,MAAMC,IAAI,mBAAoBF,GAZrD,eAYRuK,EAZQ,OAaRC,EAAkBD,EAAe9P,SAAS,YAC1CkE,EAAQ6L,EAAgB7L,SACxBE,QAAQ,WAAd,UAA0B9N,EAAK6B,kBAA/B,aAA0B,EAAiBZ,UAf7B,UAgBa2M,EAAMI,OAhBnB,eAgBRM,EAhBQ,QAiBRqK,EAAarK,EAAa,IACrBhF,IAAI,QAASuP,GACxBF,EAAWrP,IAAI,SAAUmP,GACzBE,EAAWrP,IAAI,cAAeyP,GApBhB,UAqBRJ,EAAWlP,OArBH,QAsBd1B,EACI,mCACA,qBAAKzI,UAAU,uBAAf,gCAKJuI,GAAgB,GA7BF,+BA+BR8Q,EAAazY,EAAQuI,OAAOC,OAAO,WACnCoR,EAAY,IAAInB,EAhCR,UAiCYzY,EAAQ8I,KAAKC,UAjCzB,eAiCRC,EAjCQ,OAkCRjI,EAAWiI,EAAYrH,WAAWZ,SAClCF,EAAamI,EAAYrH,WAAWd,WAAWe,KAC/CmN,EAAS,CAAElB,aAAe1O,EAAMka,aApCxB,UAqCerZ,EAAQgP,MAAMC,IAAI,mBAAoBF,GArCrD,eAqCRuK,EArCQ,OAsCdM,EAAUxQ,IAAI,QAASuP,GACvBiB,EAAUxQ,IAAI,SAAUmP,GACxBqB,EAAUxQ,IAAI,WAAYJ,GAC1B4Q,EAAUxQ,IAAI,WAAYrI,GAC1B6Y,EAAUxQ,IAAI,cAAevI,GAC7B+Y,EAAUxQ,IAAI,UAAWkQ,GACzBM,EAAUxQ,IAAI,cAAeyP,GAC7Be,EAAUxQ,IAAI,aAAa,GA7Cb,UA8CRwQ,EAAUrQ,OA9CF,QA+CGP,EAAYQ,SAAS,WAC7BC,IAAImQ,GACb9Z,EAAKyJ,OACmB+P,EAAe9P,SAAS,WAChCC,IAAImQ,GACpBN,EAAe/P,OACf1B,EACI,mCACA,qBAAKzI,UAAU,uBAAf,2CAKJuI,GAAgB,GA5DF,4CAAH,qDAiEjBgS,EAAS,uCAAG,oCAAArY,EAAA,sEACOtB,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAD5C,cACRiD,EADQ,gBAEQvF,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAF1D,UAER6C,EAFQ,OAGRgG,EAAa5F,EAAO/E,QACpBE,EAAayE,EAAQ3E,QACR,GAAd2K,GAAmC,GAAdzK,EALZ,wBAMZmH,EACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAIjBuI,GAAgB,GAdJ,mBAeL,GAfK,qBAgBD7H,EAAK6B,kBAhBJ,aAgBD,EAAiBmK,eAhBhB,wBAiBZjE,EACI,mCACJ,qBAAKzI,UAAU,uBAAf,wEAKAuI,GAAgB,GAxBJ,mBAyBL,GAzBK,kCA2BH,GA3BG,4CAAH,qDAyCf,OAVA7E,qBAAU,WACHhD,GACHsZ,MAED,IAEHtW,qBAAU,WACNoW,EAAaT,KACd,CAACA,IAGA,qCACA,qBAAKrZ,UAAU,2BAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,6CAEA,qBAAKA,UAAU,iCAAf,SACK,YAAI+P,MAAM,IAAIC,KAAK,SAACC,EAAMf,GACvB,IAAMuL,EAAcvL,EAAI,EACxB,OACI,kCACI,uBAAOxE,KAAK,QAAQnB,KAAK,eAAe6B,MAAOqP,EAAara,QAAS,kBAAMoZ,EAASiB,MACnFA,GAAgBlB,EAAQ,mBAAGzV,MAAM,qBAA0B,mBAAGA,MAAM,6BAKjF,uBAAO9D,UAAU,sBAAsB0K,KAAK,OAAOS,YAAawO,EAAWvO,MAAOqO,EAAa5O,UAAQ,EACvGC,SAAU,SAACO,GAAD,OAAUqO,EAAerO,EAAMC,cAAcF,UAC3D,qBAAKpL,UAAU,6BAAf,SACA,0BAAUuL,KAAM,EACZvL,UAAU,eACVmL,YAAY,qDACZK,UAAW,IACXJ,MAAO+N,EACPtO,UAAQ,EACRC,SAAU,SAACO,GAAD,OAAU+N,EAAU/N,EAAMC,cAAcF,YAEtD,sBAAKpL,UAAU,wBAAf,UAEI6Z,GACD,wBAAQ7Z,UAAU,oCAAoCI,QAASka,EAA/D,0BAEET,GACF,wBAAQ7Z,UAAU,oCAAoCI,QAASka,EAA/D,iCAKVhS,GACG,cAAC,EAAD,CACAjI,QAASkI,EACTpI,QAASqI,Q,QCxKNkS,OArBf,SAAoB3a,GAChB,OAEQ,sBAAKC,UAAU,mBAAf,UACQ,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,sBAAsBC,IAAKF,EAAM4a,cAC/C5a,EAAM4B,YAEX,sBAAK3B,UAAU,eAAf,UACK,YAAI+P,MAAMhQ,EAAMwZ,QAAQvJ,KAAK,SAAAC,GAC1B,OAAO,mBAAGnM,MAAM,mBAEpB,sBAAMe,GAAG,cAAT,SAAwB9E,EAAM0Z,iBAElC,sBAAKzZ,UAAU,cAAf,yBAA0CD,EAAM6a,aAChD,qBAAK5a,UAAU,gBAAf,SAAgCD,EAAMoZ,aC4B3C0B,OA1Cf,SAAiB9a,GACb,IAAQa,EAAYL,cAAZK,QACFkE,EAAS/E,EAAM+E,MAErB,EAA8BhE,qBAA9B,mBAAOga,EAAP,KAAgBC,EAAhB,KACA,EAAoCja,oBAAS,GAA7C,mBAAOka,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,WAAMnb,GAAN,iBAAAmC,EAAA,6DACVyN,EAAS,CAAElB,aAAc3J,GADf,SAESlE,EAAQgP,MAAMC,IAAI,cAAeF,GAF1C,OAEVwL,EAFU,OAGhBhZ,QAAQC,IAAI+Y,GACZJ,EAAWI,GACXhZ,QAAQC,IAAI0Y,GACZG,GAAeD,GANC,2CAAH,sDASjB,OACI,gCACI,wBAAQhb,UAAU,OAAOI,QAAS,kBAAM8a,KAAxC,6BACCF,GACG,sBAAKhb,UAAU,gCAAf,UACA,yCACA,qBAAKA,UAAU,0BAAf,SACK8a,EAAQ9K,KAAI,SAAAmJ,GAAM,OACf,qBAAwBnZ,UAAU,sBAAlC,SACI,cAAC,GAAD,CACA2B,SAAUwX,EAAOxX,SACjB4X,MAAOJ,EAAOI,MACdJ,OAAQA,EAAOA,OACfwB,YAAaxB,EAAOwB,YACpBC,UAAWzB,EAAOyB,UAClBnB,YAAcN,EAAOM,eAPfN,EAAOrU,mBCA1BsW,OAzBf,SAAuBrb,GACnB,OACI,sBAAKC,UAAU,8BAAf,UACA,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,uBAAD,OAA2B3E,EAAMyH,UAAelD,OAAO,SAAS,aAAW,UAAvI,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,+BAA+B6D,GAAI,CAAEa,SAAS,gBAAD,OAAoB3E,EAAM2H,WAAgBpD,OAAO,SAAS,aAAW,WAAlI,SACA,mBAAGtE,UAAU,sBAEb,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,sBAAD,OAA0B3E,EAAM6H,UAAetD,OAAO,SAAS,aAAW,UAAtI,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,+BAA+B6D,GAAI,CAAEa,SAAS,2BAAD,OAA+B3E,EAAM+H,WAAgBxD,OAAO,SAAS,aAAW,WAA7I,SACA,mBAAGtE,UAAU,sBAEb,cAAC,IAAD,CAAMA,UAAU,8BAA8B6D,GAAI,CAAEa,SAAS,yBAAD,OAA6B3E,EAAMiI,UAAe1D,OAAO,SAAS,aAAW,UAAzI,SACA,mBAAGtE,UAAU,qBAEb,cAAC,IAAD,CAAMA,UAAU,6BAA6B6D,GAAI,CAAEa,SAAS,qBAAD,OAAyB3E,EAAMmI,SAAc5D,OAAO,SAAS,aAAW,SAAnI,SACA,mBAAGtE,UAAU,wB,QCsCNqb,OAxDf,SAA0Btb,GACtB,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,EAA4BE,qBAA5B,mBAAQwa,EAAR,KAAaC,EAAb,KAGIC,EAAW,uCAAG,kCAAAtZ,EAAA,6DACZuZ,GAAU,IAAIhS,MAAOQ,mBAAmB,QAAS,CAACyR,KAAM,UAAWC,MAAO,OAAQC,IAAK,YACvFC,GAAU,IAAIpS,MAAOqS,mBAAmB,SAExCnM,EAAS,CAAEoM,KAAI,UAAErb,EAAK6B,kBAAP,aAAE,EAAiBZ,SAAUkC,GAAK9D,EAAMic,YAAcxS,KAAMiS,EAASQ,KAAMJ,EAASxS,QAAUtJ,EAAMka,YAAciC,QAASZ,GAJ9H,kBAMQ1a,EAAQgP,MAAMC,IAAI,cAAeF,GANzC,cAOdtN,MAAM,iBACLtC,EAAMM,SAAQ,GARD,kDAUdgC,MAAM,EAAD,IAVS,0DAAH,qDAcf,OACI,mCACA,qBAAKrC,UAAU,sBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,gDACA,qBAAKA,UAAU,iBAAf,SACA,mBAAG8D,MAAM,eAAgB1D,QAAS,WAAOL,EAAMM,SAAQ,WAG3D,sBAAKL,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAsBC,IAAKF,EAAMyQ,oBAC/CzQ,EAAMic,eAEX,sBAAKhc,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAsBC,IAAKF,EAAMoc,aAC/Cpc,EAAMka,kBAGf,qBAAKja,UAAU,gBAAf,SACI,0BAAUmL,YAAY,4CAA4CC,MAAOkQ,EAAK9P,UAAU,MAAMV,SAAU,SAACO,GAAD,OAAUkQ,EAAWlQ,EAAMC,cAAcF,eAGzJ,qBAAKpL,UAAU,kBAAf,SACI,wBAASI,QAASob,EAAlB,8B,QC2KTY,OAzNf,SAAqBrc,GAEjB,MAA0BQ,cAAZK,GAAd,EAAQF,KAAR,EAAcE,SACNmG,EAAaC,cAAbD,SAER,EAA0BjG,mBAAUf,EAAM+E,OAA1C,mBAAOA,EAAP,KAAcmC,EAAd,KACA,EAA8BnG,mBAASf,EAAMmH,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAsCrG,mBAASf,EAAMqH,aAArD,mBAAOA,EAAP,KAAoBC,EAApB,KAEA,EAA8BvG,mBAASf,EAAMuH,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAA8BzG,mBAASf,EAAMyH,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAgC3G,mBAASf,EAAM2H,UAA/C,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA8B7G,mBAASf,EAAM6H,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAgC/G,mBAASf,EAAM+H,UAA/C,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA8BjH,mBAASf,EAAMiI,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAA4BnH,mBAASf,EAAMmI,QAA3C,mBAAOA,EAAP,KAAeC,EAAf,KACA,EAA8BrH,mBAASf,EAAMsc,SAA7C,mBAAOA,EAAP,KACA,IADA,KAC4Bvb,mBAASf,EAAMqI,SAA3C,qBAAOA,GAAP,MAAeC,GAAf,MAGA,GAAwCvH,oBAAS,GAAjD,qBAAOwH,GAAP,MAAqBC,GAArB,MACA,GAA0CzH,qBAA1C,qBAAO0H,GAAP,MAAsBC,GAAtB,MAGA,GAAkC3H,qBAAlC,qBAAO4H,GAAP,MAAkBC,GAAlB,MACA,GAA0C7H,qBAA1C,qBAAO8H,GAAP,MAAsBC,GAAtB,MACA,GAAuD/H,mBAASf,EAAMyS,cAAtE,qBAAQzJ,GAAR,MAA6BC,GAA7B,MAEMsT,GAAW,uCAAG,sBAAApa,EAAA,sDAChBuG,GACI,sBAAKzI,UAAU,sBAAf,0DAEI,wBAAQA,UAAU,mBAAmBI,QAASmc,GAA9C,gCAGRhU,IAAgB,GAPA,2CAAH,qDAUXgU,GAAa,uCAAG,8BAAAra,EAAA,6DACZyN,EAAS,CAAElB,aAAe1O,EAAM+E,OACtC3C,QAAQC,IAAIuN,GAFM,SAGI/O,EAAQgP,MAAMC,IAAI,mBAAoBF,GAH1C,OAGZtG,EAHY,OAIlBlH,QAAQC,IAAIiH,GAEWA,EACRmT,UAAUpE,MAAK,SAACqE,GAC3Bpa,MAAM,2CACP,SAACqJ,GACArJ,MAAMqJ,MAVQ,2CAAH,qDAebgR,GAAW,uCAAG,oCAAAxa,EAAA,sEAEZC,QAAQC,IAAIrC,EAAM+E,OACZ6K,EAAS,CAAElB,aAAe1O,EAAM+E,OACtC3C,QAAQC,IAAIuN,GAJA,SAKU/O,EAAQgP,MAAMC,IAAI,mBAAoBF,GALhD,cAKNtG,EALM,OAMZlH,QAAQC,IAAIiH,GACZlH,QAAQC,IAAIiH,GACNC,EAAOZ,GACPa,EAAOX,GATD,UAUS7B,EAASwC,EAAMD,EAAM,CAAEQ,UAAU,IAV1C,eAURC,EAVQ,OAWZV,EAAQW,IAAI,eAAgBD,GAC5BV,EAAQW,IAAI,SAAU5B,IACtBiB,EAAQW,IAAI,QAASlF,GACrBuE,EAAQW,IAAI,UAAW9C,GACvBmC,EAAQW,IAAI,cAAe5C,GAC3BiC,EAAQW,IAAI,UAAuB,KAAZ1C,OAAiB4C,EAAY5C,GACpD+B,EAAQW,IAAI,UAAuB,KAAZxC,OAAiB0C,EAAY1C,GACpD6B,EAAQW,IAAI,WAAyB,KAAbtC,OAAkBwC,EAAYxC,GACtD2B,EAAQW,IAAI,UAAuB,KAAZpC,OAAiBsC,EAAYtC,GACpDyB,EAAQW,IAAI,WAAyB,KAAblC,OAAkBoC,EAAYpC,GACtDuB,EAAQW,IAAI,UAAuB,KAAZhC,OAAiBkC,EAAYlC,GACpDqB,EAAQW,IAAI,SAAqB,KAAX9B,OAAgBgC,EAAYhC,GAtBtC,UAuBNmB,EAAQc,OAvBF,QAwBZ1B,GAAiB,sBACjBF,IAAgB,GAzBJ,kDA2BZlG,MAAM,EAAD,IA3BO,0DAAH,qDAwCjB,OACI,qCACI,qBAAKrC,UAAU,2BAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,aAAd,4BACA,sBAAMA,UAAU,WAAWI,QAAS,WAAOL,EAAMuK,wBAAuB,IAAxE,SAAiF,mBAAGxG,MAAM,6BAE9F,qBAAK9D,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAcC,IAAK8I,GAAqB/E,IAAI,OAE/D,qBAAKhE,UAAU,qBAAf,SACI,+BACI,sBAAKA,UAAU,OAAf,UACI,wBAAOuK,QAAQ,eAAevK,UAAU,aAAxC,iCAAyE,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACzE,uBAAOzK,UAAU,eAAe0K,KAAK,OAAOC,OAAO,mCAAmCC,SAAS,QAAQ/F,GAAG,eAAegG,UAAQ,EAACC,SAzB5I,SAAAC,GAClBpC,GAAaoC,EAAEzG,OAAO0G,MAAM,IAC5BnC,GAAiBkC,EAAEzG,OAAO0G,MAAM,GAAGzB,MACnCP,GAAuBiC,IAAIC,gBAAgBH,EAAEzG,OAAO0G,MAAM,KAC1DvC,GAAiB,aACjBF,IAAgB,aA0BA,qBAAKvI,UAAU,oBAAf,SACI,uBAAMA,UAAU,YAAhB,UACA,sBAAKA,UAAU,sBAAf,6EAEQ,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,uBAAO0K,KAAK,QAAQ7F,GAAG,gBAAgB0E,KAAK,mBAAmBnJ,QAAS,kBAAMiI,IAAU,MACxF,uBAAOrI,UAAU,aAAjB,+BAIJ,sBAAKA,UAAU,iCAAf,UACI,uBAAO0K,KAAK,QAAQ7F,GAAG,WAAW0E,KAAK,mBAAmBnJ,QAAS,kBAAMiI,IAAU,MACnF,uBAAOrI,UAAU,aAAjB,+BAMZ,sBAAKA,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,0BAA2C,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBAC3C,uBAAOzK,UAAU,aAAamL,YAAarG,EAAOsG,MAAOtG,EAAO+F,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUpE,EAASoE,EAAMC,cAAcF,aAE9H,sBAAKpL,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,oBAAqC,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACrC,0BAAUc,KAAM,EAAGvL,UAAU,eAAemL,YAAY,yDAAyDK,UAAW,IAAKJ,MAAOlE,EAAS2D,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUlE,EAAWkE,EAAMC,cAAcF,aAEjN,sBAAKpL,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,wBAAyC,sBAAMwK,MAAO,CAACC,MAAM,OAApB,mBACzC,0BAAUc,KAAM,EAAGvL,UAAU,eAAemL,YAAY,oEAAoEK,UAAW,IAAKJ,MAAOhE,EAAayD,UAAQ,EAACC,SAAU,SAACO,GAAD,OAAUhE,EAAegE,EAAMC,cAAcF,aAEpO,sBAAKpL,UAAU,sBAAf,UACI,uBAAOA,UAAU,aAAjB,qBACA,uBAAOA,UAAU,aAAamL,YAAY,mBAAmBC,MAAO9D,EAASwD,SAAU,SAACO,GAAD,OAAU9D,EAAW8D,EAAMC,cAAcF,aAEpI,sBAAMZ,MAAO,CAACC,MAAM,OAApB,8BAIR,sBAAKzK,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO5D,EAAS2D,YAAY,aAAaL,SAAU,SAACO,GAAD,OAAU5D,EAAW4D,EAAMC,cAAcF,eAG7I,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAO1D,EAAUyD,YAAY,eAAeL,SAAU,SAACO,GAAD,OAAU1D,EAAY0D,EAAMC,cAAcF,eAGjJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAQA,UAAU,wBAAuBoL,MAAOxD,EAASuD,YAAY,oBAAoBL,SAAU,SAACO,GAAD,OAAUxD,EAAWwD,EAAMC,cAAcF,eAGpJ,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,2BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOtD,EAAUqD,YAAY,gCAAgCL,SAAU,SAACO,GAAD,OAAUtD,EAAYsD,EAAMC,cAAcF,eAGlK,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,0BACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOpD,EAASmD,YAAY,8BAA8BL,SAAU,SAACO,GAAD,OAAUpD,EAAWoD,EAAMC,cAAcF,eAG9J,qBAAKpL,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,yBACb,sBAAMA,UAAU,qBAAhB,eACA,uBAAOA,UAAU,wBAAwBoL,MAAOlD,EAAQiD,YAAY,0BAA0BL,SAAU,SAACO,GAAD,OAAUlD,EAAUkD,EAAMC,cAAcF,kBAI5J,sBAAKpL,UAAU,sBAAf,UACI,wBAAQA,UAAU,mBAAmBI,QAAS,WAAKL,EAAMuK,wBAAuB,IAAhF,wBACA,wBAAQtK,UAAU,mBAAmBI,QAASsc,GAA9C,4BACCL,GAAW,wBAAQrc,UAAU,mBAAmBI,QAASkc,GAA9C,sCAK3BhU,IACD,cAAC,EAAD,CACAjI,QAASkI,GACTpI,QAASqI,SCSNmU,OA7Mf,SAAwB5c,GACtB,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,EAAkCE,oBAAS,GAA3C,mBAAQ8b,EAAR,KAAeC,EAAf,KACA,EAA8D/b,oBAAS,GAAvE,mBAAOgc,EAAP,KAAgCC,EAAhC,KACA,EAAkDjc,oBAAS,GAA3D,mBAAOkc,EAAP,KAAwBC,EAAxB,KAEA,EAAwCnc,oBAAS,GAAjD,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,qBAA1C,mBAAO0H,EAAP,KAAsBC,EAAtB,KAIM4H,EAAYtQ,EAAMuQ,WAClBlI,EAAUrI,EAAMqI,OAGhB8U,EAAc,uCAAG,4BAAAhb,EAAA,sDAClBxB,IAAM,UACQA,EAAK6B,kBADb,aACQ,EAAiBZ,WAClB5B,EAAMod,SACpBN,GAAgB,GAJG,2CAAH,qDAUdO,EAAiB,uCAAG,4BAAAlb,EAAA,6DAClByN,EAAS,CAAEsK,YAAala,EAAM+E,OACpC3C,QAAQC,IAAIuN,GAFY,kBAIlB/O,EAAQgP,MAAMC,IAAI,kBAAmBF,GAJnB,OAKxBxN,QAAQC,IAAI,aALY,gDAOtBC,MAAM,EAAD,IAPiB,yDAAH,qDAWjBkY,EAAS,uCAAG,oCAAArY,EAAA,6DAChBC,QAAQC,IAAI1B,GADI,SAEKE,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAF1C,cAEViD,EAFU,gBAGMvF,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAHxD,OAGV6C,EAHU,OAIVgG,EAAa5F,EAAO/E,QACpBE,EAAayE,EAAQ3E,QACR,GAAd2K,GAAmC,GAAdzK,GACxBmH,EACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAIjBuI,GAAgB,KACN,UAAC7H,EAAK6B,kBAAN,aAAC,EAAiBmK,gBAU5BqQ,GAA2B,IAT3BtU,EACI,mCACJ,qBAAKzI,UAAU,uBAAf,wEAKAuI,GAAgB,IAxBF,4CAAH,qDAkCb,OAJF7E,qBAAU,WACRwZ,MACC,CA3DU,IA8DT,qCACE,qBAAKld,UAAU,eAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,qBAAf,UACEqQ,GACA,8BACE,mBAAGvM,MAAM,yBAAT,mBAGAsE,GACE,mBAAGtE,MAAM,oBAAT,mBAEAsE,GACA,mBAAGtE,MAAM,gBAAT,mBAEJ,6BAAK/D,EAAM+E,QACX,cAAC,EAAD,CACEA,MAAS/E,EAAM+E,QAEjB,cAAC,EAAD,CACA2J,aAAgB1O,EAAM0O,kBAGxB,qBAAKzO,UAAU,uBAAf,SACGD,EAAMmH,UAET,qBAAKlH,UAAU,qBAAf,SACE,qBAAMA,UAAU,yBAAyBC,IAAKF,EAAME,QAGtD,sBAAKD,UAAU,2BAAf,UACE,uCAEA,sBAAKA,UAAU,qBAAf,UACA,eAAC,IAAD,CAAMA,UAAU,eAAe6D,GAAI,CAAEa,SAAS,WAAD,OAAa3E,EAAMuH,UAAahD,OAAO,SAAS,aAAW,UAAxG,UAAkH,mBAAGR,MAAM,gBAAmB/D,EAAMuH,WAClJ,cAAC,GAAD,CACEE,QAASzH,EAAMyH,QACfE,SAAU3H,EAAM2H,SAChBE,QAAS7H,EAAM6H,QACfE,SAAU/H,EAAM+H,SAChBE,QAASjI,EAAMiI,QACfE,OAAQnI,EAAMmI,YAIlB,+BAAI,qBAAKlI,UAAU,eAAcC,IAAKF,EAAMyQ,oBAAsB,IAAlE,IAAwEzQ,EAAMod,QAAS,IAAvF,IAA6Fpd,EAAM0Q,aACnG,4BAAI1Q,EAAMqH,iBAEZ,qBAAKpH,UAAU,gBAAf,SACE,cAAC,GAAD,CACA8E,MAAS/E,EAAM+E,aAInB,qBAAK9E,UAAU,iCAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,kDACG4c,GACH,wBAAQ5c,UAAU,uBAAuBI,QAAS,kBAAMma,KAAxD,2BAEA,cAAC,EAAD,CACE5Y,SAAU5B,EAAMod,QAChBld,IAAKF,EAAMyQ,kBACX/D,IAAK1M,EAAM0M,MAEZmQ,GACG,qBAAK5c,UAAU,2BAAf,SACE,yBAAQA,UAAW,wBAAwBI,QAAS,kBAAK6c,GAAuB,IAAhF,UACE,mBAAGnZ,MAAM,wBACT,wDAKL8Y,IAAUvM,GACX,wBAAQrQ,UAAU,6BAA6BI,QAASgd,EAAxD,+BAIJR,GACA,cAAC,GAAD,CACA3C,YAAala,EAAM+E,gBAMzB,qBAAK9E,UAAU,gCAAf,SACE,qBAAKA,UAAU,gCAKf4c,GAASE,GACX,cAAC,GAAD,CACAzc,QAAS0c,EACTvM,kBAAmBzQ,EAAMyQ,kBACzBwL,YAAajc,EAAMod,QACnBhB,WAAYpc,EAAME,IAClBga,YAAala,EAAM+E,QAGpBwD,GACC,cAAC,EAAD,CACAjI,QAASkI,EACTpI,QAASqI,IAGZwU,GACD,cAAC,GAAD,CACA1S,uBAAwB2S,EACxBnY,MAAO/E,EAAM+E,MACboC,QAASnH,EAAMmH,QACfE,YAAarH,EAAMqH,YACnBE,QAASvH,EAAMuH,QACfkL,aAAczS,EAAME,IACpBuH,QAASzH,EAAMyH,QACfE,SAAU3H,EAAM2H,SAChBE,QAAS7H,EAAM6H,QACfE,SAAU/H,EAAM+H,SAChBE,QAASjI,EAAMiI,QACfE,OAAQnI,EAAMmI,OACdmU,QAASO,QCxJFS,GA1DK,SAAC,GAAa,EAAX9E,KAAY,IAEzB3X,EAAYL,cAAZK,QACAkE,EAAUwY,cAAVxY,MAER,EAA4ChE,mBAAS,CAAC,KAAtD,mBAAQyc,EAAR,KAAuBC,EAAvB,KAGMC,EAAW,uCAAG,8BAAAvb,EAAA,6DACZyN,EAAS,CAAElB,aAAc3J,GADb,SAEIlE,EAAQgP,MAAMC,IAAI,cAAeF,GAFrC,OAEZtG,EAFY,OAGlBmU,EAAiBnU,GAHC,2CAAH,qDAMjB3F,qBAAU,WACR+Z,MAEA,CAXS,IAmBX,OACI,mCACKF,EAAcvN,KAAI,SAAA3G,GAAO,OACxB,qBAAyBrJ,UAAU,aAAnC,SACI,cAAC,GAAD,CACE8E,MAAOuE,EAAQvE,MACfoC,QAASmC,EAAQnC,QACjBjH,IAAKoJ,EAAQmJ,aACb2K,QAAS9T,EAAQ1H,SACjB6O,kBAAmBnH,EAAQ5H,WAC3BgL,IAAKpD,EAAQoD,IACbgE,UAAapH,EAAQoH,UACrBlM,MAAO8E,EAAQ1H,SACfyF,YAAaiC,EAAQjC,YACrBqH,aAAgBpF,EAAQvE,MACxBwC,QAAS+B,EAAQ/B,QACjBE,QAAS6B,EAAQ7B,QACjBE,SAAU2B,EAAQ3B,SAClBE,QAASyB,EAAQzB,QACjBE,SAAUuB,EAAQvB,SAClBE,QAASqB,EAAQrB,QACjBE,OAAQmB,EAAQnB,OAChBwV,SAAYrU,EAAQqU,SACpBpN,WAAcjH,EAAQiH,WACtBlI,OAAUiB,EAAQjB,UArBdiB,EAAQvE,aCQf6Y,OArCf,SAAwB5d,GACpB,IAAQoQ,EAAQC,cAARD,IAER,OACI,sBAAKnQ,UAAU,2BAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CACIA,UAAU,mBACV6D,GAAE,UAAKsM,EAAL,YAAYpQ,EAAM4B,UAFxB,SAIQ,qBAAK3B,UAAU,mBAAmBC,IAAKF,EAAMwM,mBAGzD,sBAAKvM,UAAU,mBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,qBAAMC,IAAKF,EAAM0B,WAAazB,UAAU,8BAE5C,qBAAKA,UAAU,sBAAf,SACKD,EAAM4B,cAGf,qBAAK3B,UAAU,sBAAf,SACKD,EAAM0M,SAGf,qBAAKzM,UAAU,qBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CACA8S,YAAe/S,EAAM4B,mBCgI1Bic,OAxJf,WACE,MAAyCrd,cAAjCG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASsE,EAAvB,EAAuBA,cACvB,EAA4BpE,mBAAS,CAAC,KAAtC,mBAAQ+c,EAAR,KAAeC,EAAf,KACA,EAAsChd,mBAAS,CAAC,KAAhD,mBAAoB6S,GAApB,WACA,EAAyC7S,mBAAS,IAAlD,mBAAQid,EAAR,KAAsBC,EAAtB,KACA,EAAkDld,oBAAS,GAA3D,mBAAOuT,EAAP,KAA0BC,EAA1B,KACA,EAA2CxT,qBAA3C,mBAAQyT,EAAR,KAAuBC,EAAvB,KACA,EAAmC1T,oBAAS,GAA5C,mBAAQ2T,EAAR,KAAmBC,EAAnB,KAEA,EAAoC5T,mBAAS,GAA7C,mBAAOoR,EAAP,KAAmBC,EAAnB,KAIM0C,EAAO,uCAAG,4BAAA3S,EAAA,yDACG,GAAdgQ,EADW,wDAIV+L,EAAiB/L,EAAa,EAJpB,SAKRC,EAAc8L,GALN,2CAAH,qDAOPnJ,EAAO,uCAAG,4BAAA5S,EAAA,6DACVgc,EAAiBhM,EAAa,EADpB,SAERC,EAAc+L,GAFN,2CAAH,qDAKPN,EAAS,uCAAG,8BAAA1b,EAAA,6DAChBC,QAAQC,IAAI8P,GACNvC,EAAS,CAAEwO,QAASjM,GAFV,SAGOtR,EAAQgP,MAAMC,IAAI,YAAaF,GAHtC,OAGVyO,EAHU,OAIhBN,EAASM,GAJO,2CAAH,qDAOTC,EAAa,uCAAG,4BAAAnc,EAAA,sEACQtB,EAAQgP,MAAMC,IAAI,qBAD1B,OACdkE,EADc,OAEpBJ,EAAcI,GAFM,2CAAH,qDAKbuK,EAAc,uCAAG,8BAAApc,EAAA,6DACrBwS,GAAa,GACP/E,EAAS,CAAEhO,SAAUoc,GAFN,SAGInd,EAAQgP,MAAMC,IAAI,oBAAqBF,GAH3C,OAIJ,KADX4O,EAHe,SAKnB/J,EAAiB+J,GACjBjK,GAAqB,IAErBI,GAAa,GARM,2CAAH,qDA4BlB,OAhBFhR,qBAAU,WACLwB,GACH0Y,MAGA,CAAC1L,EAAYhN,IAGfxB,qBAAU,WACLhD,GACH2d,MAGA,CApDe,IAwDb,qCACE,qBAAKre,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACA,sBAAKA,UAAU,oBAAf,UACI,uBACE0K,KAAK,OACL1K,UAAU,iBACVmL,YAAY,0BACZC,MAAO2S,EACPjT,SAAU,SAACO,GAAD,OAAU2S,EAAgB3S,EAAMC,cAAcF,QACxD6J,WAAY,SAAC5J,GAA6B,UAAdA,EAAM6J,KAAkBoJ,OAEtD,yBAAQte,UAAU,iBAAiBI,QAASke,EAA5C,UAA6D,mBAAGxa,MAAM,6BAAtE,mBAIP2Q,GACC,sBAAKzU,UAAU,mBAAf,UACA,mDAAqB,wBAAQA,UAAU,OAAOI,QAAS,kBAAIsU,GAAa,IAAnD,sBACnB,qBAAK1U,UAAU,mBAAf,SACI,qBAAKA,UAAU,iBAAf,SACE,sHAKPqU,GACC,qBAAKrU,UAAU,mBAAf,SACE,sBAAKA,UAAU,mBAAf,UACA,qBAAIA,UAAU,oBAAd,8BAAmD,wBAAQA,UAAU,OAAOI,QAAS,kBAAIkU,GAAqB,IAA3D,sBACjD,qBAAKtU,UAAU,yBAAf,SACE,qBAAKA,UAAU,eAAf,SACGuU,EAAcvE,KAAI,SAAA+C,GAAW,OAC5B,qBAAgC/S,UAAU,cAA1C,SACE,cAAC,EAAD,CACAyM,IAAKsG,EAAYtG,IACjBxM,IAAK8S,EAAYtR,WACjBE,SAAUoR,EAAYpR,YAJdoR,EAAYpR,sBAclC,cAAC,IAAM2Q,SAAP,UACE,qBAAKtS,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UAEE,qBAAKA,UAAU,wBAAf,SACE,mDAEF,sBAAKA,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAkBI,QAAS,kBAAMyU,KAAnD,UAA8D,mBAAG/Q,MAAM,6BAAvE,UAEA,yBAAQ9D,UAAU,kBAAkBI,QAAS,kBAAM0U,KAAnD,iBAAkE,mBAAGhR,MAAM,oCAE7E,qBAAK9D,UAAU,yBAAf,SACE,qBAAKA,UAAU,uBAAf,SACG6d,EAAM7N,KAAI,SAAA+C,GAAW,OACpB,qBAAgC/S,UAAU,mBAA1C,SACE,cAAC,GAAD,CACEuM,aAAcwG,EAAYxG,aAC1BE,IAAKsG,EAAYtG,IACjBhL,WAAYsR,EAAYtR,WACxBE,SAAUoR,EAAYpR,YALhBoR,EAAYpR,iBAW5B,sBAAK3B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAkBI,QAAS,kBAAMyU,KAAnD,UAA8D,mBAAG/Q,MAAM,6BAAvE,UAEA,yBAAQ9D,UAAU,kBAAkBI,QAAS,kBAAM0U,KAAnD,iBAAkE,mBAAGhR,MAAM,+CC3I5E0a,OARf,WACI,OACI,mCACI,cAAC,GAAD,O,SCoDGC,OArDf,SAAqB1e,GACjB,MAA0BQ,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACd,EAA8BE,mBAASf,EAAM6S,SAA7C,mBAAOA,EAAP,KAAgB8L,EAAhB,KAEMzL,EAAiB,uCAAG,4BAAA/Q,EAAA,6DAChByN,EAAS,CAACmD,YAAa/S,EAAM+S,aADb,SAEAlS,EAAQgP,MAAMC,IAAI,sBAAuBF,GAFzC,cAIX,IACP+O,GAAW,GALO,2CAAH,qDAqBvB,OAVAhb,qBAAU,WACHhD,GACHuS,MAGA,CAPA0L,YAaA,mCACI,sBAAK3e,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,gBAAgBC,IAAKF,EAAMwM,aAAcvI,IAAI,OAEhE,sBAAKhE,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,cAAcC,IAAKF,EAAM0B,WAAYuC,IAAI,OAE5D,sBAAKhE,UAAU,kBAAf,UACI,qBAAIA,UAAU,wBAAd,UAAuCD,EAAM4B,SAA7C,OACA,mBAAG3B,UAAU,mBAAb,SAAiCD,EAAM0M,SAG3C,qBAAKzM,UAAU,uBAAf,SACA,cAAC,EAAD,CACI8S,YAAe/S,EAAM4B,SACrBiR,QAAWA,eCtBpBgM,OAtBf,SAAmB7e,GAEf,OACI,sBAAKC,UAAU,4BAAf,UACI,sBAAKA,UAAU,0BAAf,UACA,oBAAGA,UAAU,mBAAb,UAAgC,mBAAG8D,MAAM,0BAA6B/D,EAAMqN,aAA5E,OACA,eAAC,IAAD,CAAMpN,UAAU,kBAAkB6D,GAAI,CAAEa,SAAW3E,EAAMuH,SAAYhD,OAAO,SAAS,aAAW,UAAhG,UAA0G,mBAAGR,MAAM,gBAAmB/D,EAAMuH,WAExI,sBAAKtH,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,sBACA,mBAAGA,UAAU,4BAAb,SAA0CD,EAAMuN,WAEpD,sBAAKtN,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,oBACA,mBAAGA,UAAU,4BAAb,SAA0CD,EAAMyN,eAGxD,cAAC,GAAD,QCkMGqR,GA5MS,SAAC,GAAa,EAAXtG,KAAY,IAErC,EAAwChY,cAAhCG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAAQsE,EAAtB,EAAsBA,cACdvD,EAAa2b,cAAb3b,SAER,EAA4Cb,mBAAS,CAAC,KAAtD,mBAAQge,EAAR,KAAuBC,EAAvB,KACA,EAAkCje,mBAAS,CAAC,KAA5C,mBAAQkR,EAAR,KAAkBC,EAAlB,KACA,EAA8DnR,oBAAS,GAAvE,mBAAOgc,EAAP,KAAgCC,EAAhC,KACA,EAAiCjc,oBAAS,GAA1C,mBAAQke,EAAR,KAAkBC,EAAlB,KACA,EAA8Bne,oBAAS,GAAvC,mBAEA,GAFA,UAEwCA,oBAAS,IAAjD,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,qBAA1C,mBAAO0H,EAAP,KAAsBC,EAAtB,KAEA,EAAoC3H,mBAAS,GAA7C,mBAAOoR,EAAP,KAAmBC,EAAnB,KAIM+M,EAAW,uCAAG,8BAAAhd,EAAA,6DACZyN,EAAS,CAAEwP,aAAcxd,GADb,SAEIf,EAAQgP,MAAMC,IAAI,kBAAmBF,GAFzC,OAEZyP,EAFY,OAGlBL,EAAiBK,GACjBC,IAJkB,2CAAH,qDAOXC,EAAmB,uCAAG,8BAAApd,EAAA,6DACpByN,EAAS,CAAEwP,aAAcxd,EAAUgT,WAAazC,GAD5B,SAECtR,EAAQgP,MAAMC,IAAI,qBAAsBF,GAFzC,OAEpBiF,EAFoB,OAG1B3C,EAAY2C,GAHc,2CAAH,qDAoBnByK,EAAgB,WAAO,IAAD,EACpBE,EAAaT,EAAc,GAAGnd,SAC9B6d,EAAW,UAAG9e,EAAK6B,kBAAR,aAAG,EAAiBZ,SAEnCsd,EADCM,GAAcC,IAObjF,EAAS,uCAAG,oCAAArY,EAAA,sEACKtB,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAD1C,cACViD,EADU,gBAEMvF,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAFxD,OAEV6C,EAFU,OAGVgG,EAAa5F,EAAO/E,QACpBE,EAAayE,EAAQ3E,QACR,GAAd2K,GAAmC,GAAdzK,GACxBmH,EACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAIjBuI,GAAgB,KACN,UAAC7H,EAAK6B,kBAAN,aAAC,EAAiBmK,gBAU5BqQ,GAA2B,IAT3BtU,EACI,mCACJ,qBAAKzI,UAAU,uBAAf,wEAKAuI,GAAgB,IAvBF,2CAAH,qDA+Cf,OAjBA7E,qBAAU,WACLwB,GACHga,MAGA,CAACha,IAGHxB,qBAAU,WACLwB,GACHoa,MAGA,CAACpN,EAAYhN,IAKX,mCACE,sBAAKlF,UAAU,iBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,SACK8e,EAAc9O,KAAI,SAAA+C,GAAW,OAC1B,cAAC,GAAD,CACIpR,SAAUoR,EAAYpR,SACtBF,WAAYsR,EAAYtR,WACxB2L,aAAc2F,EAAY3F,aAC1BI,OAAQuF,EAAYvF,OACpBlG,QAASyL,EAAYzL,QACrBmF,IAAKsG,EAAYtG,IACjBgE,UAAasC,EAAY6H,UACzBrO,aAAcwG,EAAYxG,aAC1Be,MAAOyF,EAAYzF,MACnB9F,QAASuL,EAAYvL,QACrBE,SAAUqL,EAAYrL,SACtBE,QAASmL,EAAYnL,QACrBE,SAAUiL,EAAYjL,SACtBI,OAAQ6K,EAAY7K,OACpBF,QAAS+K,EAAY/K,eAIjC,qBAAKhI,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,oBAAf,WACFgf,GACA,wBACEhf,UAAU,uBACVI,QAAS,kBAAMma,KAFjB,0BAQM,qBAAKva,UAAU,kBAAf,SACK8e,EAAc9O,KAAI,SAAA+C,GAAW,OAC5B,cAAC,GAAD,cACAzL,QAASyL,EAAYzL,QACrBgG,MAAOyF,EAAYzF,MACnBF,aAAc2F,EAAY3F,aAC1BI,OAAQuF,EAAYvF,QAJpB,UAKSuF,EAAYzL,kBAK/B,qBAAKtH,UAAU,2BAAf,SACI,sBAAKA,UAAU,yBAAf,UACA,qBAAKA,UAAU,wBAAf,SACQ,+BAAK2B,EAAL,mBAER,sBAAK3B,UAAU,yBAAf,UACE,qBAAKA,UAAU,0BAAf,SACKgS,EAAShC,KAAI,SAAAuC,GAAQ,OAClB,qBAA0BvS,UAAU,mBAApC,SACE,cAAC,EAAD,CACA8E,MAAOyN,EAASzN,MAChBoC,QAASqL,EAASrL,QAClBjH,IAAKsS,EAASC,aACd7Q,SAAU4Q,EAAS5Q,SACnB6O,kBAAmB+B,EAAS9Q,WAC5BgP,UAAa8B,EAAS9B,UACtBlM,MAAOgO,EAAS5Q,SAChB0C,KAAMkO,EAASzN,MACfwL,WAAciC,EAASjC,WACvBlI,OAAUmK,EAASnK,UAXXmK,EAASzN,YAgBzB,sBAAK9E,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAkBI,QAAS,WA/I1D,GAAd8R,GAIHC,EADqBD,EAAa,IA4IJ,UAA8D,mBAAGpO,MAAM,6BAAvE,UACA,yBAAQ9D,UAAU,kBAAkBI,QAAS,WAvI3E+R,EADqBD,EAAa,IAwIJ,iBAAkE,mBAAGpO,MAAM,oDAUnGgZ,GACA,cAAC,GAAD,CACAzc,QAAS0c,EACTvM,kBAAmBsO,EAAc,GAAGrd,WACpCua,YAAa8C,EAAc,GAAGnd,WAG/B2G,GACG,cAAC,EAAD,CACAjI,QAASkI,EACTpI,QAASqI,U,OC7LNiX,OAjBf,SAA4B1f,GACxB,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKC,IAAKF,EAAM0B,eAEpB,sBAAKzB,UAAU,WAAf,UACI,6BAAKD,EAAM4B,WACX,oCAAO5B,EAAMka,eACb,qBAAKja,UAAU,gBAAf,SACI,6BAAKD,EAAM2f,qB,UC8ZhBC,OAlaf,WAAqB,IAAD,MAEhB,EAA0Bpf,cAAlBG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QACd,EAAoCE,qBAApC,mBAAO8e,EAAP,KAAmBC,EAAnB,KACA,EAA0C/e,qBAA1C,mBAAOgf,EAAP,KAAsBC,EAAtB,KACA,EAAmCjf,oBAAS,GAA5C,mBAAQkf,EAAR,KAAmBC,EAAnB,KACA,EAAmCnf,oBAAS,GAA5C,mBAAQof,EAAR,KAAmBC,EAAnB,KACA,EAAyCrf,oBAAS,GAAlD,mBAAQsf,EAAR,KAAsBC,EAAtB,KACA,EAAsCvf,qBAAtC,mBAAOwf,EAAP,KAAoBC,EAApB,KACA,EAAuCzf,oBAAS,GAAhD,mBAAQ0f,EAAR,KAAqBC,EAArB,KACA,EAAyC3f,qBAAzC,mBAAQ4f,EAAR,KAAsBC,EAAtB,KACA,EAA6C7f,oBAAS,GAAtD,mBAAQ8f,EAAR,KAAwBC,EAAxB,KACA,EAA2B/f,mBAAS,IAApC,mBAAQggB,EAAR,KAAeC,GAAf,KACA,GAA8BjgB,oBAAS,GAAvC,qBAAOkgB,GAAP,MAAgBC,GAAhB,MACA,GAAsCngB,mBAAS,GAA/C,qBAAOogB,GAAP,MAAoBC,GAApB,MACA,GAAkCrgB,oBAAS,GAA3C,qBAAOsgB,GAAP,MAAkBC,GAAlB,MAEA,GAAwCvgB,oBAAS,GAAjD,qBAAOwH,GAAP,MAAqBC,GAArB,MACA,GAA0CzH,qBAA1C,qBAAO0H,GAAP,MAAsBC,GAAtB,MAEM6T,GAAW,uCAAG,sBAAApa,EAAA,sDAChBuG,GACI,sBAAKzI,UAAU,sBAAf,qGAEI,wBAAQA,UAAU,mBAAmBI,QAASkhB,GAA9C,0BACA,wBAAQthB,UAAU,mBAAmBI,QAASmI,IAAgB,GAA9D,wBAGRA,IAAgB,GARA,2CAAH,qDAWX+Y,GAAU,uCAAG,sCAAApf,EAAA,6DAELqf,EAAe3gB,EAAQuI,OAAOC,OAAO,iBACrCoY,EAAmB,IAAI5gB,EAAQ2N,MAAMgT,IAC1B/S,QAAQ,WAAYkS,GAJ1B,SAKqBc,EAAiB9S,OALtC,UAKL+S,EALK,OAOmC,IADxCC,EAAeD,EAAkB,IACvBlf,WAAWof,gBAPhB,iBAQPD,EAAalF,UAAUpE,MAAK,SAACqE,GACzBpa,MAAM,oBACP,SAACqJ,GACArJ,MAAMqJ,MAXH,+BAcXgW,EAAa1X,IAAI,mBAAmB,GAdzB,UAeL0X,EAAavX,OAfR,eAgBX9H,MAAM,oBAhBK,UAiBLuf,KAjBK,eAsBTjS,EAAS,CAAElB,aAAe,GAChCtM,QAAQC,IAAIuN,GAvBG,UAwBO/O,EAAQgP,MAAMC,IAAI,mBAAoBF,GAxB7C,QAwBTtG,EAxBS,OAyBflH,QAAQC,IAAIiH,GAEWA,EACRmT,UAAUpE,MAAK,SAACqE,GAC3Bpa,MAAM,2CACP,SAACqJ,GACArJ,MAAMqJ,MA/BK,4CAAH,qDAmCV6O,GAAS,uCAAG,sCAAArY,EAAA,sEACOtB,EAAQoC,KAAKC,SAAS,CAACC,aAAc,+CAD5C,cACRiD,EADQ,gBAEQvF,EAAQoC,KAAKC,SAAS,CAACG,MAAM,MAAOF,aAAc,+CAF1D,UAER6C,EAFQ,OAGRgG,EAAa5F,EAAO/E,QACpBE,EAAayE,EAAQ3E,QACrBygB,EALQ,OAKKnhB,QALL,IAKKA,GALL,UAKKA,EAAM6B,kBALX,aAKK,EAAkBmK,iBAChCX,EAAa,KAASzK,EAAa,KAN1B,wBAOVmH,GACI,mCACA,sBAAKzI,UAAU,uBAAf,gFAEA,cAAC,IAAD,CAAM6D,GAAG,IAAT,SAAa,wBAAQ7D,UAAU,OAAlB,wCAIjBuI,IAAgB,GAfN,mBAgBH,GAhBG,WAkBRsZ,EAlBQ,wBAmBNpZ,GACI,mCACJ,sBAAKzI,UAAU,uBAAf,oEAEA,cAAC,IAAD,CAAM6D,GAAG,aAAT,SAAsB,wBAAQ7D,UAAU,OAAlB,gCAItBuI,IAAgB,GA3BV,mBA4BC,GA5BD,kCA8BH,GA9BG,4CAAH,qDAoCTuZ,GAAe,uCAAG,sBAAA5f,EAAA,sEACDqY,KADC,uCAGbyF,EAHa,uBAIZS,GAAe,GAJH,0BAOZJ,GAAgB,GAChBuB,KACAnB,GAAe,GATH,4CAAH,qDAcfsB,GAAkB,uCAAG,sBAAA7f,EAAA,sEACJqY,KADI,uCAGhB6F,EAHgB,uBAIfK,GAAe,GAJA,0BAOfR,GAAa,GACb+B,KACAvB,GAAe,GATA,4CAAH,qDAclBmB,GAAiB,uCAAG,4BAAA1f,EAAA,6DACtB+e,IAAW,GADW,SAEKrgB,EAAQgP,MAAMC,IAAI,qBAFvB,OAGF,eADdoS,EAFgB,UAItBpC,EAAcoC,GACdhC,GAAa,GACbE,GAAa,IAEa,GAAvB8B,EAAa9S,QACZ8R,IAAW,GATO,2CAAH,qDAajBe,GAAoB,uCAAG,4BAAA9f,EAAA,6DACzB+e,IAAW,GACXhB,GAAa,GAFY,SAGErf,EAAQgP,MAAMC,IAAI,wBAHpB,OAGnBoS,EAHmB,OAIzB9f,QAAQC,IAAI6f,EAAa9S,QACL,cAAjB8S,IACHlC,EAAiBkC,GACjB5B,GAAgB,GAChBF,GAAa,IAEa,GAAvB8B,EAAa9S,QACZ8R,IAAW,GAXU,2CAAH,qDAepBiB,GAAgB,uCAAG,4BAAAhgB,EAAA,sEACKtB,EAAQgP,MAAMC,IAAI,mBADvB,OACfqR,EADe,OAErB/e,QAAQC,IAAI8e,GACZC,GAAeD,GACZA,EAAc,GACbG,IAAa,GALI,2CAAH,qDAShBc,GAAkB,uCAAG,WAAMC,EAAQC,GAAd,iBAAAngB,EAAA,6DACvBye,EAAgB,GACVhR,EAAS,CAAEyS,OAAQA,GAFF,SAGOxhB,EAAQgP,MAAMC,IAAI,qBAAsBF,GAH/C,OAGjB2S,EAHiB,OAIvB/B,EAAe+B,GACfzB,EAAkBwB,GAClB5B,GAAe,GACfE,EAAgByB,GAPO,2CAAH,wDAUlBG,GAAgB,uCAAG,WAAMH,GAAN,iBAAAlgB,EAAA,6DACrBye,EAAgB,GACVhR,EAAS,CAAEyS,OAAQA,GAFJ,SAGSxhB,EAAQgP,MAAMC,IAAI,mBAAoBF,GAH/C,cAGf2S,EAHe,OAIrB/B,EAAe+B,GAJM,SAKfE,GAAqBJ,GALN,OAMrB3B,GAAe,GACfE,EAAgByB,GAChBnC,GAAa,GACbE,GAAa,GATQ,4CAAH,sDAahBqC,GAAoB,uCAAG,WAAMJ,GAAN,eAAAlgB,EAAA,6DACrBoM,EAAQ,IAAI1N,EAAQ2N,MAAM,YADL,SAEAD,EAAMmU,YAFN,cAGZC,GAAG,SAAhB,uCAA0B,WAAMjG,GAAN,yBAAAva,EAAA,sDAChBygB,EAASlG,EAAOmG,IAAI,UACpBC,EAAWF,EAAO9d,GACpBie,EAAgBrG,EAAOmG,IAAI,kBACzBG,EAAUtG,EAAOmG,IAAI,QACrBI,EAAavG,EAAOmG,IAAI,WACxBK,EAAUxG,EAAOmG,IAAI,QACxBC,GAAYT,GACX7B,GAAe,SAAA2C,GAAI,4BAAQA,GAAR,CACf,CACI1Z,KAAMuZ,EACNI,eAAgBL,EAChB7G,KAAMgH,EACN/G,QAAS8G,QAbC,2CAA1B,uDAHyB,2CAAH,sDAsBpBI,GAAa,uCAAG,kCAAAlhB,EAAA,sEAERqf,EAAe3gB,EAAQuI,OAAOC,OAAO,iBACrCoY,EAAmB,IAAI5gB,EAAQ2N,MAAMgT,IAC1B/S,QAAQ,WAAYkS,GAJvB,SAKkBc,EAAiB9S,OALnC,cAKR+S,EALQ,QAMRC,EAAeD,EAAkB,IAC1BzX,IAAI,mBAAmB,GACpC0X,EAAa1X,IAAI,eAAe,GARlB,UASR0X,EAAavX,OATL,eAUd9H,MAAM,kDACNoe,GAAe,GACfJ,GAAgB,GAZF,UAaR2B,KAbQ,0DAed3f,MAAM,EAAD,IAfS,0DAAH,qDAmBbghB,GAAc,uCAAG,kCAAAnhB,EAAA,sEAETqf,EAAe3gB,EAAQuI,OAAOC,OAAO,iBACrCoY,EAAmB,IAAI5gB,EAAQ2N,MAAMgT,IAC1B/S,QAAQ,WAAYkS,GAJtB,SAKiBc,EAAiB9S,OALlC,cAKT+S,EALS,QAMTC,EAAeD,EAAkB,IAC1BzX,IAAI,mBAAmB,GACpC0X,EAAa1X,IAAI,eAAe,GARjB,UAST0X,EAAavX,OATJ,eAUf9H,MAAM,iCACNoe,GAAe,GACfJ,GAAgB,GAZD,UAaT2B,KAbS,0DAef3f,MAAM,EAAD,IAfU,0DAAH,qDAmBdihB,GAAS,uCAAG,wDAAAphB,EAAA,sEAEJqf,EAAe3gB,EAAQuI,OAAOC,OAAO,iBACrCoY,EAAmB,IAAI5gB,EAAQ2N,MAAMgT,IAC1B/S,QAAQ,WAAYkS,GAJ3B,SAKsBc,EAAiB9S,OALvC,cAKJ+S,EALI,OAMJC,EAAeD,EAAkB,GAGnC8B,GADA,UAAA7B,EAAanf,kBAAb,eAAyBihB,MAAM3e,KAAMnE,EAAKmE,GACpC,UAAG6c,EAAanf,kBAAhB,aAAG,EAAyBkhB,MAAM5e,GAElC,UAAG6c,EAAanf,kBAAhB,aAAG,EAAyBihB,MAAM3e,GAEtC4W,GAAU,IAAIhS,MAAOQ,mBAAmB,QAAS,CAACyR,KAAM,UAAWC,MAAO,OAAQC,IAAK,YACvFC,GAAU,IAAIpS,MAAOqS,mBAAmB,SACxCnM,EAAS,CAAEoM,KAAI,UAAErb,EAAK6B,kBAAP,aAAE,EAAiBZ,SAAUwhB,eAAc,UAAEziB,EAAK6B,kBAAP,iBAAE,EAAiBd,kBAAnB,aAAE,EAA6Be,KAAMqB,GAAI0f,EAAQ/Z,KAAMiS,EAASQ,KAAMJ,EAASK,QAAS4E,EAAOsB,OAAQV,EAAa7c,IAf1K,UAgBYjE,EAAQgP,MAAMC,IAAI,YAAaF,GAhB3C,eAgBJuM,EAhBI,OAiBOwF,EAAatX,SAAS,YAC9BC,IAAI6R,GAlBH,UAmBJwF,EAAavX,OAnBT,QAoBV4W,GAAS,IApBC,kDAsBV1e,MAAM,EAAD,IAtBK,0DAAH,qDAkCf,OARAqB,qBAAU,WACHhD,IACHkhB,KACAM,QAED,CArLU,IAyLT,sBAAKliB,UAAU,kBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,wBAAQA,UAAU,2BAA2BI,QAAS,kBAAM0hB,MAA5D,SAA+E,4CAC/E,mCACI,yBAAQ9hB,UAAU,2BAA0BI,QAAS,kBAAM2hB,MAA3D,UACI,+BAAM,4CACTX,IAAa,sBAAMphB,UAAU,cAAhB,SAA+BkhB,aAIrD,sBAAKlhB,UAAU,iCAAf,UACMggB,GACF,qBAAIhgB,UAAU,8BAAd,UACKghB,IAAW,qBAAKhhB,UAAU,mCAAmCI,QAAS,kBAAM6f,GAAa,IAA9E,yBACXL,EAAW5P,KAAI,SAAAoP,GAAO,OACvB,qBAA4Bpf,UAAU,0BAA0BI,QAAS,kBAAMmiB,GAAiBnD,EAAQgD,SAAxG,SACI,cAAC,GAAD,CACIzgB,SAAUyd,EAAQzd,SAClBF,WAAY2d,EAAQ3d,WACpBwY,YAAamF,EAAQnF,YACrByF,UAAWN,EAAQ5V,KACnBka,WAAYtE,EAAQnF,eANlBmF,EAAQzd,gBAYpBye,GACF,qBAAIpgB,UAAU,8BAAd,UACCghB,IAAW,qBAAKhhB,UAAU,oCAAoCI,QAAS,kBAAMigB,GAAgB,IAAlF,yBACXP,EAAc9P,KAAI,SAAAoP,GAAO,OACxB,qBAA4Bpf,UAAU,0BAA0BI,QAAS,kBAAM+hB,GAAmB/C,EAAQgD,OAAQhD,EAAQiD,aAA1H,SACI,cAAC,GAAD,CACE1gB,SAAUyd,EAAQzd,SAClBF,WAAY2d,EAAQ3d,WACpBwY,YAAamF,EAAQnF,YACrByF,UAAWN,EAAQ5V,KACnBka,WAAYtE,EAAQnF,eANhBmF,EAAQzd,sBAc5B,sBAAK3B,UAAU,iBAAf,UACI,sBAAKA,UAAU,8BAAf,UAII,0CACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,yCAAyCC,IAAG,UAAES,EAAK6B,kBAAP,iBAAE,EAAiBd,kBAAnB,aAAE,EAA6Be,OAC1F,uCAAK9B,EAAK6B,kBAAV,aAAK,EAAiBZ,iBAGlC,qBAAK3B,UAAU,mCAAf,SACUwgB,GACE,qBAAKxgB,UAAU,qCAAf,SACI,qBAAKA,UAAU,yCAAf,SACI,cAAC,KAAD,CAAgB2jB,aAAa,EAA7B,SACKrD,EAAYtQ,KAAI,SAAAkM,GAAO,OACpB,sBAA4Blc,UAAU,uCAAtC,UACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,4CAAf,SACI,qBAAKA,UAAU,oCAAoCC,IAAKic,EAAQiH,mBAEpE,qBAAKnjB,UAAU,sCAAf,SACI,4BAAIkc,EAAQA,eAGpB,qBAAKlc,UAAU,sCAAf,SACI,8BAAIkc,EAAQ1S,KAAZ,KAAoB0S,EAAQD,YAV1BC,EAAQva,qBAoB9C,sBAAK3B,UAAU,wBAAf,UACKkgB,GACD,qCACI,uBACIxV,KAAK,OACLS,YAAY,YACZnL,UAAU,4BACVoL,MAAO0V,EACPhW,SAAU,SAACO,GAAD,OAAU0V,GAAS1V,EAAMC,cAAcF,QACjD6J,WAAY,SAAC5J,GAA6B,UAAdA,EAAM6J,KAAkBoO,QAGxD,qBAAKtjB,UAAU,8BAAf,SACI,mBAAG8D,MAAM,qBAAqB1D,QAAS,kBAAMkjB,UAEjD,qBAAKtjB,UAAU,8BAAf,SACI,mBAAG8D,MAAM,mBAAmB1D,QAAS,kBAAMkc,aAKhD8D,GAAgBI,GACnB,sBAAKxgB,UAAU,wCAAf,WACM4gB,GACF,qEAECA,GACD,qCACA,wBAAQ5gB,UAAU,OAAOI,QAAS,kBAAKgjB,MAAvC,oBACA,wBAAQpjB,UAAU,OAAOI,QAAS,kBAAKijB,MAAvC,oCAUf/a,IACD,cAAC,EAAD,CACAjI,QAASkI,GACTpI,QAASqI,SCrXNob,OA/Bf,WACE,IAAMC,EAAUC,cAEhB,OACE,mCACE,eAAC,IAAD,CAAQD,QAAUA,EAAlB,UACA,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOxf,KAAK,IAAI0f,OAAK,EAACC,UAAWrd,IACjC,cAAC,IAAD,CAAOtC,KAAK,YAAY0f,OAAK,EAACC,UAAWpd,IACzC,cAAC,IAAD,CAAOvC,KAAK,YAAY0f,OAAK,EAACC,UAAW7O,IACzC,cAAC,IAAD,CAAO9Q,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAY0f,OAAK,EAACC,UAAWxF,KACzC,cAAC,IAAD,CAAOna,KAAK,sBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAa0f,OAAK,EAACC,UAAW7Q,IAC1C,cAAC,IAAD,CAAO9O,KAAK,6BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAQ0f,OAAK,EAACC,UAAWrE,KACrC,cAAC,IAAD,CAAOtb,KAAK,UAAU0f,OAAK,EAACC,UAAWvO,cC/BjDwO,IAASC,OACP,cAAC,IAAD,CAAiBC,MAJP,2CAIqBC,UAHjB,8CAGd,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.92f55938.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roundlogo.befa4d11.png\";","export default __webpack_public_path__ + \"static/media/eViralLogo2.5c4556ad.png\";","export default __webpack_public_path__ + \"static/media/beviral.83bfabd5.png\";","export default __webpack_public_path__ + \"static/media/defaultProfile.c7fa3ad6.png\";","export default __webpack_public_path__ + \"static/media/metamask.2c7ea74a.png\";","export default __webpack_public_path__ + \"static/media/walletconnect.00a434b3.png\";","import React, {useState} from 'react';\r\nimport Logo from '../img/roundlogo.png';\r\nimport './Alert.css';\r\n\r\nfunction Alert(props) {\r\n    const notVisible = (visble) => props.visible(false);\r\n    return (\r\n        <>\r\n            <div className=\"alert-background\">\r\n                <div className=\"alert-container\">\r\n                    <div className=\"alert-wrapper\">\r\n                        <div className=\"alert-title\">\r\n                            <img className=\"alertLogo\" src={Logo} ></img>\r\n                            <h3>MESSAGE</h3>\r\n                        </div>\r\n                        <div className=\"alert-options\">\r\n                            {props.content}\r\n                        </div>\r\n                        <div className=\"alert-footer\">\r\n                            <button  onClick={() => {props.visible(false)}}>CLOSE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { Button } from './Button';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport roundLogo from '../img/roundlogo.png';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport avatar from '../img/defaultProfile.png';\r\nimport mmLogo from '../img/metamask.png';\r\nimport wcLogo from '../img/walletconnect.png';\r\nimport './DropdownMenu.css';\r\nimport './NavbarConnectMenu.css';\r\nimport Alert from './Alert';\r\n\r\nfunction Navbar() {\r\n    const { authenticate, isAuthenticated, user, logout, auth, Moralis} = useMoralis();\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const [dropdown, setDropdown] = useState(false);\r\n    const [balance, setBalance] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    const [profilePic, setProfilePic] = useState(avatar);\r\n    const [username, setUsername] = useState(\"Username\");\r\n    const [displayConnect, setDisplayConnect] = useState(true);\r\n    \r\n\r\n    const [ connectMenu, setOpenConnectMenu ] = useState(false);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const authenticateUserMM = async () =>{ \r\n        console.log(1);\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate();\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const authenticateUserWC = async () =>{\r\n        if(!isAuthenticated){\r\n            try{\r\n                await authenticate({ provider: \"walletconnect\" });                \r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n            finally {\r\n                if(isAuthenticated){\r\n                    renderBalance();               \r\n                    setProfilePic(user.attributes?.profilePic?._url);\r\n                    setUsername(user.attributes?.username);  \r\n                }\r\n            }                  \r\n        }\r\n        setOpenConnectMenu(false);\r\n    }\r\n\r\n    const logoutUser = async () => {\r\n        await logout();\r\n        setDisplayConnect(true);\r\n        setProfilePic(avatar);\r\n        const goHome = () => {window.location.href=\"/\"};\r\n        goHome();\r\n    }\r\n    \r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**18);\r\n        const bBalance = beViralBalance.balance/(10**18);\r\n        const balance = (eBalance.toFixed(3) + \" Bil\");\r\n        const bvBalance = (bBalance.toFixed(3) + \" Bil\");\r\n        setBalance(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <=960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n    \r\n    const getVersion = () => {\r\n        console.log(Moralis.CoreManager.get(\"VERSION\"));\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setProfilePic(user.attributes?.profilePic?._url);\r\n            setUsername(user.attributes.username);\r\n            renderBalance();\r\n          }\r\n        }, [user]);\r\n\r\n    window.addEventListener('resize', showButton);\r\n        \r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-nav\">\r\n                    <div className='menu-icon' onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>                        \r\n                <ul className=\"navbar-logo\">\r\n                    <Link to=\"/\" className=\"navbar-logo\">  \r\n                    <div className=\"viralcrypto\">\r\n                        <h1> viralcrypto </h1>\r\n                        </div>                       \r\n                        {/* <img className=\"roundLogo\" src={roundLogo} alt=\"\" />                   */}\r\n                    </Link>                                      \r\n                </ul>\r\n\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-home\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/projects' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-tasks\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/profiles' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-people-arrows\"></i>\r\n                            </Link>\r\n                        </li> \r\n                        \r\n                        {user &&\r\n                        <li className='nav-item' onClick={closeMobileMenu}>\r\n                            <Link to='/chat' className='nav-links' >\r\n                                <i class=\"far fa-comments\"></i>\r\n                            </Link>\r\n                        </li>\r\n                        }\r\n                        <li className='nav-item'>\r\n                            <Link to='/wallet' className='nav-links' onClick={closeMobileMenu}>\r\n                                <i class=\"fas fa-wallet\"></i>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n               \r\n                    \r\n                <div className=\"navbar-user\">\r\n                    <li className='nav-item'>                        \r\n                        <div className=\"avatarPic-wrapper\">\r\n                            <img className=\"avatarPic\" src={profilePic}/>\r\n                        </div>                                                \r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        { isAuthenticated && \r\n                        <div className=\"caret\">\r\n                            <i class=\"fas fa-caret-down\" onClick={() => {setDropdown(!dropdown)}}>\r\n                                {dropdown && \r\n                                <div className=\"dropdown\">\r\n                                    <li className=\"dropdown-item-user\">\r\n                                        <span className=\"dropdown-icon\"></span>\r\n                                        <img className=\"avatarPic\" src={profilePic}/>\r\n                                        <span className=\"dropdown-username\"> {username}</span>\r\n                                        <span className=\"dropdown-right-icon\"></span>\r\n                                    </li>\r\n                                    <li className=\"dropdown-item\">\r\n                                        <div className=\"wallet-balances\">\r\n                                            <div className=\"showBalance\">\r\n                                            {balance}\r\n                                            <img className=\"eViralLogo-Dropdown\" src={eViralLogo} alt=\"\" ></img>\r\n                                            </div>\r\n                                            <div className=\"showBalanceBSC\">\r\n                                            {balanceBSC}\r\n                                            <img className=\"eViralLogo-Dropdown\" src={beViralLogo} alt=\"\" ></img>\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </li>                                \r\n                                    <Link to=\"/myprofile\" className=\"dropdown-item\" >\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"far fa-user\"></i>\r\n                                        </span>\r\n                                        My Profile\r\n                                    </Link>\r\n                                    \r\n                                    <Link to=\"/chat\" className=\"dropdown-item\">\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"fas fa-comments\"></i>\r\n                                        </span>\r\n                                        Messages\r\n                                    </Link>\r\n                                    <Link to=\"/wallet\" className=\"dropdown-item\">\r\n                                        <span className=\"dropdown-icon\">\r\n                                        <i class=\"fas fa-wallet\"></i>\r\n                                        </span>\r\n                                        My Wallet\r\n                                    </Link>\r\n                                    \r\n                                    <li className=\"dropdown-logout\">\r\n                                        <button className=\"btn1  logout-btn\" onClick={() => {setDropdown(!dropdown)}}>Close</button>                                            \r\n                                            <button className=\"btn2 logout-btn\" onClick={() => logoutUser()}>\r\n                                            Log&nbsp;Out\r\n                                            <i class=\"fas fa-sign-out-alt\"></i>\r\n                                        </button>                                        \r\n                                    </li>\r\n                                </div>                                 \r\n                                }\r\n                            </i>\r\n                        </div>\r\n                        }\r\n                    </li>\r\n                    { !isAuthenticated && <button className='btn1'  onClick={() => setOpenConnectMenu(true)}>\r\n                        Connect\r\n                    </button>  } \r\n                    { connectMenu &&\r\n                    <div className=\"connectMenu-background\">\r\n                        <div className=\"connectMenu-container\">\r\n                            <div className=\"connectMenu-wrapper\">\r\n                                <div className=\"connectMenu-title\">\r\n                                    <h3>Connect with Web3</h3>\r\n                                </div>\r\n                                <div className=\"connectMenu-options\">\r\n                                    <div className=\"connectMenu-metamask\"onClick={() => authenticateUserMM()}>                                        \r\n                                        <button  className=\"connectMenu-btn\"><img className=\"metamask-logo\" src={mmLogo} /></button>\r\n                                    </div>\r\n                                    <div className=\"connectMenu-walletConnect\"  >\r\n                                        <button className=\"connectMenu-btn\" ><img className=\"walletconnect-logo\" src={wcLogo} onClick={() => authenticateUserWC()}/></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"connectMenu-footer\">\r\n                                    <button  onClick={() => setOpenConnectMenu(false)}>CLOSE</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                    }                                     \r\n                </div>                                                 \r\n                </div>\r\n                                          \r\n            </nav>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n    return (\r\n        <>\r\n            <li className='cards__item'>\r\n                <Link className='cards__item__link' to={props.path} target=\"_blank\">\r\n                    <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n                        <img src={props.src} alt='' className='cards__item__img'/>\r\n                    </figure>\r\n                    <div className='class__item__info'>\r\n                        <h5 className='cards__item__text'>{props.text}</h5>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\nimport CardItem from './CardItem';\r\nimport './Cards.css';\r\n\r\nfunction Cards() {\r\n    return (\r\n        <div className='cards'>\r\n            <h1>Evolving eViral Partners</h1>\r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                    <ul className='cards__items'>\r\n                        <CardItem \r\n                        src='images/kyubiworld.png'\r\n                        text='Kyubi World - NFTs: A place for aspiring artists to flourish'\r\n                        label='Kyubi World'\r\n                        path={{ pathname: \"https://www.kyubi.world\"}} \r\n                        />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './OnRamper.css';\r\n\r\n\r\nexport default function OnRamper() {\r\n    return (\r\n        <div>\r\n            <iframe\r\n                className=\"onramper-widget\"\r\n                defaultCrypto=\"ETH\"\r\n                id=\"onramper-widget\"\r\n                title=\"Onramper widget\"\r\n                frameborder=\"no\"\r\n                allow=\"accelerometer; autoplay; camera; gyroscope; payment;\"                \r\n                src=\"https://widget.onramper.com?color=266678&apiKey=pk_test_uJQ9wgwePDgiietYBRP6uhVvx_7RJTULFfPUk04BUq40\">\r\n                </iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './TokenPrices.css';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport { Moralis } from 'moralis';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nfunction TokenPrices() {\r\n    const { isInitialized } = useMoralis();\r\n\r\n\r\n    const [eViralPrice, setEViralPrice] = useState(0);\r\n    const [beViralPrice, setBEViralPrice] = useState(0);\r\n    const init = 0;\r\n\r\n    const getPrices = async() => {\r\n\r\n        const options1 = {\r\n            address: \"0x7cec018ceef82339ee583fd95446334f2685d24f\",\r\n            chain: \"bsc\",\r\n            exchange: \"pancakeswap-v2\"\r\n        };\r\n        const bscPrice = await Moralis.Web3API.token.getTokenPrice(options1);\r\n        const beViral = bscPrice.usdPrice.toFixed(10);\r\n        console.log(`beViral: ${beViral}`)\r\n        setBEViralPrice(beViral);\r\n        const options2 = {\r\n            address: \"0x7cec018ceef82339ee583fd95446334f2685d24f\",\r\n            chain: \"eth\",\r\n            exchange: \"uniswap-v2\"\r\n        };\r\n        const ethPrice = await Moralis.Web3API.token.getTokenPrice(options2);\r\n        const eViral = ethPrice.usdPrice.toFixed(10);\r\n        console.log(`eViral: ${eViral}`)\r\n        setEViralPrice(eViral);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n         getPrices();\r\n        }\r\n      }, [isInitialized])\r\n\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"tokenPrices\">\r\n                <div className=\"tokenPrices-wrapper\">\r\n                    <div className=\"eViral-price\">\r\n                        <img className=\"eViralLogo\" src={eViralLogo}/>${eViralPrice}\r\n                    </div>\r\n                    <div className=\"beViral-price\">\r\n                        <img className=\"eViralLogo\" src={beViralLogo}/>${beViralPrice}\r\n                    </div>\r\n                </div>\r\n            </div>     \r\n        \r\n    )\r\n}\r\n\r\nexport default TokenPrices\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nimport './HeroSection.css';\r\nimport { ByMoralis } from 'react-moralis';\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport Cards from './Cards';\r\n\r\nimport OnRamper from './OnRamper';\r\nimport TokenPrices from './TokenPrices';\r\nimport FortmaticWallet from './FortmaticWallet';\r\nimport { Moralis } from 'moralis';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nfunction HeroSection() {\r\n    \r\n    const { isInitialized, user } = useMoralis();\r\n    const [ chain, setChain] = useState();\r\n    const [ nativeToken, setNativeToken] = useState();\r\n    const [ amount, setAmount] = useState(0);\r\n    \r\n    const viralToken = \"0x7CeC018CEEF82339ee583Fd95446334f2685d24f\";\r\n    const eth = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\r\n    const bnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n    const nativeToken1Inch = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\r\n\r\n    // const options = {\r\n    //     chain: chain,\r\n    //     fromTokenAddress: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\r\n    //     toTokenAddress: viralToken,\r\n    //     amount: Number(Moralis.Units.ETH(\"0.00000001\")),\r\n    //     fromAddress: Moralis.User.current().get(\"ethAddress\"),\r\n    //     slippage: 19        \r\n    // }\r\n    \r\n    // var transact = async() => { \r\n    //     var receipt = await dex.swap(options);\r\n    //     console.log(receipt);\r\n    // };\r\n\r\n    // let dex;\r\n    // const init = async() => { \r\n    //     await Moralis.enable;\r\n    //     await Moralis.initPlugins();\r\n    //     dex = Moralis.Plugins.oneInch;\r\n    //  };\r\n\r\n    // useEffect(() => {\r\n    //     if(isInitialized){\r\n    //         init();\r\n    //         setChain(\"eth\");\r\n    //     }        \r\n    // }, [isInitialized])\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"background-homepage\">\r\n            <video src=\"/videos/eViral.mp4\" classname=\"background-mp4\" autoPlay loop muted />\r\n                <div className='hero-container'>\r\n                    <TokenPrices />\r\n                    <div className=\"homepage-welcome\">\r\n                        {/* <h1> Viral Crypto </h1> */}\r\n                        <h2 className=\"hero-text\">Connecting Innovators and Influencers in DeFI</h2>\r\n                        <p className=\"hero-text\">Own eViral or BeViral and join the network of independent blockchain creators.</p>\r\n                    </div>\r\n                    <div className=\"homepage-buttons\">\r\n                        <Link to='/projects' className=\"homepage-button btn2\">Discover&nbsp;Projects</Link>\r\n                        <Link to='/profiles' className=\"homepage-button btn2\">Find&nbsp;Profiles</Link>\r\n                    </div>\r\n                    <div className=\"homepage-onRamp\">\r\n                        <div className=\"homepage-onRamp-text\">\r\n                            <h3>\r\n                                New to Crypto?  No problem.\r\n                            </h3>\r\n                            <h4>\r\n                                You'll need ETH to buy eViral, or BUSD to buy beViral.\r\n                            </h4>\r\n                            {/* <FortmaticWallet/> */}\r\n                        </div>\r\n                        <OnRamper/>\r\n                    </div>\r\n                {/* <div className=\"token-swap\">\r\n                    <button onClick={0}>Swap</button>\r\n                </div> */}\r\n                <div className=\"tokenIframes\">\r\n                    <div className=\"tokenIframes-wrapper\">\r\n                        <div className=\"eViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={eViralLogo}/>Viral Ethereum</h3>\r\n                            <iframe\r\n                                src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"beViralIframe\">\r\n                            <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={beViralLogo}/>Viral Binance</h3>\r\n                            <iframe\r\n                                src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Cards/>\r\n                <div className=\"byMoralis\">\r\n                    <ByMoralis  width={300} variant=\"dark\" />\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeroSection;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport HeroSection from '../HeroSection';\r\n\r\nfunction Home () {\r\n    return (\r\n        <>\r\n            <HeroSection />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Cards from '../Cards';\r\nimport '../../components/Platform.css';\r\n\r\nimport eViralLogo from \"../../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../../img/beviral.png\";\r\n\r\nfunction Platform() {\r\n\r\n    \r\n    return (\r\n        <div className=\"platform-background\">\r\n            <Cards/>\r\n            <div className=\"tokenIframes\">\r\n                <div className=\"tokenIframes-wrapper\">\r\n                <div className=\"eViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={eViralLogo}/>Viral Ethereum on UniswapV2</h3>\r\n                    <iframe\r\n                        src=\"https://app.uniswap.org/#/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f&use=V2\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                <div className=\"beViralIframe\">\r\n                    <h3 className=\"iframe-title\">Buy <img className=\"eViralLogo\" src={beViralLogo}/>Viral Binance on PancakeSwapV2</h3>\r\n                    <iframe\r\n                        src=\"https://pancakeswap.finance/swap?outputCurrency=0x7cec018ceef82339ee583fd95446334f2685d24f\"\r\n                        height=\"660px\"\r\n                        id=\"myId\"\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Platform;\r\n","export default __webpack_public_path__ + \"static/media/defaultLandscape.61b5b0db.jpg\";","export default __webpack_public_path__ + \"static/media/construction.cfb1328d.png\";","import React, { useState } from 'react';\r\nimport './CreateProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport construction from  \"../img/construction.png\";\r\nimport Alert from './Alert';\r\n\r\nfunction CreateNewProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState();\r\n    const [summary, setSummary] = useState();\r\n    const [description, setDescription] = useState();\r\n\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const [isLive, setIsLive] = useState(false);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(construction);\r\n\r\n    const createNewProject = async () => {\r\n        try {\r\n            const newProject = Moralis.Object.extend(\"Projects\");\r\n            const project = new newProject();\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            const date = new Date();\r\n            const currentUser = await Moralis.User.current();\r\n            const username = currentUser.attributes.username;\r\n            const profilePic = currentUser.attributes.profilePic._url;\r\n            const userObjectId =currentUser.attributes.userObjectId;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('creator', currentUser);\r\n            project.set(\"createdBy\", username);\r\n            project.set(\"creatorProfilePic\", profilePic);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set('date', date.toLocaleDateString());\r\n            project.set(\"creatorId\", userObjectId);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            const relation = currentUser.relation(\"projects\");\r\n            relation.add(project);\r\n            user.save();\r\n            setAlertContents(\"New Project created!\");\r\n            setAlertVisible(true);\r\n            (props.closeCreateProjectMenu(false));\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Create a Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a Cover Photo<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                                 \r\n                                <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Name<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder=\"Create a title\" value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 2000 characters\" maxLength={2000} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <input type=\"button\" className=\"submit-form btn2\" value=\"Create Project\" onClick={createNewProject} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default CreateNewProject\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport eViralLogo from \"../img/eViralLogo2.png\";\r\nimport beViralLogo from \"../img/beviral.png\";\r\nimport defaultProfile from \"../img/defaultProfile.png\";\r\nimport defaultLandscape from \"../img/defaultLandscape.jpg\";\r\nimport Alert from './Alert';\r\nimport CreateNewProject from './CreateProject';\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    const { user, Moralis } = useMoralis();   \r\n    const { error, isUploading, moralisFile, saveFile, } = useMoralisFile();\r\n\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [landscape, setLandscape] = useState(\"\");\r\n    \r\n    const [balanceETH, setBalanceETH] = useState(0);\r\n    const [balanceBSC, setBalanceBSC] = useState(0);\r\n    \r\n    const [changeProfilePicMenu, setOpenChangeProfilePicMenu] = useState(false);\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    const init = 0;\r\n    \r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n    };\r\n\r\n    \r\n    const onSubmitPhoto = async (e) => {\r\n        const file = photoFile;\r\n        const name = photoFileName;\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        user.set(\"profilePic\", fileIpfs);\r\n        await user.save();\r\n        setProfilePic(user.attributes.profilePic._url);\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n\r\n    const renderBalance = async () => {\r\n        const eViralBalance = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViralBalance = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const eBalance = eViralBalance.balance/(10**18);\r\n        const bBalance = beViralBalance.balance/(10**18);\r\n        const balance = (eBalance.toFixed(3));\r\n        const bvBalance = (bBalance.toFixed(3));\r\n        setBalanceETH(balance);\r\n        setBalanceBSC(bvBalance);\r\n    }\r\n\r\n    const editProfileCheck = async() => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents( \r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>);\r\n            setAlertVisible(true);\r\n        } else {\r\n            props.openEditProfileMenu(true);\r\n        }\r\n    }\r\n\r\n    const createProjectCheck = () => {\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n        }  else \r\n        if (!user.attributes?.profileCreated) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.                \r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n        } else {\r\n            props.openCreateProjectMenu(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            if(typeof user.attributes?.profilePic?._url === 'undefined') {\r\n                setProfilePic(defaultProfile);\r\n            } else {\r\n                setProfilePic(user.attributes?.profilePic?._url);\r\n            }\r\n            if(typeof user.attributes?.landscapePic?._url === 'undefined') {\r\n                setLandscape(defaultLandscape);\r\n            } else {\r\n                setLandscape(user.attributes?.landscapePic?._url);\r\n            }          \r\n          \r\n          renderBalance();\r\n        }\r\n      }, [init]);\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"profile-container-wrapper\">\r\n                <div className=\"profile-wrapper\">\r\n                    <div className=\"profile-background\">\r\n                        <img className='landscape-pic' src={landscape} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"profile-header\">\r\n                        <div className=\"profile-pic-container\"onClick={() => setOpenChangeProfilePicMenu(true)}>\r\n                            <img className=\"profile-pic\" src={profilePic} alt=\"\" id=\"profilePic\" />\r\n                            <div className=\"middle-of-profilePic\">                                \r\n                                    <i class=\"fas fa-camera-retro\"></i>                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-summary\">\r\n                            <h2 className=\"profile-page-username\"> {user?.attributes?.username} </h2>\r\n                            <p className=\"profile-page-bio\">{user?.attributes?.bio}</p>\r\n                \r\n                        </div>\r\n                \r\n                    </div>\r\n                 <div className=\"edit-profile-wrapper\">\r\n                    <div className=\"profile-page-balances\">\r\n                        <div className=\"profile-balances-wrapper\">\r\n                            <div className=\"showProfileBalance\">\r\n                                <p>{balanceETH}&nbsp;Bil</p>\r\n                                <img className=\"logo-balance-display\" src={eViralLogo} alt=\"\" ></img>\r\n                            </div>\r\n                            <div className=\"showProfileBalanceBSC\">\r\n                                <p>{balanceBSC}&nbsp;Bil</p>\r\n                                <img className=\"logo-balance-display\" src={beViralLogo} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-header-btns\">\r\n                        <button className=\"create-project-button btn1\" onClick={createProjectCheck}>\r\n                        <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Create&nbsp;Project</span>\r\n                        </button>\r\n                        <button className=\"edit-profile-button btn2\" onClick={editProfileCheck}>\r\n                        <i class=\"fas fa-pen\"></i>\r\n                            <span>Edit&nbsp;Profile</span>\r\n                        </button>\r\n                    </div>                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n            {changeProfilePicMenu &&\r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-profilepic-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\">Choose a Profile Picture</h3>\r\n                        <span className=\"exitMenu\" onClick={() => {setOpenChangeProfilePicMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={profilePic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">\r\n                            <form onSubmit={onSubmitPhoto}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"profilePhoto\" className=\"form-label\">Select Image File</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"profilePhoto\" onChange={onChangePhoto} />\r\n                                </div>\r\n                                <div className=\"change-profile-pic-footer\">\r\n                                    <button className=\"btn1\" onClick={()=>{setOpenChangeProfilePicMenu(false)}}>Close</button>\r\n                                    <input type=\"button\" value=\"Upload\" className=\"upload-profilePic-button btn2\" onClick={onSubmitPhoto} />\r\n                                </div>\r\n                            </form>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            }\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport './User.css';\r\nimport './UpdateProfile.css';\r\nimport Alert from './Alert';\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const { user, setUserData, Moralis } = useMoralis();\r\n    const { error, isUploading, moralisFile, saveFile, } = useMoralisFile();\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();    \r\n    \r\n    const [landscapeFile, setLandscapeFile] = useState();    \r\n    const [landscapeFileName, setLandscapeFileName] = useState();  \r\n    const [landscapePic, setLandscapePic] = useState();\r\n\r\n    const [username, setUsername] = useState();\r\n    const [userLocation, setUserLocation] = useState();\r\n    const [story, setStory] = useState();\r\n    const [skills, setSkills] = useState();\r\n    const [bio, setBio] = useState();\r\n    const [website, setWebsite] = useState();\r\n    const [twitter, setTwitter] = useState();\r\n    const [telegram, setTelegram] = useState();\r\n    const [discord, setDiscord] = useState();\r\n    const [linkedIn, setLinkedIn] = useState();\r\n    const [youtube, setYoutube] = useState();\r\n    const [twitch, setTwitch] = useState();\r\n    const init = 0;\r\n\r\n    const checkProfileCreated = () => {\r\n        const profileCreated = (user.attributes?.profileCreated);\r\n        if(profileCreated){\r\n            setUsername(user.attributes?.username);\r\n            setLandscapePic(user.attributes?.landscapePic?._url);\r\n            setUserLocation(user.attributes?.userLocation);\r\n            setStory(user.attributes?.story);\r\n            setSkills(user.attributes?.skills);\r\n            setBio(user.attributes?.bio);\r\n            setWebsite(user.attributes?.website);\r\n            setTwitter(user.attributes?.twitter);\r\n            setTelegram(user.attributes?.telegram);\r\n            setLinkedIn(user.attributes?.linkedIn);\r\n            setDiscord(user.attributes?.discord);\r\n            setYoutube(user.attributes?.youtube);\r\n            setTwitch(user.attributes?.twitch);\r\n\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            checkProfileCreated();\r\n        }\r\n      }, [init]);\r\n\r\n\r\n    const handleSave = async() => {\r\n        if( (username === \"\") ) { \r\n            return;\r\n        }\r\n        await setUserData({\r\n            username: username === \"\" ? undefined : username,            \r\n            userLocation: userLocation === \"\" ? undefined : userLocation, \r\n            story: story === \"\" ? undefined : story ,\r\n            skills: skills === \"\" ? undefined : skills ,\r\n            bio: bio === \"\" ? undefined : bio,     \r\n            website: website === \"\" ? undefined : website,     \r\n            twitter: twitter === \"\" ? undefined : twitter,     \r\n            telegram: telegram === \"\" ? undefined : telegram,     \r\n            discord: discord === \"\" ? undefined : discord,     \r\n            linkedIn: linkedIn === \"\" ? undefined : linkedIn,     \r\n            youtube: youtube === \"\" ? undefined : youtube,     \r\n            twitch: twitch === \"\" ? undefined : twitch,  \r\n            profileCreated: true   \r\n        });\r\n        setAlertContents(\"Profile Updated!\");\r\n        setAlertVisible(true);        \r\n    };\r\n\r\n    const onChangeLandscape = e => {        \r\n        setLandscapeFile(e.target.files[0]);\r\n        setLandscapeFileName(e.target.files[0].name);\r\n    };\r\n\r\n      const onSubmitLandscape = async () => {\r\n        try{\r\n        const file = landscapeFile;\r\n        const name = landscapeFileName;\r\n        console.log(1);\r\n        let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n        console.log(2);\r\n        user.set(\"landscapePic\", fileIpfs);\r\n        await user.save();\r\n        setLandscapePic(user.attributes.landscapePic._url);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      };\r\n\r\n    return (\r\n        <> \r\n            <div className=\"update-profile-background\">\r\n                <div className=\"update-container\">\r\n                    <div className=\"update-container-wrapper\">\r\n                    <div className=\"update-profile-header\">\r\n                        <h3 className=\"update-profile-title\"> Update Profile </h3>\r\n                        <span className=\"exitMenu\" onClick={() => {props.closeEditProfileMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                    </div>\r\n                    <div className=\"change-landscape-pic-container\">\r\n                        <img className=\"change-landscape-pic\" src={landscapePic} alt=\"\" />\r\n                    </div>\r\n                        <form className=\"form-input-container\">                            \r\n                            <form onSubmit={onSubmitLandscape}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"landscapePic\" className=\"form-label\">Choose a Landscape (recommended 1500px X 500px)</label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/*\" multiple=\"false\" id=\"landscapePic\" onChange={onChangeLandscape} />\r\n                                </div>\r\n                                <input type=\"button\" value=\"Upload\" className=\"updateProfile-btn2-upload\" onClick={onSubmitLandscape} />\r\n                            </form>\r\n                            <label className=\"form-label\">Username</label>\r\n                            <input className=\"form-input\" placeholder=\"Choose a name\" value={username} required onChange={(event) =>setUsername(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Location</label>\r\n                            <input className=\"form-input\" placeholder=\"City, Country\" value={userLocation} onChange={(event) =>setUserLocation(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Website</label>\r\n                            <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Skills</label>\r\n                            <input className=\"form-input\" placeholder=\"List skills as keywords (ie Artist, Programmer, Model)\" maxLength={50} value={skills} onChange={(event) =>setSkills(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Bio</label>\r\n                            <textarea rows={3} className=\"form-control\" required placeholder=\"Brief bio (<150 characters)\" maxLength={150} value={bio} onChange={(event) =>setBio(event.currentTarget.value)}/>\r\n                            <label className=\"form-label\">Story</label>\r\n                            <textarea rows={5} className=\"form-control\" placeholder=\"What should others know about you? (<2000 characters)\" maxLength={2000} value={story} onChange={(event) =>setStory(event.currentTarget.value)}/>\r\n\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"submit\">\r\n                            <button className=\"btn1\" onClick={() => {props.closeEditProfileMenu(false)}}>Close Menu</button>                            \r\n                            <input className=\"updateProfile-btn2 btn2\" onClick={handleSave} type=\"button\" value=\"Save Changes\"/>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction AboutMe() {\r\n\r\n    const { user } = useMoralis(); \r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{user?.attributes?.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (user?.attributes?.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{user?.attributes?.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{user?.attributes?.skills}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Social Media</h5>\r\n                    <div className='profile-social-icon-wrapper'>\r\n                        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(user.attributes?.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(user.attributes?.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(user.attributes?.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n                        <i className=\"fab fa-discord\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(user.attributes?.linkenIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(user.attributes?.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n                        <i className=\"fab fa-youtube\"></i>\r\n                        </Link>\r\n                        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(user.attributes?.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n                        <i className=\"fab fa-twitch\"></i>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Bookmark(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [bookmark, setBookmark] = useState(false);\r\n    const init = null;\r\n\r\n    const saveProject = async() => {\r\n        setBookmark(true);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.add(project);\r\n        await user.save();\r\n        alert(\"Project Bookmarked!\");\r\n    }\r\n\r\n    const removeProject = async() => {\r\n        setBookmark(false);\r\n        const Project = Moralis.Object.extend(\"Projects\"); \r\n        const query = new Moralis.Query(Project);\r\n        query.exists(\"title\");\r\n        query.equalTo(\"title\", props.projectTitle);\r\n        const project = await query.find();\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"bookmarkedProjects\");\r\n        relation.remove(project);\r\n        await user.save();\r\n        alert(\"Project Removed!\");\r\n    }  \r\n\r\n    const checkBookmark = async() => {\r\n        const user = Moralis.User.current();\r\n        const relation = user.relation(\"bookmarkedProjects\");     \r\n        const query = relation.query();\r\n        query.equalTo(\"title\", (props.projectTitle));\r\n        query.select(\"attributes.title\")\r\n        const queryResults = await query.find();\r\n        const results = [];\r\n        for (let i = 0; i < queryResults.length; ++i) {\r\n              results.push({\r\n              \"title\": queryResults[i].attributes.title,    \r\n              });\r\n            };\r\n        if(results[0]) {\r\n            setBookmark(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        checkBookmark();\r\n        }\r\n        },\r\n        [init],\r\n      );\r\n\r\n    return (\r\n        <div className=\"bookmark\" >\r\n            {bookmark ? <i class=\"fas fa-bookmark\" onClick={() => removeProject()}></i>  : <i class=\"far fa-bookmark\" onClick={() => saveProject()}></i>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bookmark;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction Rating(props) {\r\n    const { user, Moralis, isInitialized } = useMoralis();\r\n    const title = (props.title);\r\n\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewCount, setReviewCount] = useState( 0 );\r\n\r\n    const checkRating = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const projectRating = await Moralis.Cloud.run(\"loadProjectRating\", params);\r\n        if (typeof projectRating !== 'undefined') {\r\n            setReviewCount(projectRating[0]);\r\n            setRating(projectRating[1]);    \r\n        }\r\n     }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        checkRating();\r\n        }\r\n        },\r\n        [isInitialized],\r\n      );\r\n      \r\n    return (\r\n        <div className=\"rating\">\r\n            {[...Array(1)].map( star => {\r\n                return <i class=\"fas fa-star\"></i>\r\n            })}\r\n            <span className=\"rating\">{rating}</span>\r\n            <span className=\"review-count\">{\" \"}({reviewCount})</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProjectCard(props) {\r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"project-card-title\">                            \r\n                            <h4>{props.title}</h4>\r\n                            { verified && \r\n                                <div>\r\n                                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"project-creator\">\r\n                           <img  src={props.creatorProfilePic}  className=\"creator-profile-pic\"/>{\" \"}{props.username}{\"   -   \"}{props.createdOn}\r\n                        </div>\r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating\r\n                         title = {props.title}          \r\n                        />\r\n                        <Bookmark \r\n                        projectTitle = {props.projectTitle}  \r\n                        />\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectCard;","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction MyProjectsCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">                \r\n                    <Link className=\"cards-link\" to={`${url}/projects/${props.path}`}>\r\n                        <figure className='card-pic-wrap' category={props.label}>\r\n                            <img className=\"project-img\" src={props.src}></img>\r\n                        </figure>\r\n                    </Link>\r\n                    <div className=\"card-body\">\r\n                        <div>\r\n                            <h4>{props.title}</h4>\r\n                        </div>          \r\n                        <div className=\"project-summary\">\r\n                            {props.summary}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hl\"></div>\r\n                    <div className=\"card-footer\">\r\n                        <Rating          \r\n                        />\r\n                        <div className=\"my-projects-date\">\r\n                        {props.createdOn}\r\n                        </div>\r\n                    </div>               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyProjectsCard;","import React, {useState, useEffect} from 'react';\r\nimport './Carousel.css';\r\n\r\nconst Carousel = (props) => {\r\n    const {children, show, loop} = props\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [length, setLength] = useState(children.length);\r\n\r\n    const [isRepeating, setIsRepeating] = useState(loop && children.length > show)\r\n    const [transitionEnabled, setTransitionEnabled] = useState(true)\r\n\r\n    const next = () => {\r\n        if (isRepeating || currentIndex < (length - show)) {\r\n            setCurrentIndex(prevState => prevState + 1)\r\n        }\r\n    }\r\n\r\n    const prev = () => {\r\n        if (isRepeating || currentIndex > 0) {\r\n            setCurrentIndex(prevState => prevState - 1)\r\n        }\r\n    }\r\n\r\n    const handleTransitionEnd = () => {\r\n        if (isRepeating) {\r\n            if (currentIndex === 0) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(length)\r\n            } else if (currentIndex === length + show) {\r\n                setTransitionEnabled(false)\r\n                setCurrentIndex(show)\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderExtraPrev = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[length - 1 - index])\r\n        }\r\n        output.reverse()\r\n        return output\r\n    }\r\n\r\n    const renderExtraNext = () => {\r\n        let output = []\r\n        for (let index = 0; index < show; index++) {\r\n            output.push(children[index])\r\n        }\r\n        return output\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLength(children.length)\r\n        setIsRepeating( loop && children.length > show)\r\n    }, [children, loop, show])\r\n\r\n    useEffect(() =>{\r\n        if (isRepeating){\r\n            if (currentIndex === show || currentIndex === length) {\r\n                setTransitionEnabled(true)\r\n            }\r\n        }\r\n    }, [currentIndex, isRepeating, show, length])\r\n\r\n    return (\r\n        <div className=\"carousel-container\">\r\n            <div className=\"carousel-wrapper\">\r\n            <button className=\"left-arrow\" onClick={prev}>\r\n            <i class=\"fas fa-arrow-alt-circle-left\"></i>\r\n            </button>\r\n                <div className=\"carousel-content-wrapper\">\r\n                    <div className={`carousel-content show-${show}`} style={{ transform: `translateX(-${currentIndex * (100/ show)}%)`, \r\n                        transition: !transitionEnabled ? 'none' : undefined, }}\r\n                        onTransitionEnd={() => handleTransitionEnd()}\r\n                        >\r\n                        {(length > show && isRepeating) && \r\n                        renderExtraPrev()\r\n                        }\r\n                        {children}\r\n                        {(length > show && isRepeating) &&\r\n                            renderExtraNext()\r\n                        }                    \r\n                    </div>\r\n                </div>               \r\n                    <button onClick={next} className=\"right-arrow\">\r\n                    <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Bookmark from './Bookmark';\r\nimport Rating from './Rating';\r\n\r\n\r\nfunction ProjectGridBox(props) {\r\n\r\n    \r\n    const { url } = useRouteMatch();\r\n    const verified = (props.isVerified);\r\n    const isLive = (props.isLive);\r\n\r\n    return (\r\n                  \r\n        <div className=\"project-grid-box-wrapper\">\r\n            <div className=\"project-card-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`/projects/${props.path}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.src}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"project-card-body\">\r\n                <div className=\"project-card-title\">\r\n                    <h4>{props.title}</h4>\r\n                    <div className=\"project-card-badges\">\r\n                        {isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-chart-line\">Live</i>\r\n                            </div>\r\n                        }\r\n                        {!isLive &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-wrench\">InDev</i>\r\n                            </div>\r\n                        }\r\n                        {verified &&\r\n                            <div className=\"project-card-badge\">\r\n                                <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"project-card-creator\">\r\n                    <div className=\"project-card-creator-pic\"><img  src={props.creatorProfilePic}  className=\"project-card-profilepic\"/></div>\r\n                    <div className=\"project-card-creator-name\">{props.username}</div>\r\n                </div>\r\n                <div className=\"project-card-summary\">\r\n                    {props.summary}\r\n                </div>\r\n            </div>\r\n            <div className=\"project-card-footer\">\r\n                <Rating\r\n                    title = {props.title}\r\n                />\r\n                <div className=\"project-card-date\">\r\n                    {props.createdOn}\r\n                </div>\r\n                <Bookmark\r\n                projectTitle = {props.title}\r\n                />\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProjectGridBox;\r\n","\r\nimport React, {useState, useEffect} from 'react';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport MyProjectsCard from './MyProjectsCard';\r\nimport Carousel from './Carousel';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\n\r\nfunction LoadMyProject() {\r\n\r\n  const { user, Moralis } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { page : pageNumber};\r\n    const results = await Moralis.Cloud.run(\"renderMyProjects\", params);\r\n    setProjects(results);\r\n    console.log(pageNumber);\r\n    console.log(results);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  useEffect(() => {\r\n    LoadProjects();\r\n    },\r\n    [pageNumber]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <React.Fragment>\r\n          \r\n          <div className=\"project-grid-container\">\r\n            <div className=\"my-project-grid-wrapper\">\r\n                {projects.map(listItem => (\r\n                    <div key={listItem.title} className=\"project-grid-box\">\r\n                      <ProjectGridBox\r\n                      title={listItem.title}\r\n                      summary={listItem.summary}\r\n                      src={listItem.projectPhoto}\r\n                      username={listItem.username}\r\n                      creatorProfilePic={listItem.profilePic}\r\n                      createdOn = {listItem.createdOn}\r\n                      label={listItem.username}\r\n                      path={listItem.title}\r\n                      isVerified = {listItem.isVerified}\r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadMyProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction SaveProfile(props) {\r\n    const { user, Moralis, isInitialized } = useMoralis();\r\n    const [saved, setSaved] = useState();\r\n    let isSaved = (props.isSaved);\r\n    let init = 0;\r\n\r\n    const saveProfile = async() => {\r\n        setSaved(true);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.add(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile saved.`);\r\n    }\r\n\r\n    const removeProfile = async() => {\r\n        setSaved(false);\r\n        const params = { profileName: props.profileName};\r\n        const userProfile = await Moralis.Cloud.run(\"findUser\", params);\r\n        console.log(userProfile);        \r\n        console.log(params);\r\n        const currentUser = await Moralis.User.current();\r\n        const relation = currentUser.relation(\"savedProfiles\");\r\n        relation.remove(userProfile);\r\n        await user.save();\r\n        alert(`${props.profileName}'s profile removed.`);\r\n    }  \r\n\r\n    const checkSavedProfile = async() => {\r\n        const params = {profileName: props.profileName}\r\n        const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n        \r\n        if(results[0]) {\r\n            setSaved(true);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n        checkSavedProfile();\r\n        }\r\n        },\r\n        [isInitialized],\r\n      );\r\n\r\n    return (        \r\n        <div className=\"bookmark\" >\r\n            {(saved || isSaved) ? <i class=\"fas fa-heart\" onClick={() => removeProfile()}></i>  : <i class=\"far fa-heart\" onClick={() => saveProfile()}></i>}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default SaveProfile;\r\n","import React, {useState} from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport './ProfileCard.css';\r\nimport SaveProfile from './SaveProfile';\r\n/*\r\nFor project pages add description, for address to rank/review and then average that rating, links to project socials/github/website,\r\nrequest collaboration\r\n*/\r\n\r\n\r\nfunction ProfileCard(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    const [bookmark, setBookmark] = useState(true);\r\n\r\n    const saveProject = () => {\r\n        setBookmark(!bookmark);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-card-container\">                \r\n                    <div className=\"profile-card-wrapper\">\r\n                        <Link className=\"profile-cards-link\" to={`/profiles/${props.username}`}>\r\n                            <figure className='profile-card-pic-wrap' category={props.label}>\r\n                                <img className=\"profile-card-img\" src={props.src}></img>\r\n                            </figure>\r\n                        </Link>\r\n                        <div className=\"profile-card-body\">\r\n                            <div className=\"profile-card-title\">\r\n                                <h4>{props.username}</h4>\r\n                            </div>\r\n                            <div className=\"profile-summary\">\r\n                                <p>{props.bio}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"hl\"></div>\r\n                        <div className=\"profile-card-footer\">\r\n                            <div className=\"saveProfile\" onClick={saveProject}>\r\n                                <SaveProfile\r\n                                profileName = {props.username}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileCard;","import React, {useState, useEffect} from 'react';\r\nimport '../../App.css';\r\nimport Profile from '../Profile';\r\nimport { useMoralis } from 'react-moralis';\r\nimport UpdateProfile from '../UpdateProfile.js';\r\nimport CreateProject from '../CreateProject.js';\r\nimport AboutMe from '../AboutMe';\r\nimport '../../components/User.css';\r\nimport LoadMyProjects from '../LoadMyProjects';\r\nimport Alert from '../Alert';\r\nimport ProjectCard from '../ProjectCard';\r\nimport ProfileCard from '../ProfileCard';\r\nimport ProjectGridBox from '../ProjectGridBox';\r\n\r\n\r\n\r\nfunction MyProfile() {\r\n\r\n    const { Moralis } = useMoralis();\r\n    \r\n    const [createProjectMenu, setOpenCreateProjectMenu] = useState(false);\r\n    const [editProfileMenu, setOpenEditProfileMenu] = useState(false);    \r\n    const [ savedProjects, setSavedProjects ] = useState([\"\"]);    \r\n    const [ usersSaved, setUsersSaved ] = useState([\"\"]);\r\n    let initLoad = 0;\r\n\r\n    const LoadSavedProjects = async() => {\r\n        const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n            setSavedProjects(savedProjectsList);\r\n    };\r\n\r\n    const LoadSavedProfiles = async () => {\r\n        const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n        setUsersSaved(savedProfiles);\r\n    };\r\n\r\n    useEffect(() => {\r\n    LoadSavedProjects();\r\n    LoadSavedProfiles();\r\n    },\r\n    [initLoad],\r\n    );  \r\n\r\n    return (\r\n        <div>\r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                    \r\n                    <Profile openCreateProjectMenu={setOpenCreateProjectMenu} openEditProfileMenu={setOpenEditProfileMenu}/> \r\n                </div>                \r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                            <div className=\"aboutme-wrapper\">\r\n                                <AboutMe />\r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>MY PROJECTS</h3>               \r\n                                </div>\r\n                                <LoadMyProjects />\r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROJECTS</h3>               \r\n                                </div>\r\n                                <div className=\"project-grid-container\">\r\n                                    <div className=\"my-project-grid-wrapper\">\r\n                                        {savedProjects.map(listItem => (\r\n                                            <div key={listItem.title} className=\"project-grid-box\">\r\n                                            <ProjectGridBox\r\n                                            title={listItem.title}\r\n                                            summary={listItem.summary}\r\n                                            src={listItem.projectPhoto}\r\n                                            username={listItem.username}\r\n                                            creatorProfilePic={listItem.profilePic}\r\n                                            createdOn = {listItem.createdOn}\r\n                                            label={listItem.username}\r\n                                            path={listItem.title}\r\n                                            isVerified = {listItem.isVerified}\r\n                                            />\r\n                                        </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                                <div className=\"project-section-title\">\r\n                                    <h3>SAVED PROFILES</h3>               \r\n                                </div>\r\n\r\n                                <div className='cards__container'>             \r\n                                    <div className='project-cards__wrapper'>\r\n                                        <div className='cards__items'>      \r\n                                            {usersSaved.map(userProfile => (\r\n                                                <div key={userProfile.username} className=\"cards__item\">\r\n                                                <ProfileCard\r\n                                                bio={userProfile.bio}\r\n                                                src={userProfile.profilePic}\r\n                                                username={userProfile.username}         \r\n                                                />\r\n                                            </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n            <div className=\"projects\">\r\n                {createProjectMenu && <CreateProject closeCreateProjectMenu={setOpenCreateProjectMenu}/>}\r\n                {editProfileMenu && \r\n                <UpdateProfile \r\n                closeEditProfileMenu={setOpenEditProfileMenu}\r\n                />}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useRouteMatch  } from 'react-router-dom';\r\nimport ProjectCard from './ProjectCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport Carousel from './Carousel';\r\nimport './SearchBar.css';\r\nimport ProjectGridBox from './ProjectGridBox';\r\nimport './ProjectGrid.css';\r\nimport './Pagination.css';\r\n\r\nfunction ProjectsList({match}) {\r\n\r\n  const { user, Moralis, isInitialized } = useMoralis();\r\n\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [ savedProjects, setSavedProjects ] = useState([\"\"]);\r\n  const [ queryName, setQueryName] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  let initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  const LoadProjects = async() => {\r\n    const params = { skipAmount: pageNumber};\r\n    const projectsList = await Moralis.Cloud.run(\"renderProjects\", params);\r\n    setProjects(projectsList);  \r\n    console.log(projectsList);\r\n  };\r\n\r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n\r\n\r\n  const LoadSavedProjects = async() => {\r\n    const savedProjectsList = await Moralis.Cloud.run(\"renderSavedProjects\");\r\n    setSavedProjects(savedProjectsList);\r\n  };\r\n\r\n  const SearchProjects = async() => {\r\n    setNoneFound(false);\r\n    const params = { title: queryName};\r\n    const projectsFound = await Moralis.Cloud.run(\"searchProjectsByName\", params);\r\n    if(projectsFound != ''){\r\n      setSearchResults(projectsFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    LoadProjects();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized],\r\n  );  \r\n  useEffect(() => {\r\n    if(user){\r\n      LoadSavedProjects();\r\n    }\r\n    },\r\n    [initLoad],\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n        <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">          \r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search projects by name\" \r\n                value={queryName} \r\n                onChange={(event) =>setQueryName(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProjects()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProjects} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"foreground\">\r\n        {noneFound &&\r\n          <div className=\"cards-background\">\r\n          <h3>Search Results</h3> \r\n            <div className='cards__container'>\r\n                <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n              </div> \r\n              <button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button>\r\n            </div> \r\n          </div> \r\n          }\r\n          {showSearchResults &&\r\n          <div className=\"cards-background\">\r\n            <div className=\"project-section-title\">\r\n              <h3>Search Results</h3> \r\n            </div>\r\n            <button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button>\r\n              <div className='cards__container'>\r\n                  <div className='cards__wrapper'>                 \r\n                    <div className='cards__items'>\r\n                    <Carousel\r\n                        show={3}\r\n                        loop={true}\r\n                        >\r\n                        {searchResults.map(project => (                          \r\n                          <div key={project.title} className=\"cards__item\">                                                   \r\n                              <ProjectCard\r\n                              title={project.title}\r\n                              summary={project.summary}\r\n                              src={project.projectPhoto}\r\n                              username={project.username}\r\n                              creatorProfilePic={project.profilePic}\r\n                              createdOn = {project.createdOn}\r\n                              label={project.username}\r\n                              path={project.title}\r\n                              projectTitle = {project.title}\r\n                              isVerified = {project.isVerified}\r\n                              isLive={project.isLive}   \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </Carousel>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          }\r\n\r\n\r\n\r\n              {/* <div className=\"cards-background\"> */}\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROJECTS</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                <div className=\"project-grid-container\">\r\n                  <div className=\"project-grid-wrapper\">\r\n                    { (projects).map(project => (\r\n                      <div key={project.title} className=\"project-grid-box\">\r\n                          <ProjectGridBox\r\n                          title={project.title}\r\n                          summary={project.summary}\r\n                          src={project.projectPhoto}\r\n                          username={project.username}\r\n                          creatorProfilePic={project.profilePic}\r\n                          createdOn = {project.createdOn}\r\n                          path={project.title}\r\n                          isVerified = {project.isVerified}\r\n                          isLive={project.isLive}\r\n                          \r\n                          />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"pagination\">\r\n                    <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                    \r\n                    <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                  </div>\r\n                </div>              \r\n              </div>                   \r\n              \r\n      </div>\r\n      {/* </div> */}\r\n      </>\r\n    )\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport ProjectsList from '../Projects.js';\r\nimport '../../App.css';\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <ProjectsList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/ethlogo.97ee4148.png\";","export default __webpack_public_path__ + \"static/media/bsclogo.582fc765.png\";","export default __webpack_public_path__ + \"static/media/maticlogo.409d5248.png\";","import React from 'react';\r\nimport {useRouteMatch } from 'react-router-dom';\r\nimport './NFTCard.css';\r\n\r\n\r\nfunction NFTCard(props) {\r\n\r\n    \r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n                  \r\n        <div className=\"nft-card-wrapper\">\r\n            <div className=\"nft-card-title\">\r\n                    <h4>{props.name}</h4>\r\n                </div>\r\n            <div className=\"nft-card-header\">\r\n                <div className=\"nft-card-img-wrapper\">                \r\n                <img className=\"nft-card-img\" src={props.src}></img>   \r\n                </div>             \r\n            </div>\r\n            <div className=\"nft-card-body\">\r\n                \r\n                <div className=\"nft-card-creator\">\r\n                    {props.symbol}{\" \"}{props.tokenId}\r\n                </div>\r\n                <div className=\"nft-card-summary\">\r\n                    {props.description}\r\n                </div>\r\n            </div>\r\n            <div className=\"nft-card-footer\">\r\n                <div>{props.contractType}</div>                \r\n                <div>Amount: {props.amount}</div>                \r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default NFTCard;","import React, {useEffect, useState} from 'react';\r\nimport { Moralis } from 'moralis';\r\nimport ETH from '../img/ethlogo.png'\r\nimport BSC from '../img/bsclogo.png'\r\nimport MATIC from '../img/maticlogo.png'\r\nimport './Wallet.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport NFTCard from './NFTCard';\r\n\r\nfunction Wallet() {\r\n\r\n    const { isInitialized } = useMoralis();\r\n\r\n\r\n    const [ currentChain, setCurrentChain] = useState(\"eth\");\r\n    const [ tokens, setTokens] = useState([]);\r\n    const [ nfts, setNFTS] = useState([]);\r\n    const [ transactions, setTransactions] = useState();\r\n    const [ viewTokens, setViewTokens] = useState(true);\r\n    const [ viewNFTs, setViewNFTs] = useState(false);\r\n    const [viewTransactions, setViewTransactions] = useState(false);\r\n    const [ chainLogo, setChainLogo] = useState(ETH);\r\n    const [ theme, setTheme] = useState(\"eth\");\r\n    let init = 0;\r\n\r\n    const getTokens = async() => {\r\n        setViewNFTs(false);\r\n        setViewTransactions(false);\r\n        // setTokens([]);\r\n        const options = { chain: currentChain, order: \"asc\"}\r\n        const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n        const list = await\r\n        Promise.all(\r\n            balances.map( async (token) => {\r\n            const options = {\r\n                address: token.token_address,\r\n                chain: currentChain\r\n            }\r\n            let price;\r\n            let priceInfo = {};\r\n            let balance = token.balance;\r\n            let decimals = token.decimals;\r\n            try{\r\n                price = await Moralis.Web3API.token.getTokenPrice(options);\r\n                priceInfo.price = price.usdPrice.toFixed(5);    \r\n                 let usdAmount = ((price.usdPrice)*(balance/(10**decimals)))\r\n                 priceInfo.usdAmount = usdAmount.toFixed(2);                \r\n            } catch (error){\r\n                console.log(error);\r\n            }\r\n            token = {...token, ...priceInfo}\r\n            return token;\r\n            })\r\n        );\r\n            \r\n        console.log(list);\r\n        setTokens(list);\r\n        setViewTokens(true);\r\n    }\r\n\r\n    const getNFTs = async() =>{\r\n        setViewTokens(false);\r\n        setViewTransactions(false);\r\n        setNFTS([]);\r\n        const options = { chain: currentChain}\r\n        const nftList = await Moralis.Web3API.account.getNFTs(options);\r\n        let list = await \r\n        Promise.all(\r\n            nftList.result.map( async(nft) => {\r\n                let url = fixURL(nft.token_uri);\r\n                try{\r\n                     await fetch(url)\r\n                    .then(response => response.json())\r\n                    .then(data => {   \r\n                        nft.image = data.image;  \r\n                    });\r\n                } catch {\r\n                }\r\n                return nft;\r\n            })\r\n        );\r\n        \r\n        function fixURL(url) {\r\n            if(url.startsWith(\"ipfs\")) {\r\n                return \"https://ipfs.moralis.io:2053/ipfs/\"+url.split(\"ipfs://ipfs/\").slice(-1)\r\n            }else{\r\n                return url\r\n            } \r\n        }\r\n        setNFTS(list);        \r\n        setViewNFTs(true);\r\n    } \r\n    \r\n    // const getTransactions = async() => {\r\n    //     setViewNFTs(false);\r\n    //     setViewTokens(false);\r\n    //     console.log('pressed transaction button');\r\n    //     setTransactions([]);\r\n    //     const options = { chain: currentChain, order: \"desc\" };\r\n    //     const transactions = await Moralis.Web3API.account.getTransactions(options);\r\n    //     transactions.results.forEach(function(tx) {\r\n\r\n    //     })\r\n    //     setTransactions(transactions.result);\r\n    //     console.log(transactions.result);\r\n    //     setViewTransactions(true);\r\n    // }\r\n\r\n    const changeChain = (chain, logo, theme) => {\r\n        setViewTokens(false);\r\n        setViewTransactions(false);\r\n        setViewNFTs(false);\r\n        setCurrentChain(chain);\r\n        setChainLogo(logo);\r\n        setTheme(theme);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isInitialized){\r\n            \r\n        }  \r\n    }, [ isInitialized])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [tokens, nfts])\r\n\r\n    return (\r\n        <>        \r\n        <div className=\"wallet-background\">\r\n            <div className=\"choose-chain-wallet-wrapper\">\r\n                <div className={`choose-chain-wallet-${theme}`}>                  \r\n                <div className=\"choose-chain-wallet-choose\">                    \r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"eth\", ETH, \"eth\")}>\r\n                        <img src={ETH} />\r\n                    </div>\r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"bsc\", BSC, \"bsc\")}>\r\n                        <img src={BSC} />\r\n                    </div>\r\n                    <div className=\"choose-chain-wallet-chain\" onClick={() => changeChain(\"matic\", MATIC, \"matic\")}>\r\n                        <img src={MATIC} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"choose-display-holding-wrapper\">\r\n                <div className={`choose-display-holding-${theme}`}>\r\n                    <button id={`display-holding-option-${theme}`} onClick={getTokens}>TOKENS</button>\r\n                    <button id={`display-holding-option-${theme}`} onClick={getNFTs}>NFTS</button>\r\n                    {/* <button id=\"display-holding-option\" onClick={getTransactions}>HISTORY</button> */}\r\n                </div>\r\n            </div>            \r\n            {viewTokens &&\r\n            <div className=\"wallet-tokens-wrapper\">\r\n                    <div className={`wallet-token-chart-${theme}`}>                        \r\n                        <span id=\"chart-column-name\">Logo</span>\r\n                        <span id=\"chart-column-name\">Name/ Symbol</span>\r\n                        <span id=\"chart-column-name\">Balance</span>\r\n                        <span id=\"chart-column-name\">Price</span>\r\n                        <span id=\"chart-column-name\">Holdings</span>\r\n                    </div>\r\n                <div className={`wallet-tokens-${theme}`}>\r\n                    {tokens.map(token => (\r\n                        <div key={token.token_address} className=\"wallet-token\">\r\n                            <span id=\"token-detail\"><img src={ !token.logo ? chainLogo : token.logo }/></span>\r\n                            <span id=\"token-detail\">{token.name}<br/>({token.symbol})</span>\r\n                            <span id=\"token-detail\">{(token.balance/(10**token.decimals)).toFixed(2)}</span>\r\n                            <span id=\"token-detail\">${token.price}</span>\r\n                            <span id=\"token-detail\">${token.usdAmount}</span>\r\n                            {/* ((token.price)*(token.balance/(10**token.decimals))).toFixed(2) */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            }\r\n            {viewNFTs && \r\n                <div className=\"wallet-tokens-wrapper \">\r\n                    <div className={`wallet-nfts-${theme}`}>\r\n                    <div className=\"nft-grid-container\">\r\n                        <div className=\"nft-grid-wrapper\">\r\n                        {nfts.map(nft => (\r\n                            <div key={nft.token_uri} className=\"nft-card\">  \r\n                                <NFTCard\r\n                                src={nft.image}\r\n                                name={nft.name}\r\n                                symbol={nft.symbol}\r\n                                tokenId={nft.token_id}\r\n                                contractType={nft.contract_type}\r\n                                amount={nft.amount}\r\n                                />                              \r\n                                {/* <span id=\"token-detail\"><img src={nft.image} /></span>\r\n                                <span id=\"token-detail\">{nft.name}</span>\r\n                                <span id=\"token-detail\">{nft.symbol}{\" \"}{nft.token_id}</span>\r\n                                <span id=\"token-detail\">Quantity:{\" \"}{nft.amount}</span> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {viewTransactions && \r\n                <div className=\"wallet-tokens-wrapper\">\r\n                    <div className=\"wallet-tokens\">\r\n                        {transactions.map(transaction => (\r\n                            <div key={transaction.hash} className=\"wallet-token\">                                \r\n                                <span id=\"token-detail\"><img src={transaction.logo} /></span>\r\n                                <span id=\"token-detail\">{transaction.name}</span>\r\n                                <span id=\"token-detail\">{transaction.symbol}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wallet;\r\n","import React from 'react';\r\nimport Wallet from '../Wallet';\r\n\r\nfunction wallet() {\r\n    return (\r\n        <div>\r\n            <Wallet />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default wallet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './RatingProject.css'\r\n\r\nfunction RatingProject(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [review, setReview] = useState();\r\n    const [ userReview, setUserReivew] = useState();\r\n    const [stars, setStars] = useState(0);\r\n    const [reviewTitle, setReviewTitle] = useState();\r\n    const [ prevTitle, setPrevTitle] = useState(\"Review Title\");\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n    const [hasReview, setHasReview] = useState();\r\n    const [reivewed, setReviewed] = useState();\r\n    const init=0;\r\n\r\n    const loadUserRating = async() => {\r\n        if(hasReview){ console.log(\"you do have a hasReivew\")};\r\n        if(userReview){ console.log(\"you do have a userReivew\")};\r\n\r\n        const params = { projectTitle: (props.projectName) }; \r\n        const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        const projectRelation = currentProject.relation(\"reviews\");\r\n        const query = projectRelation.query();\r\n        query.equalTo('username', user.attributes?.username);\r\n        const queryResults = await query.find();\r\n        if(queryResults.length > 0) {\r\n            const stars = queryResults[0].attributes.stars;\r\n            const reviewText = queryResults[0].attributes.review;\r\n            const title = queryResults[0].attributes.reviewTitle;\r\n            const boolReview = queryResults[0].attributes.hasReview;\r\n            setUserReivew(queryResults[0].attributes.hasReview);\r\n;           setReview(reviewText);\r\n            setStars(stars);\r\n            setPrevTitle(title);\r\n            setHasReview(true);    \r\n            setReviewed(boolReview) \r\n        } \r\n    }\r\n    \r\n    const postProjectRating = async() => {    \r\n        const canPost = await userCheck();\r\n        if (canPost) {\r\n            if(stars < 1) {\r\n                throw alert('Please choose a star.');\r\n            }\r\n            if (typeof review === 'undefined') {\r\n                throw alert('Please leave a review.');\r\n            }\r\n            if(hasReview){\r\n                console.log(\"whent down this path of has review\");\r\n                const params = { projectTitle: (props.projectName) }; \r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                const query = projectRelation.query();\r\n                query.equalTo('username', user.attributes?.username)\r\n                const queryResults = await query.find();\r\n                const userReview = queryResults[0];\r\n                userReview.set(\"stars\", stars);\r\n                userReview.set('review', review);\r\n                userReview.set('reviewTitle', reviewTitle);\r\n                await userReview.save();\r\n                setAlertContents(\r\n                    <>\r\n                    <div className=\"alert-popup-contents\">\r\n                    Review Updated!\r\n                    </div>\r\n                    </>\r\n                    );\r\n                setAlertVisible(true);\r\n            }  else {\r\n                const userReview = Moralis.Object.extend(\"Reviews\");\r\n                const newReview = new userReview();\r\n                const currentUser = await Moralis.User.current();\r\n                const username = currentUser.attributes.username;\r\n                const profilePic = currentUser.attributes.profilePic._url;\r\n                const params = { projectTitle: (props.projectName) };\r\n                const currentProject = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n                newReview.set(\"stars\", stars);\r\n                newReview.set(\"review\", review);\r\n                newReview.set('reviewer', currentUser);\r\n                newReview.set(\"username\", username);\r\n                newReview.set('reviewerPic', profilePic);\r\n                newReview.set('project', currentProject);     \r\n                newReview.set('reviewTitle', reviewTitle); \r\n                newReview.set('hasReview', true);      \r\n                await newReview.save();\r\n                const relation = currentUser.relation(\"reviews\");\r\n                relation.add(newReview);\r\n                user.save();\r\n                const projectRelation = currentProject.relation(\"reviews\")\r\n                projectRelation.add(newReview);\r\n                currentProject.save();            \r\n                setAlertContents(\r\n                    <>\r\n                    <div className=\"alert-popup-contents\">\r\n                    Thank you for your review!\r\n                    </div>\r\n                    </>\r\n                    );\r\n                setAlertVisible(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n          setAlertContents(\r\n              <>\r\n              <div className=\"alert-popup-contents\">\r\n              You'll need to own either eViral or beViral to access this feature.\r\n              <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n              </div>\r\n              </>\r\n              );\r\n          setAlertVisible(true);\r\n          return false;\r\n        }  else if (!user.attributes?.profileCreated) {\r\n          setAlertContents(\r\n              <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to set up a Profile to access this feature.                \r\n          </div>\r\n          </>\r\n          ) \r\n          setAlertVisible(true);\r\n          return false;\r\n        } else {\r\n            return true;\r\n        }\r\n      }\r\n\r\n    useEffect(() => {  \r\n        if(user){\r\n        loadUserRating();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setHasReview(userReview);\r\n    }, [userReview])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"rating-project-container\">\r\n            <div className=\"rating-project-wrapper\">\r\n                <h4>Your Review</h4>\r\n                \r\n                <div className=\"rating-project-stars-container\">\r\n                    {[...Array(5)].map( (star, i) => {\r\n                        const ratingValue = i + 1;\r\n                        return (\r\n                            <label>\r\n                                <input type=\"radio\" name=\"rating-radio\" value={ratingValue} onClick={() => setStars(ratingValue)}/>\r\n                                {ratingValue  <= stars ? <i class=\"fas fa-star gold\"></i> : <i class=\"fas fa-star grey\"></i>}\r\n                            </label>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <input className=\"rating-review-title\" type=\"text\" placeholder={prevTitle} value={reviewTitle} required \r\n                    onChange={(event) =>setReviewTitle(event.currentTarget.value)}/>\r\n                <div className=\"rating-project-review-text\">\r\n                <textarea rows={3} \r\n                    className=\"form-control\" \r\n                    placeholder=\"Please leave a review in less than 150 characters.\" \r\n                    maxLength={150} \r\n                    value={review} \r\n                    required \r\n                    onChange={(event) =>setReview(event.currentTarget.value)}/>\r\n                </div>\r\n                <div className=\"rating-project-submit\">\r\n                {/* <button className=\"rating-project-submit-button btn1\" onClick={() => {loadUserRating()}}>Load My Review</button> */}\r\n                   {hasReview && \r\n                   <button className=\"rating-project-submit-button btn2\" onClick={postProjectRating}>Edit Review</button>\r\n                    }\r\n                   {!hasReview && \r\n                   <button className=\"rating-project-submit-button btn2\" onClick={postProjectRating}>Post Review</button>\r\n                    }\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default RatingProject;\r\n","import React from 'react'\r\nimport './ReviewCard.css';\r\n\r\nfunction ReviewCard(props) {\r\n    return (\r\n        \r\n            <div className=\"review-container\"> \r\n                    <div className=\"review-profile\">\r\n                        <img className=\"creator-profile-pic\" src={props.reviewerPic} />\r\n                        {props.username}\r\n                    </div>\r\n                    <div className=\"review-title\">\r\n                        {[...Array(props.stars)].map( star => {\r\n                            return <i class=\"fas fa-star\"></i>\r\n                        })}\r\n                        <span id=\"reviewTitle\">{props.reviewTitle}</span>\r\n                    </div>\r\n                    <div className=\"review-date\">Reviewed on {props.createdAt}</div>\r\n                    <div className=\"review-review\">{props.review}</div>       \r\n            </div>            \r\n        \r\n    )\r\n}\r\n\r\nexport default ReviewCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport ReviewCard from './ReviewCard';\r\n\r\nfunction Reviews(props) {\r\n    const { Moralis } = useMoralis();\r\n    const title = (props.title);\r\n\r\n    const [reviews, setReviews] = useState();\r\n    const [seeReviews, setSeeReviews] = useState(false);\r\n\r\n    const loadReviews = async(props) => {\r\n        const params = { projectTitle: title};\r\n        const reviewList = await Moralis.Cloud.run(\"loadReviews\", params);\r\n        console.log(reviewList);\r\n        setReviews(reviewList);\r\n        console.log(reviews);\r\n        setSeeReviews(!seeReviews)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn1\" onClick={() => loadReviews()}>Show&nbsp;Reviews</button>\r\n            {seeReviews &&\r\n                <div className=\"project-page-review-container\">\r\n                <h3>Reviews</h3>\r\n                <div className=\"project-page-reviewList\">\r\n                    {reviews.map(review => (            \r\n                        <div key={review.title} className=\"project-page-review\">                            \r\n                            <ReviewCard\r\n                            username={review.username}\r\n                            stars={review.stars}\r\n                            review={review.review}\r\n                            reviewerPic={review.reviewerPic}  \r\n                            createdAt={review.createdAt} \r\n                            reviewTitle= {review.reviewTitle}                         \r\n                            />                \r\n                        </div>\r\n                    ))}      \r\n                </div>\r\n            </div>\r\n              }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SocialIconBar(props) {\r\n    return (\r\n        <div className='profile-social-icon-wrapper'>\r\n        <Link className='profile-social-icon twitter' to={{ pathname: (`https://twitter.com/${(props.twitter)}`) }} target=\"_blank\" aria-label='Twitter'>\r\n        <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon telegram' to={{ pathname: (`https://t.me/${(props.telegram)}`) }} target=\"_blank\" aria-label='Telegram'>\r\n        <i className=\"fab fa-telegram\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon discord' to={{ pathname: (`https://discord.gg/${(props.discord)}`) }} target=\"_blank\" aria-label='Discord'>\r\n        <i className=\"fab fa-discord\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon linkedIn' to={{ pathname: (`https://linkedin.com/in/${(props.linkedIn)}`) }} target=\"_blank\" aria-label='LinkedIn'>\r\n        <i className=\"fab fa-linkedin\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon youtube' to={{ pathname: (`https://youtube.com/c/${(props.youtube)}`) }} target=\"_blank\" aria-label='Youtube'>\r\n        <i className=\"fab fa-youtube\"></i>\r\n        </Link>\r\n        <Link className='profile-social-icon twitch' to={{ pathname: (`https://twitch.tv/${(props.twitch)}`) }} target=\"_blank\" aria-label='Twitch'>\r\n        <i className=\"fab fa-twitch\"></i>\r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SocialIconBar;\r\n","import React, { useState } from 'react';\r\nimport './SendMessagePopUp.css';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nfunction SendMessagePopUp(props) {\r\n    const { user, Moralis } = useMoralis();\r\n\r\n    const [ msg, setMessage ] = useState();\r\n\r\n    \r\n  const SendMessage = async() => {\r\n    const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n    const msgTime = new Date().toLocaleTimeString('en-US');\r\n    // const conversationId = await getConversationId();\r\n    const params = { from: user.attributes?.username, to: (props.creatorName), date: msgDate, time: msgTime, project: (props.projectName), message: msg};\r\n    try {\r\n        const message = await Moralis.Cloud.run(\"sendMessage\", params);        \r\n        alert(\"Message Sent!\");\r\n        (props.visible(false));\r\n    } catch (error) {\r\n        alert(error)\r\n    }    \r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"send-msg-background\">\r\n            <div className=\"send-msg-container\">\r\n                <div className=\"send-msg-wrapper\">\r\n                    <div className=\"send-msg-title\">                        \r\n                        <h3>Send a Message</h3>\r\n                        <div className=\"send-msg-close\">\r\n                        <i class=\"fas fa-times\"  onClick={() => {props.visible(false)}}></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-body\">\r\n                        <div className=\"creator-prj-info\">\r\n                            <div className=\"send-msg-creator\">\r\n                                <img className=\"send-msg-profilePic\" src={props.creatorProfilePic} />\r\n                                {props.creatorName}\r\n                            </div>\r\n                            <div className=\"send-msg-project\">\r\n                                <img className=\"send-msg-projectPic\" src={props.projectPic} />\r\n                                {props.projectName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"send-msg-text\">\r\n                            <textarea placeholder=\"Enter message. Max length: 500 characters\" value={msg} maxLength=\"500\" onChange={(event) =>setMessage(event.currentTarget.value)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send-msg-footer\">\r\n                        <button  onClick={SendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>           \r\n    </>\r\n    )\r\n}\r\n\r\nexport default SendMessagePopUp;\r\n","import React, { useState } from 'react';\r\nimport './EditProject.css';\r\nimport { useMoralis, useMoralisFile } from \"react-moralis\";\r\nimport Alert from './Alert';\r\n\r\nfunction EditProject(props) {  ///set input variables as required, add other attributes to be stored like tags, etc, allow for editing/updating?\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const { saveFile } = useMoralisFile();\r\n\r\n    const [title, setTitle] = useState((props.title));\r\n    const [summary, setSummary] = useState(props.summary);\r\n    const [description, setDescription] = useState(props.description);\r\n\r\n    const [website, setWebsite] = useState(props.website);\r\n    const [twitter, setTwitter] = useState(props.twitter);\r\n    const [telegram, setTelegram] = useState(props.telegram);\r\n    const [discord, setDiscord] = useState(props.discord);\r\n    const [linkedIn, setLinkedIn] = useState(props.linkedIn);\r\n    const [youtube, setYoutube] = useState(props.youtube);\r\n    const [twitch, setTwitch] = useState(props.twitch);\r\n    const [isOwner, setIsOwner] = useState(props.isOwner);\r\n    const [isLive, setIsLive] = useState(props.isLive);\r\n\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n\r\n    const [photoFile, setPhotoFile] = useState();    \r\n    const [photoFileName, setPhotoFileName] = useState();  \r\n    const [ projectPhotoPreview, setProjectPhotoPreview] = useState(props.projectPhoto);\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                Are you sure you want to delete this project?\r\n                <button className=\"submit-form btn3\" onClick={deleteProject}>Delete Project</button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteProject = async() => {\r\n        const params = { projectTitle: (props.title) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n\r\n    const editProject = async () => {\r\n        try {            \r\n            console.log(props.title);\r\n            const params = { projectTitle: (props.title) }; \r\n            console.log(params);\r\n            const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n            console.log(project);\r\n            console.log(project);\r\n            const file = photoFile;\r\n            const name = photoFileName;\r\n            let fileIpfs = await saveFile(name, file, { saveIPFS: true });\r\n            project.set('projectPhoto', fileIpfs);\r\n            project.set(\"isLive\", isLive);\r\n            project.set('title', title);\r\n            project.set('summary', summary);\r\n            project.set('description', description);\r\n            project.set(\"website\", website === \"\" ? undefined : website);\r\n            project.set(\"twitter\", twitter === \"\" ? undefined : twitter);\r\n            project.set(\"telegram\", telegram === \"\" ? undefined : telegram);\r\n            project.set(\"discord\", discord === \"\" ? undefined : discord);\r\n            project.set(\"linkedIn\", linkedIn === \"\" ? undefined : linkedIn);\r\n            project.set(\"youtube\", youtube === \"\" ? undefined : youtube);\r\n            project.set(\"twitch\", twitch === \"\" ? undefined : twitch);\r\n            await project.save();\r\n            setAlertContents(\"Updates Sumbitted!\");\r\n            setAlertVisible(true);\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const onChangePhoto = e => {\r\n        setPhotoFile(e.target.files[0]);\r\n        setPhotoFileName(e.target.files[0].name);\r\n        setProjectPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        setAlertContents(\"Uploaded!\");\r\n        setAlertVisible(true);\r\n    };\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"createProject-background\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-wrapper\">\r\n                        <div className=\"form-header\">\r\n                            <h3 className=\"menu-title\"> Edit Project </h3>\r\n                            <span className=\"exitMenu\" onClick={() => {props.closeCreateProjectMenu(false)}}><i class=\"far fa-times-circle\"></i></span>\r\n                        </div>\r\n                        <div className=\"project-pic-container\">\r\n                            <img className=\"project-pic\" src={projectPhotoPreview} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"form-photo-wrapper\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"projectPhoto\" className=\"form-label\">Upload a Cover Photo<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-control\" type=\"file\" accept=\"image/png, image/jpg, image/jpeg\" multiple=\"false\" id=\"projectPhoto\" required onChange={onChangePhoto}/>\r\n                                </div>\r\n                                \r\n                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"form-text-wrapper\">\r\n                            <form className=\"form-text\">\r\n                            <div className=\"form-text-component\">\r\n                                    Has your project already launched or is it still in development?\r\n                                    <div className=\"project-dev-status-radio\">\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"indevelopment\" name=\"flexRadioDefault\" onClick={() => setIsLive(false)}/>\r\n                                            <label className=\"form-label\">\r\n                                                In Development\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"project-dev-status-radio-check\">\r\n                                            <input type=\"radio\" id=\"launched\" name=\"flexRadioDefault\" onClick={() => setIsLive(true)}/>\r\n                                            <label className=\"form-label\">\r\n                                                Launched\r\n                                            </label>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Project Title<span style={{color:\"red\"}}> *</span></label>\r\n                                    <input className=\"form-input\" placeholder={title} value={title} required onChange={(event) =>setTitle(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Summary<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Enter brief description to display ( <150 characters )\" maxLength={150} value={summary} required onChange={(event) =>setSummary(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Description<span style={{color:\"red\"}}> *</span></label>\r\n                                    <textarea rows={3} className=\"form-control\" placeholder=\"Please describe your project in more detail, up to 550 characters\" maxLength={550} value={description} required onChange={(event) =>setDescription(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <div className=\"form-text-component\">\r\n                                    <label className=\"form-label\">Website</label>\r\n                                    <input className=\"form-input\" placeholder=\"www.yourpage.com\" value={website} onChange={(event) =>setWebsite(event.currentTarget.value)}/>\r\n                                </div>\r\n                                <span style={{color:\"red\"}}> * Required</span>\r\n                             \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"update-socials\">\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitter update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitter} placeholder=\" @username\" onChange={(event) =>setTwitter(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-telegram update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={telegram} placeholder=\" t.me/  LINK\" onChange={(event) =>setTelegram(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-discord update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input  className=\"input-social-text-box\"value={discord} placeholder=\" discord.gg/ LINK\" onChange={(event) =>setDiscord(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-linkedin update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={linkedIn} placeholder=\" linkedin.com/in/ Profile URL\" onChange={(event) =>setLinkedIn(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-youtube update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={youtube} placeholder=\" youtube.com/c/ channel URL\" onChange={(event) =>setYoutube(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"social-link-item\">\r\n                                <div className=\"social-input-box-group\">\r\n                                    <i className=\"fab fa-twitch update\"></i>\r\n                                    <span className=\"social-link-at-box\">@</span>\r\n                                    <input className=\"input-social-text-box\" value={twitch} placeholder=\" twitch.tv/ channel URL\" onChange={(event) =>setTwitch(event.currentTarget.value)}/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"form-button-wrapper\">\r\n                            <button className=\"submit-form btn1\" onClick={()=>{props.closeCreateProjectMenu(false)}}>Close Menu</button>\r\n                            <button className=\"submit-form btn2\" onClick={editProject}>Sumbit Changes</button>\r\n                            {isOwner && <button className=\"submit-form btn3\" onClick={deletePopUp}>Delete Project</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </>      \r\n        \r\n    )\r\n}\r\n\r\nexport default EditProject;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport './ProjectPage.css';\r\nimport ProfileCard from './ProfileCard';\r\nimport Rating from './Rating';\r\nimport Bookmark from './Bookmark';\r\nimport RatingProject from './RatingProject';\r\nimport Reviews from './Reviews';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SendMessagePopUp from './SendMessagePopUp';\r\nimport Alert from './Alert';\r\nimport EditProject from './EditProject';\r\n\r\n\r\nfunction ProjectDisplay(props) {\r\n  const { user, Moralis } = useMoralis();  \r\n\r\n  const [ owner, setOwnerProject] = useState(false);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);\r\n  const [editProjectMenu, setOpenEditProjectMenu] = useState(false);\r\n  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  \r\n  const init = 0;\r\n\r\n  const verified = (props.isVerified);\r\n  const isLive = (props.isLive);\r\n  \r\n\r\n  const checkOwnership = async() => {\r\n    if(user) {\r\n    const username = user.attributes?.username;\r\n    if( username == props.creator) {\r\n      setOwnerProject(true);\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  const verificationEmail = async() => {\r\n    const params = { projectName: props.title};\r\n    console.log(params);\r\n    try{\r\n    await Moralis.Cloud.run(\"sendVerifyEmail\", params);\r\n    console.log(\"emailSent\")\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    console.log(user);\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkOwnership(); \r\n  }, [init])\r\n\r\n    return (           \r\n      <>\r\n        <div className=\"project-page\">\r\n          <div className=\"project-page-container\">              \r\n            <div className=\"project-page-body\">\r\n              <div className=\"project-page-project-container\">\r\n                <div className=\"project-page-title\">\r\n                { verified &&\r\n                  <div>\r\n                    <i class=\"fas fa-clipboard-check\">Pro</i>\r\n                  </div>\r\n                  }\r\n                   {isLive &&\r\n                      <i class=\"fas fa-chart-line\">Live</i>                        \r\n                    }\r\n                    {!isLive &&\r\n                      <i class=\"fas fa-wrench\">InDev</i>                    \r\n                    }\r\n                  <h2>{props.title}</h2>\r\n                  <Rating\r\n                    title = {props.title}\r\n                  />\r\n                  <Bookmark\r\n                  projectTitle = {props.projectTitle}\r\n                  />\r\n                </div>\r\n                <div className=\"project-page-summary\">\r\n                  {props.summary}\r\n                </div>\r\n                <div className=\"project-page-photo\">\r\n                  <img  className=\"project-page-photo-img\" src={props.src} />\r\n                </div>\r\n          \r\n                <div className=\"project-page-description\">\r\n                  <h3>About</h3>\r\n                  \r\n                  <div className=\"project-page-links\">\r\n                  <Link className=\"website-link\" to={{ pathname: `https://${props.website}` }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n                    <SocialIconBar\r\n                      twitter={props.twitter}\r\n                      telegram={props.telegram}\r\n                      discord={props.discord}\r\n                      linkedIn={props.linkedIn}\r\n                      youtube={props.youtube}\r\n                      twitch={props.twitch}\r\n                    />\r\n                  </div>\r\n          \r\n                  <h5><img className=\"profileThumb\"src={props.creatorProfilePic} />{\" \"} {props.creator}{\" \"} {props.createdOn}</h5>\r\n                  <p>{props.description}</p>\r\n                </div>\r\n                <div className=\"ratingReviews\">\r\n                  <Reviews \r\n                  title = {props.title}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"project-page-creator-container\">\r\n                <div className=\"project-page-creator-wrapper\">\r\n                  <div className=\"project-page-creator-profile-wrapper\">\r\n                    <h4>Project Creator</h4>\r\n                    { !owner &&\r\n                    <button className=\"send-msg-button btn2\" onClick={() => userCheck()}> Send Message</button>\r\n                    }\r\n                    <ProfileCard\r\n                      username={props.creator}\r\n                      src={props.creatorProfilePic}\r\n                      bio={props.bio}\r\n                    />\r\n                    {owner &&                \r\n                        <div className=\"edit-project-btn-wrapper\">\r\n                          <button className= \"edit-project-btn btn1\" onClick={()=> setOpenEditProjectMenu(true)}>\r\n                            <i class=\"fas fa-puzzle-piece\"></i>\r\n                            <span>Edit&nbsp;Project</span>\r\n                          </button>                      \r\n                        </div>                \r\n                    }\r\n              \r\n                    { (owner && !verified) &&\r\n                      <button className=\"verify-request-button btn2\" onClick={verificationEmail}> Get Verified</button>\r\n                    }\r\n                  </div>\r\n                \r\n                {!owner &&\r\n                  <RatingProject \r\n                  projectName={props.title}\r\n                  />\r\n                }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"project-page-footer-container\">\r\n              <div className=\"project-page-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          { (!owner && sendMessagePopUpVisible) &&\r\n            <SendMessagePopUp\r\n            visible={setSendMessagePopUpVisible}\r\n            creatorProfilePic={props.creatorProfilePic}\r\n            creatorName={props.creator}\r\n            projectPic={props.src}\r\n            projectName={props.title}\r\n            />\r\n          }\r\n          {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        } \r\n        {editProjectMenu && \r\n        <EditProject \r\n        closeCreateProjectMenu={setOpenEditProjectMenu}\r\n        title={props.title}\r\n        summary={props.summary}\r\n        description={props.description}\r\n        website={props.website}\r\n        projectPhoto={props.src}\r\n        twitter={props.twitter}\r\n        telegram={props.telegram}\r\n        discord={props.discord}\r\n        linkedIn={props.linkedIn}\r\n        youtube={props.youtube}\r\n        twitch={props.twitch}\r\n        isOwner={owner}\r\n        \r\n        />}\r\n          \r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport ProjectDisplay from \"./ProjectPage\";\r\n\r\nconst ProjectData = ({ data }) => {\r\n    \r\n  const { Moralis } = useMoralis();  \r\n  const { title } = useParams();\r\n\r\n  const [ projectLoaded, setProjectLoaded ] = useState([\"\"]);\r\n  let init = 0;\r\n\r\n  const loadProject = async() => {\r\n    const params = { projectTitle: title };\r\n    const project = await Moralis.Cloud.run(\"projectData\", params);\r\n    setProjectLoaded(project);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProject();\r\n    },\r\n    [init],\r\n  );\r\n\r\n  const log = () => {\r\n    console.log(projectLoaded);\r\n  }\r\n\r\n    \r\n  return (\r\n      <>\r\n          {projectLoaded.map(project => (            \r\n            <div key={project.title} className=\"background\">                            \r\n                <ProjectDisplay\r\n                  title={project.title}\r\n                  summary={project.summary}\r\n                  src={project.projectPhoto}\r\n                  creator={project.username}\r\n                  creatorProfilePic={project.profilePic}\r\n                  bio={project.bio}\r\n                  createdOn = {project.createdOn}\r\n                  label={project.username}\r\n                  description={project.description}  \r\n                  projectTitle = {project.title}\r\n                  website={project.website}                \r\n                  twitter={project.twitter}\r\n                  telegram={project.telegram}\r\n                  discord={project.discord}\r\n                  linkedIn={project.linkedIn}\r\n                  youtube={project.youtube}\r\n                  twitch={project.twitch}\r\n                  objectId = {project.objectId}  \r\n                  isVerified = {project.isVerified}\r\n                  isLive = {project.isLive}              \r\n                />                \r\n            </div>\r\n          ))}        \r\n      </>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProjectData;","import React, {useState} from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport SaveProfile from './SaveProfile';\r\n\r\nfunction ProfileGridBox(props) {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (    \r\n        <div className=\"project-grid-box-wrapper\">\r\n            <div className=\"profile-box-header\">\r\n                <Link\r\n                    className=\"project-url-link\"\r\n                    to={`${url}/${props.username}`}\r\n                    >\r\n                        <img className=\"project-card-img\" src={props.landscapePic}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"profile-box-body\">\r\n                <div className=\"profile-box-profilepic\">\r\n                    <div className=\"profile-box-profilepic-pic\">\r\n                        <img  src={props.profilePic}  className=\"profile-box-profile-img\"/>\r\n                    </div>\r\n                    <div className=\"profile-box-creator\">\r\n                        {props.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-box-summary\">\r\n                    {props.bio}\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-box-footer\">\r\n                <div className=\"saveProfile\">\r\n                    <SaveProfile \r\n                    profileName = {props.username}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default ProfileGridBox;\r\n","import React, {useState, useEffect} from 'react';\r\nimport ProfileCard from './ProfileCard';\r\nimport './ProjectCard.css';\r\nimport './Project.css';\r\nimport { useMoralis } from 'react-moralis';\r\nimport './SearchBar.css';\r\nimport './ProjectGrid.css';\r\nimport ProfileGridBox from './ProfileGridBox';\r\n\r\nfunction LoadUsers() {\r\n  const { user, Moralis, isInitialized } = useMoralis();\r\n  const [ users, setUsers ] = useState([\"\"]);\r\n  const [ usersSaved, setUsersSaved ] = useState([\"\"]);  \r\n  const [ queryProfile, setQueryProfile] = useState(\"\");\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [ searchResults, setSearchResults] = useState();\r\n  const [ noneFound, setNoneFound] = useState(false);\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const initLoad = 0; // change later to accomodate refresh/sorting data\r\n\r\n  \r\n  const PagPrev = async() => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    await setPageNumber(prevPageNumber);\r\n  }\r\n  const PagNext = async() => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    await setPageNumber(nextPageNumber);\r\n  }\r\n\r\n  const LoadUsers = async() => {\r\n    console.log(pageNumber);\r\n    const params = { pageNum: pageNumber};\r\n    const userList = await Moralis.Cloud.run(\"loadUsers\", params);\r\n    setUsers(userList);\r\n  };\r\n\r\n  const SavedProfiles = async () => {\r\n    const savedProfiles = await Moralis.Cloud.run(\"loadSavedProfiles\");\r\n    setUsersSaved(savedProfiles);\r\n  }\r\n\r\n  const SearchProfiles = async() => {\r\n    setNoneFound(false);\r\n    const params = { username: queryProfile};\r\n    const usersFound = await Moralis.Cloud.run(\"searchUsersByName\", params);\r\n    if(usersFound != ''){\r\n      setSearchResults(usersFound);\r\n      setShowSearchResults(true);     \r\n    } else {\r\n      setNoneFound(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    LoadUsers();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized]\r\n  );  \r\n\r\n  useEffect(() => {\r\n    if(user){\r\n    SavedProfiles();\r\n    }\r\n    },\r\n    [initLoad]\r\n  );  \r\n\r\n    return (           \r\n      <>\r\n        <div className=\"background\">\r\n          <div className=\"searchbar-container\">\r\n          <div className=\"searchbar-wrapper\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"searchbar-text\" \r\n                placeholder=\"Search profiles by name\" \r\n                value={queryProfile} \r\n                onChange={(event) =>setQueryProfile(event.currentTarget.value)} \r\n                onKeyPress={(event) => { if(event.key === \"Enter\") {SearchProfiles()}}}\r\n                />\r\n              <button className=\"btn2 searchbtn\" onClick={SearchProfiles} ><i class=\"fas fa-search searchicon\"></i>Search</button>\r\n          </div>\r\n                </div>\r\n        </div>\r\n      {noneFound &&\r\n        <div className=\"cards-background\">\r\n        <h3>Search Results...<button className=\"btn1\" onClick={()=>setNoneFound(false)}>Close</button></h3> \r\n          <div className='cards__container'>\r\n              <div className='cards__wrapper'>\r\n                <div>No results found. Searches are currently case sensitive. Try something else?</div>                  \r\n            </div> \r\n          </div> \r\n        </div> \r\n        }\r\n        {showSearchResults &&\r\n          <div className=\"cards-background\"> \r\n            <div className='cards__container'>\r\n            <h3 className=\"my-projects-title\">Search Results...<button className=\"btn1\" onClick={()=>setShowSearchResults(false)}>Close</button></h3>\r\n              <div className='project-cards__wrapper'>\r\n                <div className='cards__items'>      \r\n                  {searchResults.map(userProfile => (                          \r\n                    <div key={userProfile.username} className=\"cards__item\">                                                   \r\n                      <ProfileCard\r\n                      bio={userProfile.bio}\r\n                      src={userProfile.profilePic}\r\n                      username={userProfile.username}          \r\n                      />                         \r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <React.Fragment>\r\n          <div className=\"cards\">\r\n            <div className=\"cards-background\"> \r\n\r\n              <div className=\"project-section-title\">\r\n                <h3>NEWEST PROFILES</h3>               \r\n              </div>\r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n              <div className=\"project-grid-container\">\r\n                <div className=\"project-grid-wrapper\">\r\n                  {users.map(userProfile => (\r\n                    <div key={userProfile.username} className=\"project-grid-box\">\r\n                      <ProfileGridBox\r\n                        landscapePic={userProfile.landscapePic}\r\n                        bio={userProfile.bio}\r\n                        profilePic={userProfile.profilePic}\r\n                        username={userProfile.username}           \r\n                      />\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n              </div>              \r\n              <div className=\"pagination\">\r\n                <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>\r\n                \r\n                <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n              </div>\r\n                \r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LoadUsers;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport LoadUsers from '../LoadUsers';\r\n\r\nfunction Profiles () {\r\n    return (\r\n        <>\r\n            <LoadUsers />\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default Profiles;","import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport SaveProfile from './SaveProfile';\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nfunction UserProfile(props) {\r\n    const { user, Moralis } = useMoralis();\r\n    const [isSaved, setIsSaved] = useState(props.isSaved);\r\n\r\n    const checkSavedProfile = async() => {\r\n        const params = {profileName: props.profileName}\r\n        const results = await Moralis.Cloud.run(\"checkIfSavedProfile\", params);\r\n        \r\n        if(results[0]) {\r\n            setIsSaved(true);\r\n        } \r\n    }\r\n\r\n    let init;\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        checkSavedProfile();\r\n        }\r\n        },\r\n        [init],\r\n      );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile-wrapper\">\r\n                <div className=\"profile-background\">\r\n                    <img className='landscape-pic' src={props.landscapePic} alt=\"\"/>   \r\n                </div>\r\n                <div className=\"profile-header\">                        \r\n                    <div className=\"profile-pic-container\">\r\n                        <img className=\"profile-pic\" src={props.profilePic} alt=\"\"/>                        \r\n                    </div>                        \r\n                    <div className=\"profile-summary\">\r\n                        <h2 className=\"profile-page-username\">{props.username} </h2>\r\n                        <p className=\"profile-page-bio\">{props.bio}</p>\r\n                                          \r\n                    </div>\r\n                    <div className=\"save-profile-wrapper\">\r\n                    <SaveProfile\r\n                        profileName = {props.username}\r\n                        isSaved = {isSaved}\r\n                    />\r\n                    </div>                     \r\n                </div>                \r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserProfile\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SocialIconBar from './SocialIconBar';\r\nimport './User.css';\r\n\r\nfunction AboutUser(props) {\r\n\r\n    return (\r\n        <div className=\"profile-aboutme-container\">\r\n            <div className=\"profile-aboutme-wrapper\">\r\n            <p className=\"profile-location\"><i class=\"fas fa-map-marker-alt\"></i>{props.userLocation} </p>\r\n            <Link className=\"profile-website\" to={{ pathname: (props.website) }} target=\"_blank\" aria-label='Website'><i class=\"fas fa-link\"></i>{props.website}</Link>\r\n\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">My Story</h5>\r\n                    <p className=\"profile-story-description\">{props.story}</p>\r\n                </div>\r\n                <div className=\"profile-story\">\r\n                    <h5 className=\"profile-story-title\">Skills</h5>\r\n                    <p className=\"profile-story-description\">{props.skills}</p>\r\n                </div>                \r\n            </div>            \r\n            <SocialIconBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport UserProfile from \"./UserProfile\";\r\nimport AboutUser from \"./AboutUser\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport Carousel from \"./Carousel\";\r\nimport SendMessagePopUp from \"./SendMessagePopUp\";\r\nimport Alert from \"./Alert\";\r\nimport ProjectGridBox from \"./ProjectGridBox\";\r\n\r\n\r\nconst UserProfilePage = ({ data }) => {\r\n    \r\n  const { user, Moralis,isInitialized } = useMoralis();  \r\n  const { username } = useParams();\r\n  \r\n  const [ profileLoaded, setProfileLoaded ] = useState([\"\"]);\r\n  const [ projects, setProjects ] = useState([\"\"]);\r\n  const [sendMessagePopUpVisible, setSendMessagePopUpVisible] = useState(false);  \r\n  const [ userPage, setUserPage] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  \r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertContents, setAlertContents] = useState();\r\n  \r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  \r\n  let init = 0;\r\n  \r\n  const loadProfile = async() => {\r\n    const params = { userUsername: username };\r\n    const profile = await Moralis.Cloud.run(\"userProfileData\", params);    \r\n    setProfileLoaded(profile);    \r\n    checkUserPage();\r\n  };\r\n\r\n  const loadProfileProjects = async() => {\r\n    const params = { userUsername: username, skipAmount : pageNumber };\r\n    const projectsList = await Moralis.Cloud.run(\"renderUserProjects\", params);\r\n    setProjects(projectsList);\r\n  }\r\n\r\n  \r\n  const PagPrev = () => {\r\n    if(pageNumber == 0) {\r\n      return;\r\n    }\r\n    let prevPageNumber = pageNumber - 1;\r\n    setPageNumber(prevPageNumber);\r\n  }\r\n\r\n  const PagNext = () => {\r\n    let nextPageNumber = pageNumber + 1;    \r\n    setPageNumber(nextPageNumber);\r\n  }\r\n    \r\n  const checkUserPage = () => {\r\n    const userLoaded = profileLoaded[0].username; \r\n    const userVisiter = user.attributes?.username;\r\n    if(userLoaded == userVisiter) {\r\n      setUserPage(true);\r\n    } else {\r\n      setUserPage(false);\r\n    }\r\n  }\r\n\r\n  const userCheck = async() => {\r\n    const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n    const balanceETH = eViral.balance;\r\n    const balanceBSC = beViral.balance;\r\n    if( (balanceETH == 0) && (balanceBSC == 0) ) {\r\n      setAlertContents(\r\n          <>\r\n          <div className=\"alert-popup-contents\">\r\n          You'll need to own either eViral or beViral to access this feature.\r\n          <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n          </div>\r\n          </>\r\n          );\r\n      setAlertVisible(true);\r\n    }  else if (!user.attributes?.profileCreated) {\r\n      setAlertContents(\r\n          <>\r\n      <div className=\"alert-popup-contents\">\r\n      You'll need to set up a Profile to access this feature.                \r\n      </div>\r\n      </>\r\n      ) \r\n      setAlertVisible(true);\r\n    } else {\r\n      setSendMessagePopUpVisible(true);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    loadProfile();  \r\n    }  \r\n    },\r\n    [isInitialized],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if(isInitialized){\r\n    loadProfileProjects();\r\n    }\r\n    },\r\n    [pageNumber, isInitialized]\r\n  );  \r\n\r\n\r\n  return (\r\n      <>  \r\n        <div className=\"page-container\">\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"profile-container\">                \r\n                    {profileLoaded.map(userProfile => (  \r\n                        <UserProfile\r\n                            username={userProfile.username}\r\n                            profilePic={userProfile.profilePic}\r\n                            userLocation={userProfile.userLocation}\r\n                            skills={userProfile.skills}\r\n                            website={userProfile.website}\r\n                            bio={userProfile.bio}\r\n                            createdOn = {userProfile.createdAt}\r\n                            landscapePic={userProfile.landscapePic}\r\n                            story={userProfile.story}\r\n                            twitter={userProfile.twitter}\r\n                            telegram={userProfile.telegram}\r\n                            discord={userProfile.discord}\r\n                            linkedIn={userProfile.linkedIn}\r\n                            twitch={userProfile.twitch}\r\n                            youtube={userProfile.youtube}\r\n                        />                    \r\n                    ))}   \r\n                </div>\r\n                <div className=\"sub-profile-container\">\r\n                    <div className=\"sub-profile-wrapper\">\r\n                        <div className=\"aboutme-container\">\r\n                    {!userPage &&                  \r\n                      <button \r\n                        className=\"send-msg-button btn2\" \r\n                        onClick={() => userCheck()}\r\n                      > \r\n                        Send Message\r\n                      </button>\r\n                    }\r\n                          \r\n                            <div className=\"aboutme-wrapper\">\r\n                                {profileLoaded.map(userProfile => (  \r\n                                  <AboutUser \r\n                                  website={userProfile.website}\r\n                                  story={userProfile.story}\r\n                                  userLocation={userProfile.userLocation}\r\n                                  skills={userProfile.skills}\r\n                                  website={userProfile.website}                             \r\n                                  />\r\n                                ))}  \r\n                            </div>\r\n                        </div>                    \r\n                        <div className=\"profile-action-container\">\r\n                            <div className=\"profile-action-wrapper\">\r\n                            <div className=\"project-section-title\">\r\n                                    <h3>{username}'s Projects</h3>               \r\n                                </div>\r\n                            <div className=\"project-grid-container\">\r\n                              <div className=\"my-project-grid-wrapper\">\r\n                                  {projects.map(listItem => (\r\n                                      <div key={listItem.title} className=\"project-grid-box\">\r\n                                        <ProjectGridBox\r\n                                        title={listItem.title}\r\n                                        summary={listItem.summary}\r\n                                        src={listItem.projectPhoto}\r\n                                        username={listItem.username}\r\n                                        creatorProfilePic={listItem.profilePic}\r\n                                        createdOn = {listItem.createdOn}\r\n                                        label={listItem.username}\r\n                                        path={listItem.title}\r\n                                        isVerified = {listItem.isVerified}\r\n                                        isLive = {listItem.isLive}\r\n                                        />\r\n                                    </div>\r\n                                    ))}\r\n                                  </div>\r\n                                <div className=\"pagination\">\r\n                                  <button className=\"pagination-prev\" onClick={() => PagPrev()}><i class=\"fas fa-caret-square-left\"></i>PREV</button>              \r\n                                  <button className=\"pagination-next\" onClick={() => PagNext()}>NEXT<i class=\"fas fa-caret-square-right\"></i></button>\r\n                                </div>\r\n                              </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n        { sendMessagePopUpVisible &&\r\n          <SendMessagePopUp\r\n          visible={setSendMessagePopUpVisible}\r\n          creatorProfilePic={profileLoaded[0].profilePic}\r\n          creatorName={profileLoaded[0].username}\r\n          />  \r\n        }\r\n        {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n        }\r\n        </div>     \r\n      </>\r\n  );\r\n};\r\nexport default UserProfilePage;","import React from 'react';\r\nimport './ChatPage.css';\r\n\r\nfunction ProfileMessageCard(props) {\r\n    return (\r\n        <div className=\"pmc-container\">\r\n            <div className=\"pmc-profilePic\">\r\n                <img src={props.profilePic} />\r\n            </div>\r\n            <div className=\"pmc-body\">\r\n                <h5>{props.username}</h5>\r\n                <p>RE:{props.projectName}</p>\r\n                <div className=\"pmc-updatedAt\">\r\n                    <h5>{props.updatedAt}</h5>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileMessageCard;\r\n","import React, { useState, useEffect} from 'react';\r\nimport { useMoralis } from 'react-moralis';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport './ChatPage.css';\r\nimport ProfileMessageCard from './ProfileMessageCard';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\n\r\n\r\nfunction ChatPage() {\r\n\r\n    const { user, Moralis } = useMoralis();\r\n    const [inboxUsers, setInboxUsers] = useState();\r\n    const [requestsUsers, setRequestsUsers] = useState();\r\n    const [ showInbox, setShowInbox] = useState(false);\r\n    const [ showReply, setShowReply] = useState(false);\r\n    const [ showRequests, setShowRequests] = useState(false);\r\n    const [chatContent, setChatContent] = useState();\r\n    const [ chatDisplay, setChatDisplay] = useState(false);\r\n    const [ activeChatId, setActiveChatId] = useState();\r\n    const [ processRequest, setProcessRequest] = useState(false);\r\n    const [ reply, setReply] = useState(\"\");\r\n    const [noUsers, setNoUsers] = useState(false);\r\n    const [numRequests, setNumRequests] = useState(0);\r\n    const [notifyReq, setNotifyReq] = useState(false);\r\n    \r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertContents, setAlertContents] = useState();\r\n\r\n    const deletePopUp = async () => {\r\n        setAlertContents(\r\n            <div className=\"verify-delete-popup\">\r\n                This will delete entire chat history for both parites. Are you sure you want to proceed?\r\n                <button className=\"submit-form btn3\" onClick={deleteChat}>Yes. Delete </button>\r\n                <button className=\"submit-form btn2\" onClick={setAlertVisible(false)}>Close </button>\r\n            </div>\r\n        );\r\n        setAlertVisible(true);\r\n    }\r\n\r\n    const deleteChat = async() => {\r\n        // try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            if(conversation.attributes.requestAccepted == false) {\r\n                conversation.destroy().then((object) => {\r\n                    alert(\"Chat deleted.\");\r\n                }, (error) => {\r\n                    alert(error)\r\n                });                \r\n            } else {\r\n            conversation.set('requestAccepted', false);\r\n            await conversation.save();\r\n            alert('Message removed.');\r\n            await loadInboxProfiles();\r\n            } \r\n\r\n\r\n\r\n        const params = { projectTitle: (1) }; \r\n        console.log(params);\r\n        const project = await Moralis.Cloud.run(\"getProjectByName\", params);\r\n        console.log(project);\r\n        \r\n        const currentProject = project;\r\n        currentProject.destroy().then((object) => {\r\n            alert(\"You can always create something new!\");\r\n        }, (error) => {\r\n            alert(error)\r\n        });\r\n    }\r\n\r\n    const userCheck = async() => {\r\n        const eViral = await Moralis.Web3.getERC20({tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const beViral = await Moralis.Web3.getERC20({chain:'bsc', tokenAddress: '0x7CeC018CEEF82339ee583Fd95446334f2685d24f'});\r\n        const balanceETH = eViral.balance;\r\n        const balanceBSC = beViral.balance;\r\n        const hasProfile = user?.attributes?.profileCreated;\r\n        if( (balanceETH < 100) && (balanceBSC < 100) ) {\r\n            setAlertContents(\r\n                <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to own either eViral or beViral to access this feature.\r\n                <Link to='/'><button className=\"btn2\">Buy from Home Page</button></Link>\r\n                </div>\r\n                </>\r\n                );\r\n            setAlertVisible(true);\r\n            return false;\r\n        }  else\r\n         if (!hasProfile) {\r\n                setAlertContents(\r\n                    <>\r\n                <div className=\"alert-popup-contents\">\r\n                You'll need to set up a Profile to access this feature.\r\n                <Link to='/myprofile'><button className=\"btn2\">My Profile</button></Link>\r\n                </div>\r\n                </>\r\n                ) \r\n                setAlertVisible(true);\r\n                return false;\r\n        } else {\r\n            return true;\r\n        }       \r\n    }\r\n\r\n    const init = 0;\r\n\r\n    const CheckInboxClick = async() => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showInbox) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowRequests(false);\r\n                loadInboxProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const CheckRequestsClick = async () => {\r\n        const auth = await userCheck();\r\n        if(auth) {\r\n            if(showRequests) {\r\n                setChatDisplay(false);\r\n                return;\r\n            } else {\r\n                setShowInbox(false);\r\n                loadRequestsProfiles();\r\n                setChatDisplay(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadInboxProfiles = async() => {\r\n        setNoUsers(false);\r\n        const profileCards = await Moralis.Cloud.run(\"loadInboxProfiles\");\r\n        if(profileCards !== 'undefined') {\r\n        setInboxUsers(profileCards);\r\n        setShowInbox(true);\r\n        setShowReply(true);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n    ///////////////////////////////////////////////////// profiles that have sent messages to!\r\n    const loadRequestsProfiles = async() => { \r\n        setNoUsers(false); \r\n        setShowInbox(false);      \r\n        const profileCards = await Moralis.Cloud.run(\"loadRequestsProfiles\");\r\n        console.log(profileCards.length);\r\n        if(profileCards !== 'undefined') {\r\n        setRequestsUsers(profileCards);\r\n        setShowRequests(true);\r\n        setShowReply(false);\r\n        }\r\n        if(profileCards.length == 0) {\r\n            setNoUsers(true);\r\n        }\r\n    }\r\n\r\n    const numberOfRequests = async() => {\r\n        const numRequests = await Moralis.Cloud.run(\"loadNumRequests\");\r\n        console.log(numRequests);\r\n        setNumRequests(numRequests);\r\n        if(numRequests > 0) {\r\n            setNotifyReq(true);\r\n        }\r\n    }\r\n\r\n    const loadRequestMessage = async(chatId, permission) => {\r\n        setActiveChatId(0);\r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadRequestMessage\", params);\r\n        setChatContent(requestMessage);\r\n        setProcessRequest(permission);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n    }\r\n\r\n    const loadInboxMessage = async(chatId) => {  //rename to load conversation and adjust to show all messages associated with conversation from new to old\r\n        setActiveChatId(0);   \r\n        const params = { chatId: chatId};\r\n        const requestMessage =  await Moralis.Cloud.run(\"loadInboxMessage\", params);\r\n        setChatContent(requestMessage);        \r\n        await activateChatListener(chatId);\r\n        setChatDisplay(true);\r\n        setActiveChatId(chatId);\r\n        setShowInbox(false); \r\n        setShowReply(true);\r\n    }\r\n\r\n    \r\n    const activateChatListener = async(chatId) => {   \r\n        let query = new Moralis.Query('Messages');\r\n        let subscription = await query.subscribe(); \r\n        subscription.on('create', async(object) => {            \r\n            const parent = object.get('parent');            \r\n            const parentId = parent.id;\r\n            let objProfilePic = object.get('fromProfilePic');   \r\n            const objDate = object.get('date');\r\n            const objMessage = object.get('message');\r\n            const objTime = object.get('time');\r\n            if(parentId == chatId) {\r\n                setChatContent(prev => [...prev, \r\n                    {\r\n                        date: objDate,\r\n                        fromProfilePic: objProfilePic,\r\n                        time: objTime,\r\n                        message: objMessage\r\n                    }]);\r\n                }             \r\n        });\r\n    }\r\n\r\n    const acceptRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', true);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request accpeted! Conversation moved to inbox.\");\r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles();\r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const declineRequest = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];\r\n            conversation.set('requestAccepted', false);\r\n            conversation.set('notifyUser2', false);\r\n            await conversation.save();\r\n            alert(\"Request declined and removed.\"); \r\n            setChatDisplay(false);\r\n            setShowRequests(false);\r\n            await loadRequestsProfiles(); \r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    const sendReply = async() => {\r\n        try{\r\n            const Conversation = Moralis.Object.extend('Conversation');\r\n            const findConversation = new Moralis.Query(Conversation);\r\n            findConversation.equalTo('objectId', activeChatId)\r\n            const conversationFound = await findConversation.find();\r\n            const conversation = conversationFound[0];           \r\n            let toUser;\r\n            if (conversation.attributes?.user1.id == user.id) {\r\n                toUser = conversation.attributes?.user2.id;\r\n            } else {\r\n                toUser = conversation.attributes?.user1.id;\r\n            }            \r\n            const msgDate = new Date().toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'});\r\n            const msgTime = new Date().toLocaleTimeString('en-US');\r\n            const params = { from: user.attributes?.username, fromProfilePic: user.attributes?.profilePic?._url, to: toUser, date: msgDate, time: msgTime, message: reply, chatId: conversation.id};        \r\n            const message = await Moralis.Cloud.run(\"sendReply\", params); \r\n            const relation = conversation.relation(\"messages\");\r\n            relation.add(message);\r\n            await conversation.save();   \r\n            setReply(\"\");               \r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n        loadInboxProfiles();\r\n        numberOfRequests();\r\n        }\r\n    }, [init])\r\n    \r\n\r\n    return (\r\n        <div className=\"chat-background\">\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-sidebar\">\r\n                    <div className=\"chat-messaging-header-left\">                       \r\n                        <button className=\"btn2 header-left-btn-msg\" onClick={() => CheckInboxClick()}><h5>Messages</h5></button>\r\n                        <>\r\n                            <button className=\"btn2 header-left-btn-req\"onClick={() => CheckRequestsClick()}>\r\n                                <span><h5>Requests</h5></span>\r\n                            {notifyReq && <span className=\"numRequests\">{numRequests}</span>}\r\n                            </button>\r\n                        </>\r\n                    </div>\r\n                    <div className=\"chat-messaging-sidebar-content\">\r\n                        { showInbox &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                            {noUsers && <div className=\"chat-messaging-header-left-empty\" onClick={() => setShowInbox(false)}>No Messages</div>}\r\n                            {inboxUsers.map(profile => (                          \r\n                            <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadInboxMessage(profile.chatId)}>                                                   \r\n                                <ProfileMessageCard\r\n                                    username={profile.username}\r\n                                    profilePic={profile.profilePic}\r\n                                    projectName={profile.projectName}\r\n                                    updatedAt={profile.date}\r\n                                    lastAction={profile.projectName}                                \r\n                                />                            \r\n                            </div>\r\n                            ))}\r\n                        </ul>\r\n                        }\r\n                        { showRequests &&\r\n                        <ul className=\"chat-messaging-sidebar-from\">\r\n                        {noUsers && <div className=\"chat-messaging-header-left-empty \" onClick={() => setShowRequests(false)}>No Requests</div>}\r\n                        {requestsUsers.map(profile => (                          \r\n                          <div key={profile.username} className=\"chat-messaging-profiles\" onClick={() => loadRequestMessage(profile.chatId, profile.permission)}>                                                   \r\n                              <ProfileMessageCard\r\n                                username={profile.username}\r\n                                profilePic={profile.profilePic}\r\n                                projectName={profile.projectName}\r\n                                updatedAt={profile.date}\r\n                                lastAction={profile.projectName}                                \r\n                              />                            \r\n                          </div>\r\n                        ))}\r\n                        </ul>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-messaging\">   \r\n                    <div className=\"chat-messaging-header-right\">\r\n                        {/* <div className=\"show-chat-sidebar\">\r\n                            <button className=\"show-chat-sidebar-btn\">SideBar</button>\r\n                        </div> */}\r\n                        <h5>Welcome </h5>\r\n                            <div className=\"chat-messaging-welcome-user\">\r\n                                <img className=\"chat-messaging-welcome-user-profilePic\" src={user.attributes?.profilePic?._url} />\r\n                                <h5>{user.attributes?.username}</h5>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"chat-messaging-content-container\">\r\n                            { chatDisplay && \r\n                                <div className=\"chat-messaging-content-messageList\">                                                               \r\n                                    <div className=\"chat-messaging-content-message-wrapper\">\r\n                                        <ScrollableFeed forceScroll={true}  >                                            \r\n                                            {chatContent.map(message => (\r\n                                                <div key={message.username} className=\"chat-messaging-content-messageLoaded\">\r\n                                                    <div className=\"chat-messaging-content-message\">\r\n                                                        <div className=\"chat-messaging-content-profilePic-wrapper\">\r\n                                                            <img className=\"chat-messaging-content-profilePic\" src={message.fromProfilePic} />\r\n                                                        </div>\r\n                                                        <div className=\"chat-messaging-content-message-text\">\r\n                                                            <p>{message.message}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"chat-messaging-content-message-time\">\r\n                                                        <p>{message.date}, {message.time}</p>\r\n                                                    </div>\r\n                                            </div>\r\n                                            ))}\r\n                                        </ScrollableFeed>\r\n                                    </div>\r\n                                </div>\r\n                            }   \r\n                        \r\n                    </div>\r\n                    <div className=\"chat-messaging-footer\">\r\n                        {showReply &&\r\n                        <>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\" Reply...\" \r\n                                className=\"chat-messaging-reply-text\" \r\n                                value={reply} \r\n                                onChange={(event) =>setReply(event.currentTarget.value)} \r\n                                onKeyPress={(event) => { if(event.key === \"Enter\") {sendReply()}}}>\r\n\r\n                            </input>\r\n                            <div className=\"chat-messaging-reply-button\">\r\n                                <i class=\"fas fa-paper-plane\" onClick={() => sendReply()}></i>\r\n                            </div>\r\n                            <div className=\"chat-messaging-trash-button\">\r\n                                <i class=\"fas fa-trash-alt\" onClick={() => deletePopUp()}></i>\r\n                            </div>\r\n                            \r\n                        </>\r\n                        }\r\n                        { (showRequests && chatDisplay) &&\r\n                        <div className=\"chat-messaging-footer-request-options\">\r\n                            {!processRequest &&\r\n                            <h6>Waiting for user to accept request.</h6>\r\n                            }\r\n                            {processRequest &&\r\n                            <>\r\n                            <button className=\"btn2\" onClick={()=> acceptRequest()}>Accept</button>\r\n                            <button className=\"btn3\" onClick={()=> declineRequest()}>Decline</button>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {alertVisible &&\r\n            <Alert \r\n            visible={setAlertVisible}\r\n            content={alertContents}            \r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\n\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/pages/home';\nimport Platform from './components/pages/platform';\nimport MyProfile from './components/pages/myprofile';\nimport Projects from './components/pages/projects';\nimport Wallet from './components/pages/wallet';\nimport ProjectData from './components/ProjectData';\nimport Profiles from './components/pages/profiles';\nimport UserProfilePage from './components/UserProfileData';\nimport ChatPage from './components/ChatPage';\n\n\nfunction App() {\n  const history = useHistory();\n  \n  return (\n    <>\n      <Router history= {history}>\n      <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/platform' exact component={Platform} />\n          <Route path='/projects' exact component={Projects} />\n          <Route path='/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/profiles' exact component={Profiles} />\n          <Route path='/profiles/:username'>\n            <UserProfilePage />\n          </Route>\n          <Route path='/myprofile' exact component={MyProfile} />\n          <Route path='/myprofile/projects/:title'>\n            <ProjectData />\n          </Route>\n          <Route path='/chat' exact component={ChatPage} />\n          <Route path='/wallet' exact component={Wallet} />\n        </Switch>      \n      </Router>\n      \n    </>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MoralisProvider } from \"react-moralis\";\n\nconst appId='TTxOqOgA9vSsj2z84WeDRi4i1iDgbo9kruLWqfxd';\nconst serverUrl='https://siixq6taugjh.moralis.io:2053/server';\n\nReactDOM.render(\n  <MoralisProvider appId={appId} serverUrl={serverUrl}>\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}